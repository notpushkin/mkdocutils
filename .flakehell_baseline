mkdocutils/theme.py	env = jinja2.Environment(loader=loader, auto_reload=False)	8969fe41f736d850f1e351210a176445
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	f57c7b41027803375a9e5ad44962edef
mkdocutils/theme.py	"Please upgrade to a current version of the theme.".format(name)	f57c7b41027803375a9e5ad44962edef
mkdocutils/theme.py	"The available installed themes are: {}".format(name, parent_theme, ', '.join(themes))	f57c7b41027803375a9e5ad44962edef
mkdocutils/theme.py	""" Recursively load theme and any parent themes. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/theme.py	""" Return a Jinja environment for the theme. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/theme.py	""" Recursively load theme and any parent themes. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/theme.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/theme.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/theme.py	def __getitem__(self, key):	c08cfd6bcadd443680a3509324828e06
mkdocutils/theme.py	def __setitem__(self, key, value):	c08cfd6bcadd443680a3509324828e06
mkdocutils/theme.py	def __contains__(self, item):	c08cfd6bcadd443680a3509324828e06
mkdocutils/theme.py	def __iter__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/theme.py	def __init__(self, name=None, **user_config):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/theme.py	""" Recursively load theme and any parent themes. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/theme.py	""" Return a Jinja environment for the theme. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/theme.py	""" Recursively load theme and any parent themes. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/theme.py	""" Return a Jinja environment for the theme. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/theme.py	import logging	665bccf2f09fa375b040ce46ce828371
mkdocutils/theme.py	from mkdocutils.config.base import ValidationError	665bccf2f09fa375b040ce46ce828371
mkdocutils/theme.py	import jinja2	006d6d7b193ae5fd18451299b208f0a8
mkdocutils/theme.py	mkdocs_templates = os.path.join(package_dir, 'templates')	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	if 'custom_dir' in user_config:	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	self.dirs.append(user_config.pop('custom_dir'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	self.static_templates.update(user_config.pop('static_templates', []))	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	file_path = os.path.join(theme_dir, 'mkdocs_theme.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	with open(file_path, 'rb') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	parent_theme = theme_config.pop('extends', None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	"The available installed themes are: {}".format(name, parent_theme, ', '.join(themes))	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	self.static_templates.update(theme_config.pop('static_templates', []))	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	env.filters['tojson'] = filters.tojson	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	env.filters['url'] = filters.url_filter	05c198233765297c55773dd4f0aef7c0
mkdocutils/theme.py	return "{}(name='{}', dirs={}, static_templates={}, {})".format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	2aa143575238f1af11a86b153c7d5976
mkdocutils/theme.py	"The theme '{}' does not appear to have a configuration file. "	2aa143575238f1af11a86b153c7d5976
mkdocutils/theme.py	"The theme '{}' inherits from '{}', which does not appear to be installed. "	2aa143575238f1af11a86b153c7d5976
mkdocutils/theme.py	log.debug("Loaded theme configuration for '%s' from '%s': %s", name, file_path, theme_config)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/theme.py	"The theme '{}' inherits from '{}', which does not appear to be installed. "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/theme.py	"The available installed themes are: {}".format(name, parent_theme, ', '.join(themes))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/theme.py	self._vars = {}	e547b106dab483aa6c10f26900427c97
mkdocutils/theme.py	def __setitem__(self, key, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/theme.py	def __contains__(self, item):	e547b106dab483aa6c10f26900427c97
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/theme.py	with open(file_path, 'rb') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/theme.py	except OSError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/theme.py	def _load_theme_config(self, name):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/theme.py	class Theme:	f31baaad8f55f667a091708188847d5b
mkdocutils/theme.py	', '.join('{}={}'.format(k, repr(v)) for k, v in self._vars.items())	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/theme.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/theme.py	class Theme:	72a53e4dd0380c8467f821e52f447566
mkdocutils/theme.py	return "{}(name='{}', dirs={}, static_templates={}, {})".format(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/theme.py	log.debug("Loaded theme configuration for '%s' from '%s': %s", name, file_path, theme_config)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/theme.py	"Please upgrade to a current version of the theme.".format(name)	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/theme.py	"The available installed themes are: {}".format(name, parent_theme, ', '.join(themes))	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/theme.py	class Theme:	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/__init__.py	#!/usr/bin/env python	a11d6622ca6e0c7751d7965682ddf0e9
mkdocutils/__init__.py	__version__ = '1.2.dev1'	05c198233765297c55773dd4f0aef7c0
mkdocutils/__init__.py	__version__ = '1.2.dev1'	3543d0b0fd8f02031a323501d61cbf2f
mkdocutils/__init__.py	0	7929fdcea3800aaa36a2eafac2b9393f
mkdocutils/__init__.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/__main__.py	gh_deploy.gh_deploy(cfg, message=message, force=force, ignore_version=ignore_version, shell=shell)	0e0faa72b3e009316b67348c1ca17d0c
mkdocutils/__main__.py	click.option('--use-directory-urls/--no-directory-urls', is_flag=True, default=None, help=use_directory_urls_help)	f57c7b41027803375a9e5ad44962edef
mkdocutils/__main__.py	message=f'%(prog)s, version %(version)s from { PKG_DIR } (Python { PYTHON_VERSION })'	f57c7b41027803375a9e5ad44962edef
mkdocutils/__main__.py	**kwargs	97cf6d04996c71b1150d68e0da3f8e6a
mkdocutils/__main__.py	**kwargs	97cf6d04996c71b1150d68e0da3f8e6a
mkdocutils/__main__.py	)	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	)	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	)	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	# Avoid ugly, unhelpful traceback	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	# Avoid ugly, unhelpful traceback	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py		5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/__main__.py	)	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/__main__.py	# Avoid ugly, unhelpful traceback	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/__main__.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/__main__.py	def add_options(opts):	f6551d049dd665ae3820e11789e171fd
mkdocutils/__main__.py	def verbose_option(f):	f6551d049dd665ae3820e11789e171fd
mkdocutils/__main__.py	def quiet_option(f):	f6551d049dd665ae3820e11789e171fd
mkdocutils/__main__.py	def __init__(self, log_name='mkdocs', level=logging.INFO):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/__main__.py	"""\n    MkDocs - Project documentation with Markdown.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/__main__.py	"""Run the builtin development server"""	4f68ce023f32856b1976963fb418ded9
mkdocutils/__main__.py	"""Build the MkDocs documentation"""	4f68ce023f32856b1976963fb418ded9
mkdocutils/__main__.py	''' Maintain logging level.'''	6540613b778e2767c10a6088e9c839eb
mkdocutils/__main__.py	''' Maintain logging level.'''	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/__main__.py	"""Run the builtin development server"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/__main__.py	"""Build the MkDocs documentation"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/__main__.py	"""Deploy your documentation to GitHub Pages"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/__main__.py	"""Create a new MkDocs project"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/__main__.py	"""\n    MkDocs - Project documentation with Markdown.\n    """	b225eb9fe6655019ac47e85220cba430
mkdocutils/__main__.py	import logging	665bccf2f09fa375b040ce46ce828371
mkdocutils/__main__.py	from mkdocutils import __version__	665bccf2f09fa375b040ce46ce828371
mkdocutils/__main__.py	from mkdocutils import utils	665bccf2f09fa375b040ce46ce828371
mkdocutils/__main__.py	from mkdocutils import exceptions	665bccf2f09fa375b040ce46ce828371
mkdocutils/__main__.py	from mkdocutils import config	665bccf2f09fa375b040ce46ce828371
mkdocutils/__main__.py	import click	006d6d7b193ae5fd18451299b208f0a8
mkdocutils/__main__.py	def __init__(self, log_name='mkdocs', level=logging.INFO):	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	return click.option('-v', '--verbose',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	return click.option('-v', '--verbose',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	help='Enable verbose output',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	return click.option('-q', '--quiet',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	return click.option('-q', '--quiet',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	help='Silence warnings',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-f', '--config-file', type=click.File('rb'), help=config_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-f', '--config-file', type=click.File('rb'), help=config_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-f', '--config-file', type=click.File('rb'), help=config_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-s', '--strict', is_flag=True, default=None, help=strict_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-s', '--strict', is_flag=True, default=None, help=strict_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-t', '--theme', type=click.Choice(theme_choices), help=theme_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('-t', '--theme', type=click.Choice(theme_choices), help=theme_help),	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	click.option('--use-directory-urls/--no-directory-urls', is_flag=True, default=None, help=use_directory_urls_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.group(context_settings={'help_option_names': ['-h', '--help']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.group(context_settings={'help_option_names': ['-h', '--help']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.group(context_settings={'help_option_names': ['-h', '--help']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	'-V', '--version',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	'-V', '--version',	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	message=f'%(prog)s, version %(version)s from { PKG_DIR } (Python { PYTHON_VERSION })'	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-a', '--dev-addr', help=dev_addr_help, metavar='<IP:PORT>')	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-a', '--dev-addr', help=dev_addr_help, metavar='<IP:PORT>')	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-a', '--dev-addr', help=dev_addr_help, metavar='<IP:PORT>')	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--livereload', 'livereload', flag_value='livereload', help=reload_help, default=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--livereload', 'livereload', flag_value='livereload', help=reload_help, default=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--livereload', 'livereload', flag_value='livereload', help=reload_help, default=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--no-livereload', 'livereload', flag_value='no-livereload', help=no_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--no-livereload', 'livereload', flag_value='no-livereload', help=no_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--no-livereload', 'livereload', flag_value='no-livereload', help=no_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--dirtyreload', 'livereload', flag_value='dirty', help=dirty_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--dirtyreload', 'livereload', flag_value='dirty', help=dirty_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--dirtyreload', 'livereload', flag_value='dirty', help=dirty_reload_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--watch-theme', help=watch_theme_help, is_flag=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-w', '--wait', help=wait_help, default=0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-w', '--wait', help=wait_help, default=0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	logging.getLogger('tornado').setLevel(logging.WARNING)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-c', '--clean/--dirty', is_flag=True, default=True, help=clean_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-c', '--clean/--dirty', is_flag=True, default=True, help=clean_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-d', '--site-dir', type=click.Path(), help=site_dir_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-d', '--site-dir', type=click.Path(), help=site_dir_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-c', '--clean/--dirty', is_flag=True, default=True, help=clean_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-c', '--clean/--dirty', is_flag=True, default=True, help=clean_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-m', '--message', help=commit_message_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-m', '--message', help=commit_message_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-b', '--remote-branch', help=remote_branch_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-b', '--remote-branch', help=remote_branch_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-r', '--remote-name', help=remote_name_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-r', '--remote-name', help=remote_name_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--force', is_flag=True, help=force_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--ignore-version', is_flag=True, help=ignore_version_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('--shell', is_flag=True, help=shell_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-d', '--site-dir', type=click.Path(), help=site_dir_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	@click.option('-d', '--site-dir', type=click.Path(), help=site_dir_help)	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	if __name__ == '__main__':  # pragma: no cover	05c198233765297c55773dd4f0aef7c0
mkdocutils/__main__.py	''' Maintain logging level.'''	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/__main__.py	dirty_reload_help = "Enable the live reloading in the development server, but only re-build files that have changed"	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	"Github Pages remote branch. Commit {sha} and MkDocs {version} are available as expansions")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	ignore_version_help = "Ignore check that build is not being deployed with an older version of MkDocs."	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	click.option('--use-directory-urls/--no-directory-urls', is_flag=True, default=None, help=use_directory_urls_help)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	@click.option('--livereload', 'livereload', flag_value='livereload', help=reload_help, default=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	@click.option('--no-livereload', 'livereload', flag_value='no-livereload', help=no_reload_help)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	def gh_deploy_command(clean, message, remote_branch, remote_name, force, ignore_version, shell, **kwargs):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	gh_deploy.gh_deploy(cfg, message=message, force=force, ignore_version=ignore_version, shell=shell)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/__main__.py	def callback(ctx, param, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/__main__.py	def callback(ctx, param, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/__main__.py	def callback(ctx, param, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/__main__.py	def callback(ctx, param, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/__main__.py	def inner(f):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	for i in reversed(opts):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	f = i(f)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	def verbose_option(f):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	def quiet_option(f):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	except (exceptions.ConfigurationError, OSError) as e:  # pragma: no cover	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	except exceptions.ConfigurationError as e:  # pragma: no cover	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	except exceptions.ConfigurationError as e:  # pragma: no cover	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/__main__.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/__main__.py	def gh_deploy_command(clean, message, remote_branch, remote_name, force, ignore_version, shell, **kwargs):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/__main__.py	def serve_command(dev_addr, livereload, **kwargs):	9d6938f1cb84a9fcb5e90ba81c575734
mkdocutils/__main__.py	def gh_deploy_command(clean, message, remote_branch, remote_name, force, ignore_version, shell, **kwargs):	9d6938f1cb84a9fcb5e90ba81c575734
mkdocutils/__main__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/__main__.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/__main__.py	message=f'%(prog)s, version %(version)s from { PKG_DIR } (Python { PYTHON_VERSION })'	3bcac0142b4ef33ce46618524f22618c
mkdocutils/__main__.py	class State:	72a53e4dd0380c8467f821e52f447566
mkdocutils/__main__.py	return click.option('-v', '--verbose',	dde2d343d968d51e07a47f88e4afec60
mkdocutils/__main__.py	return click.option('-q', '--quiet',	dde2d343d968d51e07a47f88e4afec60
mkdocutils/__main__.py	@click.version_option(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/__main__.py	"localhost:8000)")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"on any warnings.")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"Github Pages remote branch. Commit {sha} and MkDocs {version} are available as expansions")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"overrides the value specified in config")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"overrides the value specified in config")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"Ignored when live reload is not used.")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	is_flag=True,	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	is_flag=True,	da0ecb40a77d639d4395abb934231fc5
mkdocutils/__main__.py	"localhost:8000)")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	"on any warnings.")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	"Github Pages remote branch. Commit {sha} and MkDocs {version} are available as expansions")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	"overrides the value specified in config")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	"overrides the value specified in config")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	"Ignored when live reload is not used.")	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	callback=callback)(f)	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	callback=callback)(f)	2e73035b2427e1ee107ec03464e45203
mkdocutils/__main__.py	formatter = logging.Formatter("%(levelname)-7s -  %(message)s ")	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/__main__.py	message=f'%(prog)s, version %(version)s from { PKG_DIR } (Python { PYTHON_VERSION })'	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/__main__.py	"localhost:8000)")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	"on any warnings.")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	"Github Pages remote branch. Commit {sha} and MkDocs {version} are available as expansions")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	"overrides the value specified in config")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	"overrides the value specified in config")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	"Ignored when live reload is not used.")	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5aab3340e13b51ca518016d5b753ed33
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5aab3340e13b51ca518016d5b753ed33
mkdocutils/__main__.py	raise SystemExit('\n' + str(e))	5aab3340e13b51ca518016d5b753ed33
mkdocutils/__main__.py	def inner(f):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/__main__.py	def callback(ctx, param, value):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/__main__.py	def callback(ctx, param, value):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/__main__.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	f57c7b41027803375a9e5ad44962edef
mkdocutils/plugins.py	""" Load config from a dict of options. Returns a tuple of (errors, warnings)."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	""" Load config from a dict of options. Returns a tuple of (errors, warnings)."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	""" Register a method for an event. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	""" Register a method for an event. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	"""\n        Run all registered methods of an event.\n\n        `item` is the object to be modified or replaced and returned by the event method.\n        If it isn't given the event method creates a new object to be returned.\n        All other keywords are variables for context, but would not generally\n        be modified by the event method.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	"""\n        Run all registered methods of an event.\n\n        `item` is the object to be modified or replaced and returned by the event method.\n        If it isn't given the event method creates a new object to be returned.\n        All other keywords are variables for context, but would not generally\n        be modified by the event method.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	"""\n        Run all registered methods of an event.\n\n        `item` is the object to be modified or replaced and returned by the event method.\n        If it isn't given the event method creates a new object to be returned.\n        All other keywords are variables for context, but would not generally\n        be modified by the event method.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/plugins.py	""" Return a dict of all installed Plugins by name. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/plugins.py	""" Load config from a dict of options. Returns a tuple of (errors, warnings)."""	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/plugins.py	"""\n        Run all registered methods of an event.\n\n        `item` is the object to be modified or replaced and returned by the event method.\n        If it isn't given the event method creates a new object to be returned.\n        All other keywords are variables for context, but would not generally\n        be modified by the event method.\n        """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/plugins.py	def __setitem__(self, key, value, **kwargs):	c08cfd6bcadd443680a3509324828e06
mkdocutils/plugins.py	def __init__(self, *args, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/plugins.py	"""\nImplements the plugin API for MkDocs.\n\n"""	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/plugins.py	""" Return a dict of all installed Plugins by name. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/plugins.py	""" Load config from a dict of options. Returns a tuple of (errors, warnings)."""	4f68ce023f32856b1976963fb418ded9
mkdocutils/plugins.py	"""\n        Run all registered methods of an event.\n\n        `item` is the object to be modified or replaced and returned by the event method.\n        If it isn't given the event method creates a new object to be returned.\n        All other keywords are variables for context, but would not generally\n        be modified by the event method.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/plugins.py	""" Return a dict of all installed Plugins by name. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/plugins.py	""" Load config from a dict of options. Returns a tuple of (errors, warnings)."""	6540613b778e2767c10a6088e9c839eb
mkdocutils/plugins.py	""" Register a method for an event. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/plugins.py	import pkg_resources	665bccf2f09fa375b040ce46ce828371
mkdocutils/plugins.py	from mkdocutils.config.base import Config	006d6d7b193ae5fd18451299b208f0a8
mkdocutils/plugins.py		bff64f8b4dc7623ae2e5137f1197ee19
mkdocutils/plugins.py	log = logging.getLogger('mkdocs.plugins')	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'config', 'pre_build', 'files', 'nav', 'env', 'pre_template', 'template_context',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'post_template', 'pre_page', 'page_read_source', 'page_markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'post_template', 'pre_page', 'page_read_source', 'page_markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'post_template', 'pre_page', 'page_read_source', 'page_markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'post_template', 'pre_page', 'page_read_source', 'page_markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'page_content', 'page_context', 'post_page', 'post_build', 'serve', 'build_error'	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	plugins = pkg_resources.iter_entry_points(group='mkdocs.plugins')	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'{0}.{1} only accepts values which are instances of {2}.{3} '	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	'sublcasses'.format(self.__module__, self.__name__,	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	for event_name in (x for x in dir(value) if x.startswith('on_')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/plugins.py	def __setitem__(self, key, value, **kwargs):	e547b106dab483aa6c10f26900427c97
mkdocutils/plugins.py	def run_event(self, name, item=None, **kwargs):	e547b106dab483aa6c10f26900427c97
mkdocutils/plugins.py	result = method(item, **kwargs)	e547b106dab483aa6c10f26900427c97
mkdocutils/plugins.py	result = method(**kwargs)	e547b106dab483aa6c10f26900427c97
mkdocutils/plugins.py	item = result	e547b106dab483aa6c10f26900427c97
mkdocutils/plugins.py	self.events = {x: [] for x in EVENTS}	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/plugins.py	for event_name in (x for x in dir(value) if x.startswith('on_')):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/plugins.py	class BasePlugin:	72a53e4dd0380c8467f821e52f447566
mkdocutils/plugins.py	EVENTS = (	dde2d343d968d51e07a47f88e4afec60
mkdocutils/plugins.py	EVENTS = (	dde2d343d968d51e07a47f88e4afec60
mkdocutils/plugins.py	'{0}.{1} only accepts values which are instances of {2}.{3} '	dde2d343d968d51e07a47f88e4afec60
mkdocutils/plugins.py	BasePlugin.__module__, BasePlugin.__name__))	da0ecb40a77d639d4395abb934231fc5
mkdocutils/plugins.py	BasePlugin.__module__, BasePlugin.__name__))	2e73035b2427e1ee107ec03464e45203
mkdocutils/plugins.py	BasePlugin.__module__, BasePlugin.__name__))	2e73035b2427e1ee107ec03464e45203
mkdocutils/plugins.py	'sublcasses'.format(self.__module__, self.__name__,	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/plugins.py	for event_name in (x for x in dir(value) if x.startswith('on_')):	5527fab8e8ddb8b14c2419d8da24d7a4
mkdocutils/plugins.py	class PluginCollection(OrderedDict):	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/plugins.py	for event_name in (x for x in dir(value) if x.startswith('on_')):	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/plugins.py	self.config = Config(schema=self.config_scheme, config_file_path=config_file_path)	eade3b1ec4ad145c56473464c726d890
mkdocutils/plugins.py	BasePlugin.__module__, BasePlugin.__name__))	48bbb24d05482e1b99f618d980e347e9
mkdocutils/exceptions.py	from click import ClickException	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/exceptions.py	"""Base exceptions for all MkDocs Exceptions"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/exceptions.py	"""Error in configuration"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/exceptions.py	"""Error during the build process"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/exceptions.py	"""Error in a plugin"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	return yaml.load(source, Loader)	b3878f2453497f15abd39811e7e77ba4
mkdocutils/utils/__init__.py	"""\n    Wrap PyYaml's loader so we can extend it to suit our needs.\n\n    Load all strings as unicode.\n    https://stackoverflow.com/a/2967461/3609487\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Wrap PyYaml's loader so we can extend it to suit our needs.\n\n    Load all strings as unicode.\n    https://stackoverflow.com/a/2967461/3609487\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n        Override the default string handling function to always return\n        unicode objects.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n        Override the default string handling function to always return\n        unicode objects.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return the modified time of the supplied file. If the file does not exists zero is returned.\n    see build_pages for use.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Reduce duplicate items in a list and preserve order """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Copy source_path to output_path, making sure any parent directories exist.\n\n    The output_path may be a directory.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Copy source_path to output_path, making sure any parent directories exist.\n\n    The output_path may be a directory.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Write content to output_path, making sure any parent directories exist.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Write content to output_path, making sure any parent directories exist.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Remove the content of a directory recursively but not the directory itself.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Map a source file path to an output html path.\n\n    Paths like 'index.md' will be converted to 'index.html'\n    Paths like 'about.md' will be converted to 'about/index.html'\n    Paths like 'api-guide/core.md' will be converted to 'api-guide/core/index.html'\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Map a source file path to an output html path.\n\n    Paths like 'index.md' will be converted to '/'\n    Paths like 'about.md' will be converted to '/about/'\n    Paths like 'api-guide/core.md' will be converted to '/api-guide/core/'\n\n    If `use_directory_urls` is `False`, returned URLs will include the a trailing\n    `index.html` rather than just returning the directory path.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Map a source file path to an output html path.\n\n    Paths like 'index.md' will be converted to '/'\n    Paths like 'about.md' will be converted to '/about/'\n    Paths like 'api-guide/core.md' will be converted to '/api-guide/core/'\n\n    If `use_directory_urls` is `False`, returned URLs will include the a trailing\n    `index.html` rather than just returning the directory path.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is a Markdown file.\n\n    https://superuser.com/questions/249436/file-extension-for-markdown-files\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTTP error template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return given url relative to other.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return given url relative to other.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Return a URL relative to the given page or using the base. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Return a URL relative to the given page or using the base. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Return a URL relative to the given page or using the base. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return a list of URLs relative to the given page or using the base.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return a list of URLs relative to the given page or using the base.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Return a list of URLs relative to the given page or using the base.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""Convert a system path to a URL."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Return the directory of an installed theme by name. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	""" Return a page tile obtained from a directory name. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Get the title of a Markdown document. The title in this case is considered\n    to be a H1 that occurs before any other content in the document.\n    The procedure is then to iterate through the lines, stopping at the first\n    non-whitespace content. If it is a title, return that, otherwise return\n    None.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Given a list of paths, convert them into a nested structure that will match\n    the pages config.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/__init__.py	"""\n    Wrap PyYaml's loader so we can extend it to suit our needs.\n\n    Load all strings as unicode.\n    https://stackoverflow.com/a/2967461/3609487\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n        Override the default string handling function to always return\n        unicode objects.\n        """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return the modified time of the supplied file. If the file does not exists zero is returned.\n    see build_pages for use.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Returns the number of seconds since the epoch.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Returns an aware datetime object.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Returns the displayable date string.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Reduce duplicate items in a list and preserve order """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Map a source file path to an output html path.\n\n    Paths like 'index.md' will be converted to 'index.html'\n    Paths like 'about.md' will be converted to 'about/index.html'\n    Paths like 'api-guide/core.md' will be converted to 'api-guide/core/index.html'\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Map a source file path to an output html path.\n\n    Paths like 'index.md' will be converted to '/'\n    Paths like 'about.md' will be converted to '/about/'\n    Paths like 'api-guide/core.md' will be converted to '/api-guide/core/'\n\n    If `use_directory_urls` is `False`, returned URLs will include the a trailing\n    `index.html` rather than just returning the directory path.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is a Markdown file.\n\n    https://superuser.com/questions/249436/file-extension-for-markdown-files\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTTP error template.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return given url relative to other.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Return a URL relative to the given page or using the base. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Return a list of URLs relative to the given page or using the base.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""Convert a system path to a URL."""	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Return the directory of an installed theme by name. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Return a dict of all installed themes as (name, entry point) pairs. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""Return a list of all installed themes by name."""	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Return a page tile obtained from a directory name. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	"""\n    Given a list of paths, convert them into a nested structure that will match\n    the pages config.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/__init__.py	""" Return a dict of all installed themes as (name, entry point) pairs. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/utils/__init__.py	def filter(self, record):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/utils/__init__.py	"""\n    Write content to output_path, making sure any parent directories exist.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Remove the content of a directory recursively but not the directory itself.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTML file.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Return True if the given file path is an HTTP error template.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Return given url relative to other.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""\n    Return a list of URLs relative to the given page or using the base.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/utils/__init__.py	"""Convert a system path to a URL."""	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	""" Return the directory of an installed theme by name. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	""" Return a dict of all installed themes as (name, entry point) pairs. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	"""Return a list of all installed themes by name."""	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	"""\n    Get the title of a Markdown document. The title in this case is considered\n    to be a H1 that occurs before any other content in the document.\n    The procedure is then to iterate through the lines, stopping at the first\n    non-whitespace content. If it is a title, return that, otherwise return\n    None.\n    """	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	4f68ce023f32856b1976963fb418ded9
mkdocutils/utils/__init__.py	""" Counts all WARNING level log messages. """	1ff9191a823a3db022816cb4b8f349fb
mkdocutils/utils/__init__.py	"""\n        Override the default string handling function to always return\n        unicode objects.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	"""\n        Define a custom loader derived from the global loader to leave the\n        global loader unaltered.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	"""\n    Return the modified time of the supplied file. If the file does not exists zero is returned.\n    see build_pages for use.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	"""\n    Get the title of a Markdown document. The title in this case is considered\n    to be a H1 that occurs before any other content in the document.\n    The procedure is then to iterate through the lines, stopping at the first\n    non-whitespace content. If it is a title, return that, otherwise return\n    None.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	"""\n    Given a list of paths, convert them into a nested structure that will match\n    the pages config.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/__init__.py	""" Reduce duplicate items in a list and preserve order """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	""" Return a URL relative to the given page or using the base. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	""" Return the directory of an installed theme by name. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	""" Return a dict of all installed themes as (name, entry point) pairs. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	""" Return a page tile obtained from a directory name. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	""" Counts all WARNING level log messages. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/__init__.py	"""\n        Override the default string handling function to always return\n        unicode objects.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	"""\n        Define a custom loader derived from the global loader to leave the\n        global loader unaltered.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	""" Reduce duplicate items in a list and preserve order """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	"""\n    Get the title of a Markdown document. The title in this case is considered\n    to be a H1 that occurs before any other content in the document.\n    The procedure is then to iterate through the lines, stopping at the first\n    non-whitespace content. If it is a title, return that, otherwise return\n    None.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	"""\n    Given a list, look for dictionary with a key matching key and return it's\n    value. If it doesn't exist, create it with the value of an empty list and\n    return that.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	"""\n    Given a list of paths, convert them into a nested structure that will match\n    the pages config.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/__init__.py	"""\n    Returns the number of seconds since the epoch.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/utils/__init__.py	"""\n    Returns an aware datetime object.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/utils/__init__.py	"""\n    Returns the displayable date string.\n\n    Support SOURCE_DATE_EPOCH environment variable for reproducible builds.\n    See https://reproducible-builds.org/specs/source-date-epoch/\n    """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/utils/__init__.py	'.markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.mdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.mkdn',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.mkd',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	Loader.add_constructor('tag:yaml.org,2002:str', construct_yaml_str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	Loader.add_constructor('!ENV', construct_env_tag)	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if hasattr(source, 'close'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	source_date_epoch = os.environ.get('SOURCE_DATE_EPOCH')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	source_date_epoch = os.environ.get('SOURCE_DATE_EPOCH')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return get_build_datetime().strftime('%Y-%m-%d')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	with open(output_path, 'wb') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if entry.startswith('.'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if os.path.basename(path) == 'index':	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return path + '.html'	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return "/".join((path, 'index.html'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	url = '/' + path.replace(os.path.sep, '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	url = '/' + path.replace(os.path.sep, '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return url[:-len('index.html')]	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return any(fnmatch.fnmatch(path.lower(), '*{}'.format(x)) for x in markdown_extensions)	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.htm',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.htm',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	'.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	_ERROR_TEMPLATE_RE = re.compile(r'^\d{3}\.html?$')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if other != '.':	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	other = parts[0] if '.' in parts[1] else other	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return relurl + '/' if url.endswith('/') else relurl	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return relurl + '/' if url.endswith('/') else relurl	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	def normalize_url(path, page=None, base=''):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	path = path_to_url(path or '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if parsed.scheme or parsed.netloc or path.startswith(('/', '#')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if parsed.scheme or parsed.netloc or path.startswith(('/', '#')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	def create_media_urls(path_list, page=None, base=''):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return '/'.join(path.split('\\'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return '/'.join(path.split('\\'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	dist='mkdocs', group='mkdocs.themes',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	dist='mkdocs', group='mkdocs.themes',	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	for theme in pkg_resources.iter_entry_points(group='mkdocs.themes'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if theme.name in builtins and theme.dist.key != 'mkdocs':	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	theme.name, ','.join(multiple_packages), theme.dist.key,	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	title = title.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	title = title.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	title = title.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	title = title.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	lines = markdown_src.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	lines = markdown_src.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	lines = markdown_src.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	lines = markdown_src.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	lines = markdown_src.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	if not line.startswith('# '):	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return line.lstrip('# ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/__init__.py	return any(fnmatch.fnmatch(path.lower(), '*{}'.format(x)) for x in markdown_extensions)	2aa143575238f1af11a86b153c7d5976
mkdocutils/utils/__init__.py	"The theme {} is a builtin theme but {} provides a theme "	2aa143575238f1af11a86b153c7d5976
mkdocutils/utils/__init__.py	"""\n    Return the modified time of the supplied file. If the file does not exists zero is returned.\n    see build_pages for use.\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/utils/__init__.py	return any(fnmatch.fnmatch(path.lower(), '*{}'.format(x)) for x in markdown_extensions)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/utils/__init__.py	item for item in data_set if	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/__init__.py	def write_file(content, output_path):	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/__init__.py	with open(output_path, 'wb') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/utils/__init__.py	return any(fnmatch.fnmatch(path.lower(), '*{}'.format(x)) for x in markdown_extensions)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/utils/__init__.py	def filter(self, record):	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/utils/__init__.py	0	7a01b7b02eb3440efdcb665099db1ffd
mkdocutils/utils/__init__.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/utils/__init__.py	def nest_paths(paths):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/utils/__init__.py	return any(fnmatch.fnmatch(path.lower(), '*{}'.format(x)) for x in markdown_extensions)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/utils/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/utils/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/utils/__init__.py	log.warning(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/utils/__init__.py	return get_build_datetime().strftime('%Y-%m-%d')	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/utils/__init__.py	"The theme %s is provided by the Python packages "	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/utils/__init__.py	return	e34f470a8d825420fa24828f48aa1535
mkdocutils/utils/__init__.py	"with the same name".format(theme.name, theme.dist.key),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/utils/__init__.py	"'%s'. The one in %s will be used.",	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/utils/__init__.py	return path + '.html'	5aab3340e13b51ca518016d5b753ed33
mkdocutils/utils/__init__.py	url = '/' + path.replace(os.path.sep, '/')	5aab3340e13b51ca518016d5b753ed33
mkdocutils/utils/__init__.py	return relurl + '/' if url.endswith('/') else relurl	5aab3340e13b51ca518016d5b753ed33
mkdocutils/utils/__init__.py	0	7929fdcea3800aaa36a2eafac2b9393f
mkdocutils/utils/__init__.py	if hasattr(source, 'close'):	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/utils/__init__.py	shutil.rmtree(path, True)	6fc0710dce16c6e1799118a4381459af
mkdocutils/utils/__init__.py	def construct_yaml_str(self, node):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/utils/__init__.py	class Loader(loader):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/utils/__init__.py	node = {key: new_branch}	96653724fef5905fbbb49faf685b887f
mkdocutils/utils/__init__.py	branch.append(node)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/utils/__init__.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/utils/__init__.py	return 0.0	de1d378bab0f506ff72b1e5ce370cc90
mkdocutils/utils/__init__.py	return posixpath.join(base, path)	de1d378bab0f506ff72b1e5ce370cc90
mkdocutils/utils/__init__.py	return ext in [	b77af03d9bc24709c1887a7666cd8942
mkdocutils/utils/__init__.py	return ext in [	b77af03d9bc24709c1887a7666cd8942
mkdocutils/utils/__init__.py	multiple_packages = [themes[theme.name].dist.key, theme.dist.key]	4312e304e08f3ba5073d71ce074109bc
mkdocutils/utils/__init__.py	return node[key]	4312e304e08f3ba5073d71ce074109bc
mkdocutils/utils/__init__.py	self.count += 1	eade3b1ec4ad145c56473464c726d890
mkdocutils/utils/__init__.py	return os.path.dirname(os.path.abspath(theme.load().__file__))	48bbb24d05482e1b99f618d980e347e9
mkdocutils/utils/filters.py	return normalize_url(value, page=context['page'], base=context['base_url'])	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/filters.py	return normalize_url(value, page=context['page'], base=context['base_url'])	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/filters.py	return normalize_url(value, page=context['page'], base=context['base_url'])	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/filters.py	import json	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/utils/filters.py	def tojson(obj, **kwargs):	f6551d049dd665ae3820e11789e171fd
mkdocutils/utils/filters.py	""" A Template filter to normalize URLs. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/utils/filters.py	""" A Template filter to normalize URLs. """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/utils/filters.py	return normalize_url(value, page=context['page'], base=context['base_url'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/filters.py	return normalize_url(value, page=context['page'], base=context['base_url'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/filters.py	def tojson(obj, **kwargs):	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/filters.py	def url_filter(context, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/meta.py	except Exception:	16fb016246141685732a7fce42b3d8cc
mkdocutils/utils/meta.py	data = yaml.load(m.group(1), SafeLoader)	b3878f2453497f15abd39811e7e77ba4
mkdocutils/utils/meta.py	"""\n    Extract meta-data from a text document.\n\n    Returns a tuple of document and a data dict.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/utils/meta.py	"""\n    Extract meta-data from a text document.\n\n    Returns a tuple of document and a data dict.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/utils/meta.py	"""\nCopyright (c) 2015, Waylan Limberg\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or other\nmaterials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\nMultiMarkdown Meta-Data\n\nExtracts, parses and transforms MultiMarkdown style data from documents.\n\n"""	5a59635b17df7d9398147b064bba0f04
mkdocutils/utils/meta.py	"""\nCopyright (c) 2015, Waylan Limberg\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or other\nmaterials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may\nbe used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\nMultiMarkdown Meta-Data\n\nExtracts, parses and transforms MultiMarkdown style data from documents.\n\n"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/utils/meta.py	r'^-{3}[ \t]*\n(.*?\n)(?:\.{3}|-{3})[ \t]*\n', re.UNICODE | re.DOTALL,	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	META_RE = re.compile(r'^[ ]{0,3}(?P<key>[A-Za-z0-9_-]+):\s*(?P<value>.*)')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	META_MORE_RE = re.compile(r'^([ ]{4}|\t)(\s*)(?P<value>.*)')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	doc = doc[m.end():].lstrip('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	lines = doc.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	lines = doc.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	lines = doc.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	lines = doc.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	lines = doc.replace('\r\n', '\n').replace('\r', '\n').split('\n')	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	if line.strip() == '':	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	key = m1.group('key').lower().strip()	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	value = m1.group('value').strip()	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	data[key] += ' {}'.format(value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	data[key] += ' {}'.format(m2.group('value').strip())	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	data[key] += ' {}'.format(m2.group('value').strip())	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	return '\n'.join(lines).lstrip('\n'), data	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	return '\n'.join(lines).lstrip('\n'), data	05c198233765297c55773dd4f0aef7c0
mkdocutils/utils/meta.py	data[key] += ' {}'.format(value)	2aa143575238f1af11a86b153c7d5976
mkdocutils/utils/meta.py	data[key] += ' {}'.format(m2.group('value').strip())	2aa143575238f1af11a86b153c7d5976
mkdocutils/utils/meta.py	data = {}	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/meta.py	data = yaml.load(m.group(1), SafeLoader)	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/meta.py	data = {}	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/meta.py	value = m1.group('value').strip()	e547b106dab483aa6c10f26900427c97
mkdocutils/utils/meta.py	m = YAML_RE.match(doc)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/utils/meta.py	def get_data(doc):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/utils/meta.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/utils/meta.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/utils/meta.py	def get_data(doc):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/utils/meta.py	0	12a3962311fbf56c42c2c5c2687cae83
mkdocutils/utils/meta.py	pass	8b1910e663f03d6276ee78813014e34d
mkdocutils/utils/meta.py	from yaml import CSafeLoader as SafeLoader	00b2aa607685a21b174c21a32bfefa33
mkdocutils/utils/meta.py	from yaml import SafeLoader	00b2aa607685a21b174c21a32bfefa33
mkdocutils/utils/meta.py	from yaml import SafeLoader	96653724fef5905fbbb49faf685b887f
mkdocutils/utils/meta.py	data[key] += ' {}'.format(value)	4312e304e08f3ba5073d71ce074109bc
mkdocutils/utils/meta.py	data[key] = value	4312e304e08f3ba5073d71ce074109bc
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Perform a full site build. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Perform a full site build. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Perform a full site build. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	""" Check if the site directory contains stale files from a previous build. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/commands/build.py	""" Check if the site directory contains stale files from a previous build. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/commands/build.py	""" Perform a full site build. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/commands/build.py	import gzip	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/commands/build.py	def filter(self, record):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/commands/build.py	def __init__(self):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/commands/build.py	"""\n    Return the template context for a given page or template.\n    """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	"""\n    Return rendered output for given template as a string.\n    """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	""" Check if the site directory contains stale files from a previous build. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/build.py	''' Avoid logging duplicate messages. '''	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Build a template using the theme environment. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Build user templates which are not part of the theme. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Read page content from docs_dir and render Markdown. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Pass a Page to theme template and write output to site_dir. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Perform a full site build. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	""" Check if the site directory contains stale files from a previous build. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/commands/build.py	''' Avoid logging duplicate messages. '''	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/commands/build.py	def get_context(nav, files, config, page=None, base_url=''):	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	base_url = utils.get_relative_url('.', page.url)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['extra_javascript'], page, base_url,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	extra_css = utils.create_media_urls(config['extra_css'], page, base_url)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'nav': nav,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'pages': files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'base_url': base_url,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'extra_css': extra_css,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'extra_javascript': extra_javascript,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'mkdocs_version': mkdocs.__version__,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'build_date_utc': utils.get_build_datetime(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'config': config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'page': page,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	template = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'pre_template', template, template_name=name, config=config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	base_url = urlparse(config['site_url'] or '/').path	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	base_url = urlparse(config['site_url'] or '/').path	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	base_url = utils.get_relative_url('.', name)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	context = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'template_context', context, template_name=name, config=config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	output = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'post_template', output, template_name=name, config=config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	output_path = os.path.join(config['site_dir'], template_name)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	utils.write_file(output.encode('utf-8'), output_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	if template_name == 'sitemap.xml':	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	gz_filename = '{}.gz'.format(output_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	with open(gz_filename, 'wb') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	with gzip.GzipFile(fileobj=f, filename=gz_filename, mode='wb', mtime=timestamp) as gz_buf:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	gz_buf.write(output.encode('utf-8'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	with open(file.abs_src_path, 'r', encoding='utf-8', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	with open(file.abs_src_path, 'r', encoding='utf-8', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	with open(file.abs_src_path, 'r', encoding='utf-8', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	utils.write_file(output.encode('utf-8'), file.abs_dest_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	page = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'pre_page', page, config=config, files=files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	page.markdown = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'page_markdown', page.markdown, page=page, config=config, files=files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	page.content = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'page_content', page.content, page=page, config=config, files=files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	if 'template' in page.meta:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	template = env.get_template(page.meta['template'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	template = env.get_template('main.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	context = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'page_context', context, page=page, config=config, nav=nav,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	output = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'post_page', output, page=page, config=config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'utf-8', errors='xmlcharrefreplace',	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'utf-8', errors='xmlcharrefreplace',	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config = config['plugins'].run_event('config', config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config = config['plugins'].run_event('config', config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('pre_build', config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('pre_build', config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	utils.clean_directory(config['site_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['site_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	if dirty and site_directory_contains_stale_files(config['site_dir']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	env = config['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	files = config['plugins'].run_event('files', files, config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	files = config['plugins'].run_event('files', files, config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	nav = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'nav', nav, config=config, files=files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	env = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'env', env, config=config, files=files,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	for template in config['theme'].static_templates:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	for template in config['extra_templates']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('post_build', config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('post_build', config=config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	if config['strict'] and utils.warning_filter.count:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	'\nExited with {} warnings in strict mode.'.format(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	log.info('Documentation built in %.2f seconds', time() - start)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('build_error', error=e)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	config['plugins'].run_event('build_error', error=e)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	raise SystemExit('\n' + str(e))	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/build.py	''' Avoid logging duplicate messages. '''	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/commands/build.py	log.debug("Building theme template: {}".format(template_name))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	"Template skipped: '{}' not found in theme directories.".format(template_name),	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	gz_filename = '{}.gz'.format(output_path)	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	"Template skipped: '{}' generated empty output.".format(template_name),	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	log.debug("Building extra template: {}".format(template_name))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	"Template skipped: '{}' not found in docs_dir.".format(template_name),	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	log.warning("Error reading template '{}': {}".format(template_name, e))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	"Template skipped: '{}' generated empty output.".format(template_name),	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	log.error("Error reading page '{}': {}".format(page.file.src_path, e))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	log.debug("Building page {}".format(page.file.src_path))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	"Page skipped: '{}'. Generated empty output.".format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	log.error("Error building page '{}': {}".format(page.file.src_path, e))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	'\nExited with {} warnings in strict mode.'.format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/build.py	'utf-8', errors='xmlcharrefreplace',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/commands/build.py	page.file.src_path,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/commands/build.py	utils.warning_filter.count,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/commands/build.py	"Template skipped: '{}' not found in theme directories.".format(template_name),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	with gzip.GzipFile(fileobj=f, filename=gz_filename, mode='wb', mtime=timestamp) as gz_buf:	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	# When --dirty is used, only build the page if the file has been modified since the	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	"A 'dirty' build is being performed, this will likely lead to inaccurate navigation and other"	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	" links within your site. This option is designed for site development purposes only.",	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	# First gather all data from all files/pages to ensure all data is consistent across all pages.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	# Start writing files to site_dir now that all data is gathered. Note that order matters. Files	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	# with lower precedence get written first so that files with higher precedence can overwrite them.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	return True if os.path.exists(site_directory) and os.listdir(site_directory) else False	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/build.py	import mkdocutils	4b374f2b2194bacc472f05764d971130
mkdocutils/commands/build.py	'mkdocs_version': mkdocs.__version__,	a363746844a71e72369229f9d7914606
mkdocutils/commands/build.py	file = files.get_file_from_path(template_name)	e547b106dab483aa6c10f26900427c97
mkdocutils/commands/build.py	page.content = config['plugins'].run_event(	e547b106dab483aa6c10f26900427c97
mkdocutils/commands/build.py	for file in files.documentation_pages():	e547b106dab483aa6c10f26900427c97
mkdocutils/commands/build.py	for file in doc_files:	e547b106dab483aa6c10f26900427c97
mkdocutils/commands/build.py	with open(gz_filename, 'wb') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	with open(file.abs_src_path, 'r', encoding='utf-8', errors='strict') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	except Exception as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	except Exception as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	except Exception as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	except Exception as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/build.py	def filter(self, record):	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/commands/build.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/commands/build.py	template = config['plugins'].run_event(	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/commands/build.py	config = config['plugins'].run_event('config', config)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/commands/build.py	def _build_theme_template(template_name, env, files, config, nav):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/build.py	def build(config, live_server=False, dirty=False):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/build.py	def _build_page(page, config, doc_files, nav, env, dirty=False):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/commands/build.py	def build(config, live_server=False, dirty=False):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/commands/build.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/commands/build.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/commands/build.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/commands/build.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/commands/build.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/commands/build.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/commands/build.py	def _build_page(page, config, doc_files, nav, env, dirty=False):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/commands/build.py	def build(config, live_server=False, dirty=False):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/commands/build.py	0	12a3962311fbf56c42c2c5c2687cae83
mkdocutils/commands/build.py	class DuplicateFilter:	72a53e4dd0380c8467f821e52f447566
mkdocutils/commands/build.py	log.debug("Gzipping template: %s", template_name)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/build.py	"Building documentation to directory: %s",	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/build.py	log.info('Documentation built in %.2f seconds', time() - start)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/build.py	" links within your site. This option is designed for site development purposes only.",	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/build.py	return output	ba6fd6b4fdc76c43d4ddf5a6a913dd67
mkdocutils/commands/build.py	log.debug("Reading: " + file.src_path)	5aab3340e13b51ca518016d5b753ed33
mkdocutils/commands/build.py	raise SystemExit('\n' + str(e))	5aab3340e13b51ca518016d5b753ed33
mkdocutils/commands/build.py	from time import time	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/build.py	for template in config['extra_templates']:	96653724fef5905fbbb49faf685b887f
mkdocutils/commands/build.py	for file in doc_files:	96653724fef5905fbbb49faf685b887f
mkdocutils/commands/build.py	_build_extra_template(template, files, config, nav)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/commands/build.py	_build_page(file.page, config, doc_files, nav, env, dirty)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/commands/build.py	return True if os.path.exists(site_directory) and os.listdir(site_directory) else False	e64b1d716dd46efb8932055d6420fca5
mkdocutils/commands/build.py	if not dirty:	b416328c8f165de4b9ade93e191034c3
mkdocutils/commands/build.py	template = env.get_template(page.meta['template'])	4312e304e08f3ba5073d71ce074109bc
mkdocutils/commands/build.py	'mkdocs_version': mkdocs.__version__,	48bbb24d05482e1b99f618d980e347e9
mkdocutils/commands/gh_deploy.py	import subprocess	31d8e32d555bf82a8bdc0043f2362435
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	bb37c95273ac407300912c45533cf3e4
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	bb37c95273ac407300912c45533cf3e4
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	bb37c95273ac407300912c45533cf3e4
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	bb37c95273ac407300912c45533cf3e4
mkdocutils/commands/gh_deploy.py	log.error("Failed to deploy to GitHub with error: \n{}".format(e.message))	fc321cd149a5ad8a4916ffc9350e0a90
mkdocutils/commands/gh_deploy.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/commands/gh_deploy.py	def gh_deploy(config, message=None, force=False, ignore_version=False, shell=False):	f6551d049dd665ae3820e11789e171fd
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--is-inside-work-tree'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--is-inside-work-tree'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--is-inside-work-tree'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--short', 'HEAD'], cwd=repo_path,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--short', 'HEAD'], cwd=repo_path,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--short', 'HEAD'], cwd=repo_path,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'rev-parse', '--short', 'HEAD'], cwd=repo_path,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	sha = stdout.decode('utf-8').strip()	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	url = stdout.decode('utf-8').strip()	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	if 'github.com/' in url:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	host, path = url.split('github.com/', 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	elif 'github.com:' in url:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	host, path = url.split('github.com:', 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	msg = stdout.decode('utf-8').strip()	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	r'\d+(\.\d+)+((a|b|rc)\d+)?(\.post\d+)?(\.dev\d+)?', msg, re.X | re.I,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'Version check skipped: No version specified in previous deployment.',	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'Previous deployment was done with MkDocs version {}; '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'you are deploying with a newer version ({})'.format(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'Deployment terminated: Previous deployment was made with MkDocs version {}; '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'you are attempting to deploy with an older version ({}). Use --ignore-version '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'to deploy anyway.'.format(previousv, currentv),	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'Cannot deploy - this directory does not appear to be a git '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'repository',	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	remote_branch = config['remote_branch']	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	remote_name = config['remote_name']	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	config['site_dir'], config['remote_branch'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	config['site_dir'], config['remote_branch'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	config['site_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	cname_file = os.path.join(config['site_dir'], 'CNAME')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	cname_file = os.path.join(config['site_dir'], 'CNAME')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	with(open(cname_file, 'r')) as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'Based on your CNAME file, your documentation should be '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'available shortly at: http://%s', cname_host,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'NOTE: Your DNS records must be configured appropriately for '	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	'your CNAME URL to work.',	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	log.info('Your documentation should be available shortly.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	username, repo = path.split('/', 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	if repo.endswith('.git'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	repo = repo[:-len('.git')]	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	url = 'https://{}.github.io/{}/'.format(username, repo)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	log.info('Your documentation should shortly be available at: ' + url)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/gh_deploy.py	'Previous deployment was done with MkDocs version {}; '	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/gh_deploy.py	'Deployment terminated: Previous deployment was made with MkDocs version {}; '	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/gh_deploy.py	log.error("Failed to deploy to GitHub with error: \n{}".format(e.message))	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/gh_deploy.py	url = 'https://{}.github.io/{}/'.format(username, repo)	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/gh_deploy.py	'you are attempting to deploy with an older version ({}). Use --ignore-version '	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/gh_deploy.py	import mkdocutils	4b374f2b2194bacc472f05764d971130
mkdocutils/commands/gh_deploy.py	currentv = parse_version(mkdocs.__version__)	a363746844a71e72369229f9d7914606
mkdocutils/commands/gh_deploy.py	message = message.format(version=mkdocs.__version__, sha=sha)	a363746844a71e72369229f9d7914606
mkdocutils/commands/gh_deploy.py	m = re.search(	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/gh_deploy.py	except ghp_import.GhpError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/gh_deploy.py	with(open(cname_file, 'r')) as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/gh_deploy.py	def _get_remote_url(remote_name):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/gh_deploy.py	def _check_version(branch):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/gh_deploy.py	def gh_deploy(config, message=None, force=False, ignore_version=False, shell=False):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/gh_deploy.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/commands/gh_deploy.py	with(open(cname_file, 'r')) as f:	d44dba10f5d58dcf9edf00f09e6ac8ba
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/gh_deploy.py	proc = subprocess.Popen(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/gh_deploy.py	log.info(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/gh_deploy.py	default_message = """Deployed {sha} with MkDocs version: {version}"""	12213f9970974604dd114ca7192d434e
mkdocutils/commands/gh_deploy.py	remote = "remote.%s.url" % remote_name	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/gh_deploy.py	['git', 'show', '-s', '--format=%s', 'refs/heads/{}'.format(branch)],	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/gh_deploy.py	"Copying '%s' to '%s' branch and pushing to GitHub.",	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/gh_deploy.py	'Based on your CNAME file, your documentation should be '	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/gh_deploy.py	'you are deploying with a newer version ({})'.format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	'you are attempting to deploy with an older version ({}). Use --ignore-version '	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	'to deploy anyway.'.format(previousv, currentv),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	'repository',	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	'available shortly at: http://%s', cname_host,	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	'your CNAME URL to work.',	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/commands/gh_deploy.py	return sha	ba6fd6b4fdc76c43d4ddf5a6a913dd67
mkdocutils/commands/gh_deploy.py	log.info('Your documentation should shortly be available at: ' + url)	5aab3340e13b51ca518016d5b753ed33
mkdocutils/commands/gh_deploy.py	currentv = parse_version(mkdocs.__version__)	48bbb24d05482e1b99f618d980e347e9
mkdocutils/commands/gh_deploy.py	message = message.format(version=mkdocs.__version__, sha=sha)	48bbb24d05482e1b99f618d980e347e9
mkdocutils/commands/new.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/commands/new.py	def new(output_dir):	f6551d049dd665ae3820e11789e171fd
mkdocutils/commands/new.py	config_text = 'site_name: My Docs\n'	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	docs_dir = os.path.join(output_dir, 'docs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	config_path = os.path.join(output_dir, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	index_path = os.path.join(docs_dir, 'index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	log.info('Project already exists.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	log.info('Creating project directory: %s', output_dir)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	log.info('Writing config file: %s', config_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	with open(config_path, 'w', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	with open(config_path, 'w', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	log.info('Writing initial docs: %s', index_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	with open(index_path, 'w', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	with open(index_path, 'w', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/new.py	with open(config_path, 'w', encoding='utf-8') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/new.py	with open(index_path, 'w', encoding='utf-8') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/new.py	log.info('Creating project directory: %s', output_dir)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/new.py	log.info('Writing config file: %s', config_path)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/new.py	log.info('Writing initial docs: %s', index_path)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/new.py	with open(index_path, 'w', encoding='utf-8') as f:	96653724fef5905fbbb49faf685b887f
mkdocutils/commands/new.py	f.write(index_text)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/commands/serve.py	**kwargs	97cf6d04996c71b1150d68e0da3f8e6a
mkdocutils/commands/serve.py	theme_dir=None, livereload='livereload', watch_theme=False, wait=0, **kwargs	a69d5752df54d3d5d1e7a576b3071d69
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	):	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/commands/serve.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/commands/serve.py	"""\n    Start the MkDocs development server\n\n    By default it will serve the documentation on http://localhost:8000/ and\n    it will rebuild the documentation and refresh the page automatically\n    whenever a file is edited.\n    """	4f68ce023f32856b1976963fb418ded9
mkdocutils/commands/serve.py	"""\n    Start the MkDocs development server\n\n    By default it will serve the documentation on http://localhost:8000/ and\n    it will rebuild the documentation and refresh the page automatically\n    whenever a file is edited.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/commands/serve.py	error_page = '{}.html'.format(status_code)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	server.watch(config['docs_dir'], builder, delay=delay)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	server.watch(config['config_file_path'], builder, delay=delay)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	for d in config['theme'].dirs:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	server = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	'serve', server, config=config, builder=builder,	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	log.info('Running at: http://%s:%s/', host, port)	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	log.info('Hold ctrl+c to quit.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	log.info('Stopping server...')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	theme_dir=None, livereload='livereload', watch_theme=False, wait=0, **kwargs	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	site_dir = tempfile.mkdtemp(prefix='mkdocs_')	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	config['site_url'] = 'http://{}/'.format(config['dev_addr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	config['site_url'] = 'http://{}/'.format(config['dev_addr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	config['site_url'] = 'http://{}/'.format(config['dev_addr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	live_server = livereload in ['dirty', 'livereload']	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	live_server = livereload in ['dirty', 'livereload']	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	dirty = livereload == 'dirty'	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	host, port = config['dev_addr']	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	if livereload in ['livereload', 'dirty']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	if livereload in ['livereload', 'dirty']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/commands/serve.py	error_page = '{}.html'.format(status_code)	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/serve.py	config['site_url'] = 'http://{}/'.format(config['dev_addr'])	2aa143575238f1af11a86b153c7d5976
mkdocutils/commands/serve.py	def _get_handler(site_dir, StaticFileHandler):	7611267c36b67e3145eba35e054f0e79
mkdocutils/commands/serve.py	if not isinstance(asyncio.get_event_loop_policy(), WindowsSelectorEventLoopPolicy):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/serve.py	return [(handlers[0][0], _get_handler(site_dir, livereload.handlers.StaticFileHandler), handlers[0][2])]	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/commands/serve.py	for d in config['theme'].dirs:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/commands/serve.py	0	7a01b7b02eb3440efdcb665099db1ffd
mkdocutils/commands/serve.py	def serve(	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/commands/serve.py	def _livereload(host, port, config, builder, site_dir, watch_theme, delay):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/commands/serve.py	def serve(	9dd04fc5237e6559a07c3822527de64a
mkdocutils/commands/serve.py	return [(handlers[0][0], _get_handler(site_dir, livereload.handlers.StaticFileHandler), handlers[0][2])]	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/commands/serve.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/commands/serve.py	import livereload.handlers	e3f3f81f4f88cd2c4dad1bf0173585e6
mkdocutils/commands/serve.py	def serve(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/serve.py	_livereload(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/commands/serve.py	log.info('Running at: http://%s:%s/', host, port)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/commands/serve.py	pass  # Can't assign a policy which doesn't exist.	8b1910e663f03d6276ee78813014e34d
mkdocutils/commands/serve.py	def builder():	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/commands/serve.py	class WebHandler(StaticFileHandler):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/commands/serve.py	class LiveReloadServer(Server):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/commands/serve.py	import asyncio	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	from asyncio import WindowsSelectorEventLoopPolicy	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	from tornado.template import Loader	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	from livereload import Server	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	import livereload.handlers	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	from tornado import ioloop	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	from tornado import web	00b2aa607685a21b174c21a32bfefa33
mkdocutils/commands/serve.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/commands/serve.py	if status_code in (404, 500):	b77af03d9bc24709c1887a7666cd8942
mkdocutils/commands/serve.py	live_server = livereload in ['dirty', 'livereload']	b77af03d9bc24709c1887a7666cd8942
mkdocutils/commands/serve.py	if livereload in ['livereload', 'dirty']:	b77af03d9bc24709c1887a7666cd8942
mkdocutils/contrib/search/search_index.py	import subprocess	31d8e32d555bf82a8bdc0043f2362435
mkdocutils/contrib/search/search_index.py	p = subprocess.Popen(	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/contrib/search/search_index.py	p = subprocess.Popen(	bb37c95273ac407300912c45533cf3e4
mkdocutils/contrib/search/search_index.py	'location': loc	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/search_index.py	loc=url	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/search_index.py	loc=abs_url + toc_item.url	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/search_index.py	'config': self.config	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/search_index.py	stderr=subprocess.PIPE	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/search_index.py	"""\n        Given a table of contents and HTML ID, iterate through\n        and return the matched item in the TOC.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Given a table of contents and HTML ID, iterate through\n        and return the matched item in the TOC.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        A simple wrapper to add an entry, dropping bad characters.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        A simple wrapper to add an entry, dropping bad characters.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        A simple wrapper to add an entry, dropping bad characters.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Create a set of entries in the index for a page. One for\n        the page itself and then one for each of its' heading\n        tags.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""Called at the start of every HTML tag."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""Called at the start of every HTML tag."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""Called at the end of every HTML tag."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Called for the text contents of each tag.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/search_index.py	"""\n        Given a table of contents and HTML ID, iterate through\n        and return the matched item in the TOC.\n        """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/contrib/search/search_index.py	"""python to json conversion"""	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/contrib/search/search_index.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/contrib/search/search_index.py	def stripped_html(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/contrib/search/search_index.py	def __eq__(self, other):	c08cfd6bcadd443680a3509324828e06
mkdocutils/contrib/search/search_index.py	def __init__(self, **config):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/contrib/search/search_index.py	def __init__(self, text=None, id_=None, title=None):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/contrib/search/search_index.py	def __init__(self, *args, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/contrib/search/search_index.py	"""\n        A simple wrapper to add an entry, dropping bad characters.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/contrib/search/search_index.py	"""\n        Called for the text contents of each tag.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/contrib/search/search_index.py	"""\n        Create a set of entries in the index for a page. One for\n        the page itself and then one for each of its' heading\n        tags.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/contrib/search/search_index.py	"""Called at the start of every HTML tag."""	4f68ce023f32856b1976963fb418ded9
mkdocutils/contrib/search/search_index.py	"""Called at the end of every HTML tag."""	4f68ce023f32856b1976963fb418ded9
mkdocutils/contrib/search/search_index.py	"""\n        Called for the text contents of each tag.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/contrib/search/search_index.py	"""\n    Search index is a collection of pages and sections (heading\n    tags and their following content are sections).\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n        Given a table of contents and HTML ID, iterate through\n        and return the matched item in the TOC.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n        Create a set of entries in the index for a page. One for\n        the page itself and then one for each of its' heading\n        tags.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n    Used by the ContentParser class to capture the information we\n    need when it is parsing the HMTL.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n    Given a block of HTML, group the content under the preceding\n    heading tags which can then be used for creating an index\n    for that section.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/contrib/search/search_index.py	"""\n    Search index is a collection of pages and sections (heading\n    tags and their following content are sections).\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n        Given a table of contents and HTML ID, iterate through\n        and return the matched item in the TOC.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n        Create a set of entries in the index for a page. One for\n        the page itself and then one for each of its' heading\n        tags.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n        Given a section on the page, the table of contents and\n        the absolute url for the page create an entry in the\n        index\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""python to json conversion"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n    Used by the ContentParser class to capture the information we\n    need when it is parsing the HMTL.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n    Given a block of HTML, group the content under the preceding\n    heading tags which can then be used for creating an index\n    for that section.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/contrib/search/search_index.py	"""\n        A simple wrapper to add an entry, dropping bad characters.\n        """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/contrib/search/search_index.py	"""Called at the start of every HTML tag."""	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/contrib/search/search_index.py	"""Called at the end of every HTML tag."""	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/contrib/search/search_index.py	"""\n        Called for the text contents of each tag.\n        """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/contrib/search/search_index.py	"""python to json conversion"""	b225eb9fe6655019ac47e85220cba430
mkdocutils/contrib/search/search_index.py	import json	665bccf2f09fa375b040ce46ce828371
mkdocutils/contrib/search/search_index.py	import logging	665bccf2f09fa375b040ce46ce828371
mkdocutils/contrib/search/search_index.py	from html.parser import HTMLParser	665bccf2f09fa375b040ce46ce828371
mkdocutils/contrib/search/search_index.py		bff64f8b4dc7623ae2e5137f1197ee19
mkdocutils/contrib/search/search_index.py	text = text.replace('\u00a0', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	text = text.replace('\u00a0', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	text = re.sub(r'[ \t\n\r\f\v]+', ' ', text.strip())	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	text = re.sub(r'[ \t\n\r\f\v]+', ' ', text.strip())	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	'title': title,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	'text': text,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	'location': loc	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	text=parser.stripped_html.rstrip('\n'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	'docs': self._entries,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	'config': self.config	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	if self.config['prebuild_index'] in (True, 'node'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	if self.config['prebuild_index'] in (True, 'node'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	script_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'prebuild-index.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	['node', script_path],	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	idx, err = p.communicate(data.encode('utf-8'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	idx = idx.decode('utf-8') if hasattr(idx, 'decode') else idx	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	idx = idx.decode('utf-8') if hasattr(idx, 'decode') else idx	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	page_dicts['index'] = json.loads(idx)	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	log.debug('Pre-built search index created successfully.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	log.warning('Failed to pre-build search index. Error: {}'.format(err))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	log.warning('Failed to pre-build search index. Error: {}'.format(e))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	elif self.config['prebuild_index'] == 'python':	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	elif self.config['prebuild_index'] == 'python':	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	ref='location', fields=('title', 'text'), documents=self._entries,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	ref='location', fields=('title', 'text'), documents=self._entries,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	ref='location', fields=('title', 'text'), documents=self._entries,	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	languages=self.config['lang'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	page_dicts['index'] = idx.serialize()	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	self.section.text.append(data.rstrip('\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	return '\n'.join(self._stripped_html)	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/search_index.py	log.warning('Failed to pre-build search index. Error: {}'.format(err))	2aa143575238f1af11a86b153c7d5976
mkdocutils/contrib/search/search_index.py	log.warning('Failed to pre-build search index. Error: {}'.format(e))	2aa143575238f1af11a86b153c7d5976
mkdocutils/contrib/search/search_index.py	script_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'prebuild-index.js')	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/contrib/search/search_index.py	self.text == other.text and	01133cfa919d814e632499f755e32eee
mkdocutils/contrib/search/search_index.py	self.id == other.id and	01133cfa919d814e632499f755e32eee
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/search_index.py	data = json.dumps(page_dicts, sort_keys=True, separators=(',', ':'))	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/search_index.py	self.data = []	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/search_index.py	def handle_data(self, data):	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/search_index.py	p = subprocess.Popen(	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/contrib/search/search_index.py	except (OSError, ValueError) as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/contrib/search/search_index.py	self.id = id_	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/contrib/search/search_index.py	self.section.id = attr[1]	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/contrib/search/search_index.py	def generate_search_index(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/contrib/search/search_index.py	script_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'prebuild-index.js')	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/contrib/search/search_index.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/contrib/search/search_index.py	def generate_search_index(self):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/contrib/search/search_index.py	class SearchIndex:	72a53e4dd0380c8467f821e52f447566
mkdocutils/contrib/search/search_index.py	class ContentSection:	72a53e4dd0380c8467f821e52f447566
mkdocutils/contrib/search/search_index.py	idx = lunr(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/contrib/search/search_index.py	languages=self.config['lang'])	2e73035b2427e1ee107ec03464e45203
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/contrib/search/search_index.py	class SearchIndex:	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/contrib/search/search_index.py	idx = idx.decode('utf-8') if hasattr(idx, 'decode') else idx	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/contrib/search/search_index.py	if not err:	b416328c8f165de4b9ade93e191034c3
mkdocutils/contrib/search/search_index.py	if self.config['prebuild_index'] in (True, 'node'):	b77af03d9bc24709c1887a7666cd8942
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	b77af03d9bc24709c1887a7666cd8942
mkdocutils/contrib/search/search_index.py	if tag not in (["h%d" % x for x in range(1, 7)]):	b77af03d9bc24709c1887a7666cd8942
mkdocutils/contrib/search/__init__.py	'"{}" is not a supported language code.'.format(lang)	f57c7b41027803375a9e5ad44962edef
mkdocutils/contrib/search/__init__.py	"Add plugin templates and scripts to config."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Add plugin templates and scripts to config."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Create search index instance for later use."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Create search index instance for later use."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Add page to search index."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Add page to search index."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Build search index."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Build search index."	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/contrib/search/__init__.py	"Add plugin templates and scripts to config."	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/contrib/search/__init__.py	def lang_file_exists(self, lang):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/contrib/search/__init__.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/contrib/search/__init__.py	import os	a11d6622ca6e0c7751d7965682ddf0e9
mkdocutils/contrib/search/__init__.py	""" Validate Language(s) provided in config are known languages. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/contrib/search/__init__.py	""" Add a search feature to MkDocs. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/contrib/search/__init__.py	"Add plugin templates and scripts to config."	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/contrib/search/__init__.py	"Create search index instance for later use."	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/contrib/search/__init__.py	"Add page to search index."	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/contrib/search/__init__.py	"Build search index."	d8649dbc7ea20c7f299cf712003ccf9e
mkdocutils/contrib/search/__init__.py	import logging	665bccf2f09fa375b040ce46ce828371
mkdocutils/contrib/search/__init__.py	from mkdocutils.plugins import BasePlugin	665bccf2f09fa375b040ce46ce828371
mkdocutils/contrib/search/__init__.py	from mkdocutils import utils	006d6d7b193ae5fd18451299b208f0a8
mkdocutils/contrib/search/__init__.py		bff64f8b4dc7623ae2e5137f1197ee19
mkdocutils/contrib/search/__init__.py	path = os.path.join(base_path, 'lunr-language', 'lunr.{}.js'.format(lang))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	path = os.path.join(base_path, 'lunr-language', 'lunr.{}.js'.format(lang))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	raise config_options.ValidationError('Expected a list of language codes.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if lang != 'en' and not self.lang_file_exists(lang):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('lang', LangOption(default=['en'])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('lang', LangOption(default=['en'])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('separator', config_options.Type(str, default=r'[\s\-]+')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('separator', config_options.Type(str, default=r'[\s\-]+')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('min_search_length', config_options.Type(int, default=3)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('prebuild_index', config_options.Choice((False, True, 'node', 'python'), default=False)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('prebuild_index', config_options.Choice((False, True, 'node', 'python'), default=False)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	('prebuild_index', config_options.Choice((False, True, 'node', 'python'), default=False)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	config['theme'].static_templates.add('search.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	config['theme'].static_templates.add('search.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	path = os.path.join(base_path, 'templates')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	config['theme'].dirs.append(path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'search/main.js' not in config['extra_javascript']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if 'search/main.js' not in config['extra_javascript']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	config['extra_javascript'].append('search/main.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	config['extra_javascript'].append('search/main.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	self.search_index.add_entry_from_context(context['page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	output_base_path = os.path.join(config['site_dir'], 'search')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	output_base_path = os.path.join(config['site_dir'], 'search')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	json_output_path = os.path.join(output_base_path, 'search_index.json')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	utils.write_file(search_index.encode('utf-8'), json_output_path)	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if len(self.config['lang']) > 1 or 'en' not in self.config['lang']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if len(self.config['lang']) > 1 or 'en' not in self.config['lang']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if len(self.config['lang']) > 1 or 'en' not in self.config['lang']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	files.append('lunr.stemmer.support.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if len(self.config['lang']) > 1:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	files.append('lunr.multi.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	for lang in self.config['lang']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	if (lang != 'en'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	files.append('lunr.{}.js'.format(lang))	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	from_path = os.path.join(base_path, 'lunr-language', filename)	05c198233765297c55773dd4f0aef7c0
mkdocutils/contrib/search/__init__.py	"Add plugin templates and scripts to config."	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/contrib/search/__init__.py	"Create search index instance for later use."	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/contrib/search/__init__.py	"Add page to search index."	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/contrib/search/__init__.py	"Build search index."	8b6488c6561c624858a0cd89e6da1b30
mkdocutils/contrib/search/__init__.py	path = os.path.join(base_path, 'lunr-language', 'lunr.{}.js'.format(lang))	2aa143575238f1af11a86b153c7d5976
mkdocutils/contrib/search/__init__.py	'"{}" is not a supported language code.'.format(lang)	2aa143575238f1af11a86b153c7d5976
mkdocutils/contrib/search/__init__.py	files.append('lunr.{}.js'.format(lang))	2aa143575238f1af11a86b153c7d5976
mkdocutils/contrib/search/__init__.py	('prebuild_index', config_options.Choice((False, True, 'node', 'python'), default=False)),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/contrib/search/__init__.py	if not ('search_index_only' in config['theme'] and config['theme']['search_index_only']):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/contrib/search/__init__.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/__init__.py	value = [value]	e547b106dab483aa6c10f26900427c97
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/contrib/search/__init__.py	if 'include_search_page' in config['theme'] and config['theme']['include_search_page']:	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/contrib/search/__init__.py	def on_post_build(self, config, **kwargs):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/contrib/search/__init__.py	if len(self.config['lang']) > 1 or 'en' not in self.config['lang']:	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/contrib/search/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/contrib/search/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/contrib/search/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/contrib/search/__init__.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/contrib/search/__init__.py	def on_post_build(self, config, **kwargs):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/contrib/search/__init__.py	0	7929fdcea3800aaa36a2eafac2b9393f
mkdocutils/config/defaults.py	from mkdocutils.config import config_options	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/config/defaults.py	('config_file_path', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_name', config_options.Type(str, required=True)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('nav', config_options.Nav()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('pages', config_options.Nav()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_url', config_options.URL()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_description', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_author', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('theme', config_options.Theme(default='mkdocs')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('theme', config_options.Theme(default='mkdocs')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('docs_dir', config_options.Dir(default='docs', exists=True)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('docs_dir', config_options.Dir(default='docs', exists=True)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_dir', config_options.SiteDir(default='site')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('site_dir', config_options.SiteDir(default='site')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('copyright', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('google_analytics', config_options.Type(list, length=2)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('dev_addr', config_options.IpAddress(default='127.0.0.1:8000')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('dev_addr', config_options.IpAddress(default='127.0.0.1:8000')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('use_directory_urls', config_options.Type(bool, default=True)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('repo_url', config_options.RepoURL()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('repo_name', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('edit_uri', config_options.Type(str)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('extra_css', config_options.Type(list, default=[])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('extra_javascript', config_options.Type(list, default=[])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('extra_templates', config_options.Type(list, default=[])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	'markdown_extensions', config_options.MarkdownExtensions(	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	builtins=['toc', 'tables', 'fenced_code'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	builtins=['toc', 'tables', 'fenced_code'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	builtins=['toc', 'tables', 'fenced_code'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	configkey='mdx_configs', default=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('mdx_configs', config_options.Private()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('strict', config_options.Type(bool, default=False)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	'remote_branch', config_options.Type(	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	str, default='gh-pages',	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('remote_name', config_options.Type(str, default='origin')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('remote_name', config_options.Type(str, default='origin')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('extra', config_options.SubConfig()),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('plugins', config_options.Plugins(default=['search'])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	('plugins', config_options.Plugins(default=['search'])),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/defaults.py	builtins=['toc', 'tables', 'fenced_code'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/config/defaults.py	configkey='mdx_configs', default=[],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/config/defaults.py	str, default='gh-pages',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/config/defaults.py	'markdown_extensions', config_options.MarkdownExtensions(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/config/defaults.py	DEFAULT_SCHEMA = (	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/config/config_options.py	assert isinstance(value, str)	a7dd6fcbff4faac413dfcb409af726d1
mkdocutils/config/config_options.py	if key_name == 'dev_addr' and host in ['0.0.0.0', '::']:	14cef3460fee9787fa2e7efce5cf2a19
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	b37f91afce447c05bb3e4015e43835d4
mkdocutils/config/config_options.py	"""\n        Before all options are validated, perform a pre-validation process.\n\n        The pre-validation process method should be implemented by subclasses.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        Before all options are validated, perform a pre-validation process.\n\n        The pre-validation process method should be implemented by subclasses.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        After all options have passed validation, perform a post-validation\n        process to do any additional changes dependant on other config values.\n\n        The post-validation process method should be implemented by subclasses.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        After all options have passed validation, perform a post-validation\n        process to do any additional changes dependant on other config values.\n\n        The post-validation process method should be implemented by subclasses.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        Perform some initial validation.\n\n        If the option is empty (None) and isn't required, leave it as such. If\n        it is empty but has a default, use that. Finally, call the\n        run_validation method on the subclass unless.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/config_options.py	"""\n        Perform validation for a value.\n\n        The run_validation method should be implemented by subclasses.\n        """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/config/config_options.py	"""\n        Perform some initial validation.\n\n        If the option is empty (None) and isn't required, leave it as such. If\n        it is empty but has a default, use that. Finally, call the\n        run_validation method on the subclass unless.\n        """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/config/config_options.py	import ipaddress	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/config/config_options.py	class BaseConfigOption:	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/config/config_options.py	class SubConfig(BaseConfigOption, Config):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/config/config_options.py	class Deprecated(BaseConfigOption):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/config/config_options.py	def is_required(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def validate(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def reset_warnings(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def validate(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def is_required(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def pre_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def pre_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def validate(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def pre_validation(self, config, key_name):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def run_validation(self, value):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def load_plugin(self, name, config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/config_options.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/config/config_options.py	def __init__(self):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, *config_options):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, *config_options, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, default=None, required=False):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, type_, length=None, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, choices, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, moved_to=None):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, default='', required=False):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, exists=False, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, default=None):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, builtins=None, configkey='mdx_configs', **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	def __init__(self, **kwargs):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/config/config_options.py	"""\n    Base class for options that point to filesystem objects.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/config/config_options.py	"""\n        Perform some initial validation.\n\n        If the option is empty (None) and isn't required, leave it as such. If\n        it is empty but has a default, use that. Finally, call the\n        run_validation method on the subclass unless.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/config/config_options.py	"""\n    Dir Config Option\n\n    Validate a path to a directory, optionally verifying that it exists.\n    """	1ff9191a823a3db022816cb4b8f349fb
mkdocutils/config/config_options.py	"""\n    File Config Option\n\n    Validate a path to a file, optionally verifying that it exists.\n    """	1ff9191a823a3db022816cb4b8f349fb
mkdocutils/config/config_options.py	"""\n        After all options have passed validation, perform a post-validation\n        process to do any additional changes dependant on other config values.\n\n        The post-validation process method should be implemented by subclasses.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/config/config_options.py	"""\n    A subclass of BaseConfigOption that adds support for default values and\n    required values. It is a base class for config options.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/config/config_options.py	"""\n        After all options have passed validation, perform a post-validation\n        process to do any additional changes dependant on other config values.\n\n        The post-validation process method should be implemented by subclasses.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Config Items Option\n\n    Validates a list of mappings that all must match the same set of\n    options.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    A subclass of BaseConfigOption that adds support for default values and\n    required values. It is a base class for config options.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Type Config Option\n\n    Validate the type of a config option against a given Python type.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Choice Config Option\n\n    Validate the config option against a strict set of values.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    IpAddress Config Option\n\n    Validate that an IP address is in an apprioriate format\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    URL Config Option\n\n    Validate a URL by requiring a scheme is present.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Repo URL Config Option\n\n    A small extension to the URL config that sets the repo_name and edit_uri,\n    based on the url if they haven't already been provided.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Dir Config Option\n\n    Validate a path to a directory, optionally verifying that it exists.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    File Config Option\n\n    Validate a path to a file, optionally verifying that it exists.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    SiteDir Config Option\n\n    Validates the site_dir and docs_dir directories do not contain each other.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Theme Config Option\n\n    Validate that the theme exists and build Theme instance.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Nav Config Option\n\n    Validate the Nav config. Automatically add all markdown files if empty.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Private Config Option\n\n    A config option only for internal use. Raises an error if set by the user.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	"""\n    Markdown Extensions Config Option\n\n    A list of extensions. If a list item contains extension configs,\n    those are set on the private  setting passed to `configkey`. The\n    `builtins` keyword accepts a list of extensions which cannot be\n    overriden by the user. However, builtins can be duplicated to define\n    config options for them if desired.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/config_options.py	self.required = kwargs.get('required', False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	return '{}: {}'.format(self.__class__.__name__, self.item_config)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Expected a sequence of mappings, but a %s '	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'was given.' % type(value),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if hasattr(self.default, 'copy'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	raise ValueError('Expected iterable of choices, got {}', choices)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'The configuration option {} has been deprecated and '	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'will be removed in a future release of MkDocs.'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	''.format(key_name)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if '.' not in self.moved_to:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	move_to, target_key = self.moved_to.rsplit('.', 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	for key in move_to.split('.'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	host, port = value.rsplit(':', 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if host != 'localhost':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	class Address(namedtuple('Address', 'host port')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	class Address(namedtuple('Address', 'host port')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	return '{}:{}'.format(self.host, self.port)	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if key_name == 'dev_addr' and host in ['0.0.0.0', '::']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if key_name == 'dev_addr' and host in ['0.0.0.0', '::']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if key_name == 'dev_addr' and host in ['0.0.0.0', '::']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	def __init__(self, default='', required=False):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if value == '':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	repo_host = urlparse(config['repo_url']).netloc.lower()	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	edit_uri = config.get('edit_uri')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if config['repo_url'] is not None and config.get('repo_name') is None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if config['repo_url'] is not None and config.get('repo_name') is None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if repo_host == 'github.com':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'GitHub'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'GitHub'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	elif repo_host == 'bitbucket.org':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'Bitbucket'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'Bitbucket'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	elif repo_host == 'gitlab.com':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'GitLab'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = 'GitLab'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = repo_host.split('.')[0].title()	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_name'] = repo_host.split('.')[0].title()	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if config['repo_url'] is not None and edit_uri is None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if repo_host == 'github.com' or repo_host == 'gitlab.com':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if repo_host == 'github.com' or repo_host == 'gitlab.com':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	edit_uri = 'edit/master/docs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	elif repo_host == 'bitbucket.org':	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	edit_uri = 'src/default/docs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	edit_uri = ''	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_url'] += '/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['repo_url'] += '/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not edit_uri.endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	edit_uri += '/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['edit_uri'] = edit_uri	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	name = 'directory'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	name = 'file'	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if (config['docs_dir'] + os.sep).startswith(config['site_dir'].rstrip(os.sep) + os.sep):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if (config['docs_dir'] + os.sep).startswith(config['site_dir'].rstrip(os.sep) + os.sep):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	).format(config['site_dir'], config['docs_dir']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	).format(config['site_dir'], config['docs_dir']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	elif (config['site_dir'] + os.sep).startswith(config['docs_dir'].rstrip(os.sep) + os.sep):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	elif (config['site_dir'] + os.sep).startswith(config['docs_dir'].rstrip(os.sep) + os.sep):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	).format(config['site_dir'], config['docs_dir']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	).format(config['site_dir'], config['docs_dir']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	value = {'name': self.default}	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	value = {'name': value}	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if 'name' in value:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if value['name'] is None or value['name'] in themes:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if value['name'] is None or value['name'] in themes:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	"are: {}".format(value['name'], ', '.join(themes)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	"are: {}".format(value['name'], ', '.join(themes)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not theme_config['name'] and 'custom_dir' not in theme_config:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if not theme_config['name'] and 'custom_dir' not in theme_config:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if 'custom_dir' in theme_config and not os.path.isabs(theme_config['custom_dir']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if 'custom_dir' in theme_config and not os.path.isabs(theme_config['custom_dir']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	theme_config['custom_dir'] = os.path.join(	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config_dir, theme_config['custom_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if 'custom_dir' in theme_config and not os.path.isdir(theme_config['custom_dir']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if 'custom_dir' in theme_config and not os.path.isdir(theme_config['custom_dir']):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	format(path=theme_config['custom_dir'], name=key_name),	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if key_name == 'pages' and config['pages'] is not None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if key_name == 'pages' and config['pages'] is not None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	if config['nav'] is None:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['nav'] = config['pages']	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	config['nav'] = config['pages']	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	raise ValidationError('For internal use only.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	def __init__(self, builtins=None, configkey='mdx_configs', **kwargs):	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	raise ValidationError('Invalid Markdown Extensions configuration')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Invalid Markdown Extensions configuration',	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Invalid config options for Markdown '	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Invalid Markdown Extensions configuration',	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Invalid Plugins configuration. Expected a list of plugins',	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	raise ValidationError('Invalid Plugins configuration')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'Invalid config options for '	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	raise ValidationError('Invalid Plugins configuration')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	'{}.{} must be a subclass of {}.{}'.format(	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	errors_message = '\n'.join(	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/config_options.py	return '{}: {}'.format(self.__class__.__name__, self.item_config)	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Expected type: {} but received: {}"	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Expected one of: {} but received: {}"	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'The configuration option {} has been deprecated and '	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	raise ValidationError("'{}' is not a valid port".format(port))	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	return '{}:{}'.format(self.host, self.port)	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	("The use of the IP address '{}' suggests a production environment "	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	("The 'docs_dir' should not be within the 'site_dir' as this "	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	("The 'site_dir' should not be within the 'docs_dir' as this "	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Unrecognised theme name: '{}'. The available installed themes "	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'Invalid type "{}". Expected a string or key/value pairs.'.format(type(value)),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Expected a list, got {}".format(type(value)),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Invalid pages config. {} {}".format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'Invalid config options for Markdown '	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'Invalid config options for '	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'The "{}" plugin is not installed'.format(name),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	'{}.{} must be a subclass of {}.{}'.format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	"Plugin value: '{}'. Error: {}".format(x, y)	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/config_options.py	raise ValueError('Expected iterable of choices, got {}', choices)	fdd6dec2aa5db13215f10e2589bb24cb
mkdocutils/config/config_options.py	Plugin = self.installed_plugins[name].load()	0b7388620b7879ef0ef85da243c6a552
mkdocutils/config/config_options.py	Plugin.__module__, Plugin.__name__, plugins.BasePlugin.__module__,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/config/config_options.py	plugins.BasePlugin.__name__,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/config/config_options.py	)	49c015ae7fba99f784ab386408d68948
mkdocutils/config/config_options.py	"Please use a third party production-ready server instead.").format(host),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/config/config_options.py	if (config['docs_dir'] + os.sep).startswith(config['site_dir'].rstrip(os.sep) + os.sep):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/config/config_options.py	elif (config['site_dir'] + os.sep).startswith(config['docs_dir'].rstrip(os.sep) + os.sep):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/config/config_options.py	'Invalid type "{}". Expected a string or key/value pairs.'.format(type(value)),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/config/config_options.py	def validate(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def validate(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	return [self.item_config.validate(item) for item in value]	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def validate(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = self.default.copy()	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = self.default	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = super().run_validation(value)	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = os.path.join(self.config_dir, value)	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = os.path.abspath(value)	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def validate(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = {'name': self.default}	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	value = {'name': value}	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	config_types = {type(item) for item in value}	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	for item in value:	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	for item in value:	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	item = name	e547b106dab483aa6c10f26900427c97
mkdocutils/config/config_options.py	except ValueError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/config_options.py	except Exception as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/config_options.py	for x, y in errors	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/config_options.py	for x, y in errors	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/config_options.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/config/config_options.py	repo_host = urlparse(config['repo_url']).netloc.lower()	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/config/config_options.py	if 'custom_dir' in theme_config and not os.path.isabs(theme_config['custom_dir']):	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/config/config_options.py	def load_plugin(self, name, config):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/config/config_options.py	if (config['docs_dir'] + os.sep).startswith(config['site_dir'].rstrip(os.sep) + os.sep):	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/config/config_options.py	elif (config['site_dir'] + os.sep).startswith(config['docs_dir'].rstrip(os.sep) + os.sep):	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/config/config_options.py	def validate(self, value):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/config_options.py	def post_validation(self, config, key_name):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/config_options.py	def validate(self, value):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/config_options.py	def run_validation(self, value):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/config_options.py	def run_validation(self, value):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/config_options.py	class BaseConfigOption:	72a53e4dd0380c8467f821e52f447566
mkdocutils/config/config_options.py	msg = ("Expected type: {0} with length {2} but received: {1} with "	dde2d343d968d51e07a47f88e4afec60
mkdocutils/config/config_options.py	'{}.{} must be a subclass of {}.{}'.format(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/config/config_options.py	"length {3}").format(	da0ecb40a77d639d4395abb934231fc5
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	da0ecb40a77d639d4395abb934231fc5
mkdocutils/config/config_options.py	"length {3}").format(	2e73035b2427e1ee107ec03464e45203
mkdocutils/config/config_options.py	"Please use a third party production-ready server instead.").format(host),	2e73035b2427e1ee107ec03464e45203
mkdocutils/config/config_options.py	"is a sibling of the config file.").format(key_name),	2e73035b2427e1ee107ec03464e45203
mkdocutils/config/config_options.py	'Expected a sequence of mappings, but a %s '	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/config/config_options.py	return	e34f470a8d825420fa24828f48aa1535
mkdocutils/config/config_options.py	return	e34f470a8d825420fa24828f48aa1535
mkdocutils/config/config_options.py	'was given.' % type(value),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"length {3}").format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	'will be removed in a future release of MkDocs.'	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	''.format(key_name)	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"or the use of a proxy to connect to the MkDocs server. However, "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"the MkDocs' server is intended for local development purposes only. "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"Please use a third party production-ready server instead.").format(host),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"file. Use a child directory instead so that the '{0}' "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"is a sibling of the config file.").format(key_name),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"can mean the source files are overwritten by the output or "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"it will be deleted if --clean is passed to mkdocs build."	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"(site_dir: '{}', docs_dir: '{}')"	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"leads to the build directory being copied into itself and "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"duplicate nested files in the 'site_dir'."	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"(site_dir: '{}', docs_dir: '{}')"	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"are: {}".format(value['name'], ', '.join(themes)),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"be removed in a future release of MkDocs. Use 'nav' instead."	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	"Extension '{}'.".format(ext),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	'the "{}" plugin.'.format(name),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/config_options.py	config['repo_url'] += '/'	5aab3340e13b51ca518016d5b753ed33
mkdocutils/config/config_options.py	edit_uri += '/'	5aab3340e13b51ca518016d5b753ed33
mkdocutils/config/config_options.py	if not edit_uri.startswith(('?', '#')) \\n                    and not config['repo_url'].endswith('/'):	26df93eb5bc59c53bbae02e39fb084ec
mkdocutils/config/config_options.py	.format(self._type, type(value))	866b3594c3a629e1d3dcb8cf51839e83
mkdocutils/config/config_options.py	.format(self._type, type(value))	866b3594c3a629e1d3dcb8cf51839e83
mkdocutils/config/config_options.py	.format(self.choices, value)	866b3594c3a629e1d3dcb8cf51839e83
mkdocutils/config/config_options.py	.format(self.choices, value)	866b3594c3a629e1d3dcb8cf51839e83
mkdocutils/config/config_options.py	if hasattr(self.default, 'copy'):	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/config/config_options.py	existence_test = staticmethod(os.path.isdir)	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/config/config_options.py	existence_test = staticmethod(os.path.isfile)	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/config/config_options.py	class Address(namedtuple('Address', 'host port')):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/config/config_options.py	item = name	96653724fef5905fbbb49faf685b887f
mkdocutils/config/config_options.py	def __str__(self):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/config/config_options.py	return ()	de1d378bab0f506ff72b1e5ce370cc90
mkdocutils/config/config_options.py	if not isinstance(value, self._type):	b416328c8f165de4b9ade93e191034c3
mkdocutils/config/config_options.py	if len(value) == 0:	5d6bdd84aa8386b715a970689dc68b7c
mkdocutils/config/config_options.py	if key_name == 'dev_addr' and host in ['0.0.0.0', '::']:	b77af03d9bc24709c1887a7666cd8942
mkdocutils/config/config_options.py	if repo_host == 'github.com' or repo_host == 'gitlab.com':	fe3c3ad18608652db63a200354f78c8c
mkdocutils/config/config_options.py	if value['name'] is None or value['name'] in themes:	4312e304e08f3ba5073d71ce074109bc
mkdocutils/config/config_options.py	if value['name'] is None or value['name'] in themes:	4312e304e08f3ba5073d71ce074109bc
mkdocutils/config/config_options.py	"are: {}".format(value['name'], ', '.join(themes)),	4312e304e08f3ba5073d71ce074109bc
mkdocutils/config/config_options.py	class Address(namedtuple('Address', 'host port')):	8542393b56082e176826663ffdf59028
mkdocutils/config/config_options.py	BaseConfigOption.__init__(self)	48bbb24d05482e1b99f618d980e347e9
mkdocutils/config/config_options.py	Config.__init__(self, config_options)	48bbb24d05482e1b99f618d980e347e9
mkdocutils/config/config_options.py	BaseConfigOption.__init__(self)	48bbb24d05482e1b99f618d980e347e9
mkdocutils/config/config_options.py	Plugin.__module__, Plugin.__name__, plugins.BasePlugin.__module__,	48bbb24d05482e1b99f618d980e347e9
mkdocutils/config/config_options.py	Plugin.__module__, Plugin.__name__, plugins.BasePlugin.__module__,	48bbb24d05482e1b99f618d980e347e9
mkdocutils/config/config_options.py	def __init__(self, default='', required=False):	61951ee9f500373a81e40e4a6f4afcb6
mkdocutils/config/__init__.py	from mkdocutils.config.base import Config, load_config	a11d6622ca6e0c7751d7965682ddf0e9
mkdocutils/config/__init__.py	'DEFAULT_SCHEMA',	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/__init__.py	0	efb30561bcb095fe3bfec3b4192cc0ac
mkdocutils/config/__init__.py	__all__ = [	3543d0b0fd8f02031a323501d61cbf2f
mkdocutils/config/__init__.py	0	7929fdcea3800aaa36a2eafac2b9393f
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/base.py	"""\n    Load the configuration for a given file object or name\n\n    The config_file can either be a file object, string or None. If it is None\n    the default `mkdocs.yml` filename will loaded.\n\n    Extra kwargs are passed to the configuration to replace any default values\n    unless they themselves are None.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/base.py	"""\n    Load the configuration for a given file object or name\n\n    The config_file can either be a file object, string or None. If it is None\n    the default `mkdocs.yml` filename will loaded.\n\n    Extra kwargs are passed to the configuration to replace any default values\n    unless they themselves are None.\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/config/base.py	"""\n    Load the configuration for a given file object or name\n\n    The config_file can either be a file object, string or None. If it is None\n    the default `mkdocs.yml` filename will loaded.\n\n    Extra kwargs are passed to the configuration to replace any default values\n    unless they themselves are None.\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/config/base.py	"""\n    Load the configuration for a given file object or name\n\n    The config_file can either be a file object, string or None. If it is None\n    the default `mkdocs.yml` filename will loaded.\n\n    Extra kwargs are passed to the configuration to replace any default values\n    unless they themselves are None.\n    """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/config/base.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/config/base.py	def validate(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/base.py	def load_dict(self, patch):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/base.py	def load_file(self, config_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/config/base.py	"""\n        Set the base config by going through each validator and getting the\n        default if it has one.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/config/base.py	"""\n        Set the base config by going through each validator and getting the\n        default if it has one.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/config/base.py	"""\n    MkDocs Configuration dict\n\n    This is a fairly simple extension of a standard dictionary. It adds methods\n    for running validation on the structure and contents.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/base.py	"""\n        Set the base config by going through each validator and getting the\n        default if it has one.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/base.py	"""\n    Load the configuration for a given file object or name\n\n    The config_file can either be a file object, string or None. If it is None\n    the default `mkdocs.yml` filename will loaded.\n\n    Extra kwargs are passed to the configuration to replace any default values\n    unless they themselves are None.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/config/base.py	"""\n        The schema is a Python dict which maps the config name to a validator.\n        """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/config/base.py	log = logging.getLogger('mkdocs.config')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	config_file = os.path.abspath('mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	if hasattr(config_file, 'closed') and config_file.closed:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	config_file = open(config_file, 'rb')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	options['config_file_path'] = getattr(config_file, 'name', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	options['config_file_path'] = getattr(config_file, 'name', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	options['config_file_path'] = getattr(config_file, 'name', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	config_file_path=options['config_file_path'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	elif cfg['strict'] and len(warnings) > 0:	05c198233765297c55773dd4f0aef7c0
mkdocutils/config/base.py	key, "Unrecognised configuration name: {}".format(key),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	"The configuration is invalid. The expected type was a key "	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	"MkDocs encountered an error parsing the configuration file: {}".format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	log.debug("Loading configuration file: {}".format(config_file))	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	"Config file '{}' does not exist.".format(config_file),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	"Aborted with {} Configuration Errors!".format(len(errors)),	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	"Aborted with {} Configuration Warnings in 'strict' mode!".format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/config/base.py	self.data = {}	e547b106dab483aa6c10f26900427c97
mkdocutils/config/base.py	value = self.get(key)	e547b106dab483aa6c10f26900427c97
mkdocutils/config/base.py	for key, value in options.copy().items():	e547b106dab483aa6c10f26900427c97
mkdocutils/config/base.py	for key, value in cfg.items():	e547b106dab483aa6c10f26900427c97
mkdocutils/config/base.py	warnings.extend([(key, w) for w in config_option.warnings])	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	except ValidationError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	warnings.extend([(key, w) for w in config_option.warnings])	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	except ValidationError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	warnings.extend([(key, w) for w in config_option.warnings])	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	except ValidationError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	except YAMLError as e:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/config/base.py	failed, warnings = [], []	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/config/base.py	def validate(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/config/base.py	def load_config(config_file=None, **kwargs):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/config/base.py	class Config(UserDict):	f31baaad8f55f667a091708188847d5b
mkdocutils/config/base.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/config/base.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/config/base.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/config/base.py	def load_config(config_file=None, **kwargs):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/config/base.py	log.warning("Config value: '%s'. Warning: %s", config_name, warning)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/config/base.py	log.error("Config value: '%s'. Error: %s", config_name, error)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/config/base.py	log.debug("Config value: '%s' = %r", key, value)	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/config/base.py	"value mapping (a python dict) but we got an object of type: "	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/base.py	"{}".format(type(patch)),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/config/base.py	class Config(UserDict):	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/config/base.py	if hasattr(config_file, 'closed') and config_file.closed:	bb309bbe81e227c3356aeb2accb8c1dd
mkdocutils/config/base.py	from mkdocutils import config	00b2aa607685a21b174c21a32bfefa33
mkdocutils/config/base.py	for key in (set(self.keys()) - self._schema_keys):	96653724fef5905fbbb49faf685b887f
mkdocutils/config/base.py	for config_name, error in errors:	96653724fef5905fbbb49faf685b887f
mkdocutils/config/base.py	for key, value in cfg.items():	96653724fef5905fbbb49faf685b887f
mkdocutils/config/base.py	key, "Unrecognised configuration name: {}".format(key),	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/config/base.py	key, "Unrecognised configuration name: {}".format(key),	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/config/base.py	log.error("Config value: '%s'. Error: %s", config_name, error)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/config/base.py	log.debug("Config value: '%s' = %r", key, value)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/config/base.py	log.debug("Config value: '%s' = %r", key, value)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/config/base.py	if len(failed) == 0:	5d6bdd84aa8386b715a970689dc68b7c
mkdocutils/config/base.py	if len(errors) > 0:	5d6bdd84aa8386b715a970689dc68b7c
mkdocutils/config/base.py	elif cfg['strict'] and len(warnings) > 0:	5d6bdd84aa8386b715a970689dc68b7c
mkdocutils/config/base.py	config_file = open(config_file, 'rb')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	97cf6d04996c71b1150d68e0da3f8e6a
mkdocutils/tests/plugin_tests.py	""" modify page content by prepending `foo` config value. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" modify page content by prepending `foo` config value. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" do nothing (return None) to not modify item. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" do nothing (return None) to not modify item. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" create new source by prepending `foo` config value to 'source'. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" do nothing (return None). """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/plugin_tests.py	""" modify page content by prepending `foo` config value. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/plugin_tests.py	""" do nothing (return None) to not modify item. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/plugin_tests.py	""" create new source by prepending `foo` config value to 'source'. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/plugin_tests.py	""" do nothing (return None). """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/plugin_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/plugin_tests.py	class DummyPlugin(plugins.BasePlugin):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/plugin_tests.py	class TestPluginClass(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/plugin_tests.py	class TestPluginCollection(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/plugin_tests.py	class TestPluginConfig(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/plugin_tests.py	def test_valid_plugin_options(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_invalid_plugin_options(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_set_plugin_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_set_multiple_plugins_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_run_event_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_run_event_twice_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_event_returns_None(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_event_empty_item(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_event_empty_item_returns_None(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_run_undefined_event_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_run_unknown_event_on_collection(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_run_build_error_event(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_without_options(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_with_options(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_empty_list_with_empty_default(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_empty_list_with_default(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_none_with_empty_default(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_none_with_default(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_uninstalled(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_not_list(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_multivalue_dict(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_not_string_or_dict(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	def test_plugin_config_options_not_dict(self, mock_class):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/plugin_tests.py	""" modify page content by prepending `foo` config value. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/plugin_tests.py	""" do nothing (return None) to not modify item. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/plugin_tests.py	""" create new source by prepending `foo` config value to 'source'. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/plugin_tests.py	""" do nothing (return None). """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/plugin_tests.py	""" modify page content by prepending `foo` config value. """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/plugin_tests.py	""" do nothing (return None) to not modify item. """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/plugin_tests.py	""" create new source by prepending `foo` config value to 'source'. """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/plugin_tests.py	""" do nothing (return None). """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/plugin_tests.py	('foo', config.config_options.Type(str, default='default foo')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	('foo', config.config_options.Type(str, default='default foo')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	('bar', config.config_options.Type(int, default=0)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	('dir', config.config_options.Dir(exists=False)),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], content)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], content)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], 'source')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], 'source')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], 'source')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	test_dir = 'test'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'some value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'some value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'dir': test_dir,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg_fname = os.path.join('tmp', 'test', 'fname.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg_fname = os.path.join('tmp', 'test', 'fname.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg_fname = os.path.join('tmp', 'test', 'fname.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'some value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'some value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 0,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'dir': expected,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	errors, warnings = plugin.load_config({'foo': 42})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('foo', errors[0])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	errors, warnings = plugin.load_config({'bar': 'a string'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	errors, warnings = plugin.load_config({'bar': 'a string'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('bar', errors[0])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	errors, warnings = plugin.load_config({'invalid_key': 'value'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	errors, warnings = plugin.load_config({'invalid_key': 'value'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('invalid_key', warnings[0])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	], [('foo', plugin)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin1	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['bar'] = plugin2	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	('foo', plugin1), ('bar', plugin2),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	('foo', plugin1), ('bar', plugin2),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	), 'new page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin1.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin1.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin1	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin2.load_config({'foo': 'second'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin2.load_config({'foo': 'second'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['bar'] = plugin2	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection.run_event('pre_page', 'page content'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection.run_event('pre_page', 'page content'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'second new page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(collection.run_event('nav', 'nav item'), 'nav item')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(collection.run_event('nav', 'nav item'), 'nav item')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(collection.run_event('nav', 'nav item'), 'nav item')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'page_read_source',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	), 'new source',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	plugin.load_config({'foo': 'new'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	collection['foo'] = plugin	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(collection.run_event('pre_build'), None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	), 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'unknown', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'unknown', 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	if self.error_on == 'pre_page':	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	raise BuildError('pre page error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	if self.error_on == 'page_markdown':	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	raise BuildError('page markdown error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	if self.error_on == 'page_content':	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	raise PluginError('page content error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	if self.error_on == 'post_page':	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	raise ValueError('post page error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	error_on='page_markdown',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	error_on='page_content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	error_on='post_page',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(str(build_errors[0]), 'pre page error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(str(build_errors[1]), 'page markdown error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(str(build_errors[2]), 'page content error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(str(build_errors[3]), 'post page error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	@mock.patch('pkg_resources.iter_entry_points', return_value=[MockEntryPoint])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': ['sample']}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': ['sample']}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'default foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'default foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 0,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'dir': None,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'plugins': [{	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'sample': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 42,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 42,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'dir': None,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': []}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(len(cfg['plugins']), 0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': []}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option = config.config_options.Plugins(default=['sample'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(len(cfg['plugins']), 0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': None}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(len(cfg['plugins']), 0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': None}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option = config.config_options.Plugins(default=['sample'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins'], plugins.PluginCollection)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIn('sample', cfg['plugins'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertIsInstance(cfg['plugins']['sample'], plugins.BasePlugin)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'default foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'default foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 0,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'dir': None,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	self.assertEqual(cfg['plugins']['sample'].config, expected)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': ['uninstalled']}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': ['uninstalled']}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option.validate, cfg['plugins'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': 'sample'}  # should be a list	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	cfg = {'plugins': 'sample'}  # should be a list	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option.validate, cfg['plugins'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'plugins': [{	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'sample': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'foo': 'foo value',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'bar': 42,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'extra_key': 'baz',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'extra_key': 'baz',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option.validate, cfg['plugins'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'plugins': [('not a string or dict',)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'plugins': [('not a string or dict',)],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option.validate, cfg['plugins'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'plugins': [{	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'sample': 'not a dict',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	'sample': 'not a dict',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	option.validate, cfg['plugins'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], content)	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/plugin_tests.py	return '{} {}'.format(self.config['foo'], 'source')	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/plugin_tests.py	def test_event_returns_None(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/plugin_tests.py	def test_event_empty_item_returns_None(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/plugin_tests.py	('foo', plugin1), ('bar', plugin2),	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/plugin_tests.py	'page_read_source',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/plugin_tests.py	'pre_page', 'page content',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/plugin_tests.py	def on_pre_page(self, content, **kwargs):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/plugin_tests.py	def on_nav(self, item, **kwargs):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/plugin_tests.py	for k, v in collection.items()	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/plugin_tests.py	for k, v in collection.items()	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/plugin_tests.py	[(k, v) for k, v in collection.items()], [	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/plugin_tests.py	[(k, v) for k, v in collection.items()], [	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/plugin_tests.py	def test_plugin_config_empty_list_with_empty_default(self, mock_class):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	cfg['plugins']['errorplugin'] = PluginRaisingError(error_on='pre_page')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	cfg['plugins'] = option.validate(cfg['plugins'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/plugin_tests.py	def test_valid_plugin_options(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/plugin_tests.py	def test_run_build_error_event(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/plugin_tests.py	class TestPluginCollection(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/plugin_tests.py	class TestPluginConfig(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/plugin_tests.py	def test_run_build_error_event(self):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/plugin_tests.py	return None	e34f470a8d825420fa24828f48aa1535
mkdocutils/tests/plugin_tests.py	return None	e34f470a8d825420fa24828f48aa1535
mkdocutils/tests/plugin_tests.py	class PluginRaisingError(plugins.BasePlugin):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/plugin_tests.py	def __init__(self, error_on):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	def on_pre_page(self, page, **kwargs):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	def on_page_markdown(self, markdown, **kwargs):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	def on_page_content(self, html, **kwargs):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	def on_post_page(self, html, **kwargs):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	def on_build_error(self, error, **kwargs):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	b1e0e1fa80c4095c83f64bed76498430
mkdocutils/tests/plugin_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/plugin_tests.py	**{'name': 'sample', 'load.return_value': DummyPlugin}	01143b49e44c5775ef03dc169a4c5488
mkdocutils/tests/gh_deploy_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/gh_deploy_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/tests/gh_deploy_tests.py	import unittest	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/gh_deploy_tests.py	class TestGitHubDeploy(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/gh_deploy_tests.py	class TestGitHubDeployLogs(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/gh_deploy_tests.py	def test_is_cwd_git_repo(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_is_cwd_not_git_repo(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_get_current_sha(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_get_remote_url_ssh(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_get_remote_url_http(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_get_remote_url_enterprise(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy(self, mock_import, check_version, get_remote, get_sha, is_repo):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_no_cname(	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_hostname(self, mock_import, check_version, get_remote, get_sha, is_repo):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version_default(self, mock_import, check_version, get_remote, get_sha, is_repo):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version(self, mock_import, check_version, get_remote, get_sha, is_repo):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_error(self, mock_log, mock_import, check_version, get_sha, is_repo):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_mkdocs_newer(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_mkdocs_older(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	def test_version_unknown(self, mock_popeno):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/gh_deploy_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/gh_deploy_tests.py	(mock._mock_name or 'mock', self.call_count)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	mock_popeno().communicate.return_value = (b'6d98394\n', b'')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	mock_popeno().communicate.return_value = (b'6d98394\n', b'')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(gh_deploy._get_current_sha('.'), '6d98394')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(gh_deploy._get_current_sha('.'), '6d98394')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'git@github.com:mkdocs/mkdocs.git\n',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	expected = ('git@', 'mkdocs/mkdocs.git')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	expected = ('git@', 'mkdocs/mkdocs.git')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'https://github.com/mkdocs/mkdocs.git\n',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	expected = ('https://', 'mkdocs/mkdocs.git')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	expected = ('https://', 'mkdocs/mkdocs.git')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'https://notgh.com/mkdocs/mkdocs.git\n',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_remote_url', return_value=(None, None))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_remote_url', return_value=(None, None))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('os.path.isfile', return_value=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'mkdocs.commands.gh_deploy._get_remote_url', return_value=(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'git@', 'mkdocs/mkdocs.git',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'git@', 'mkdocs/mkdocs.git',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_remote_url', return_value=(None, None))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_remote_url', return_value=(None, None))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._is_cwd_git_repo', return_value=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._get_current_sha', return_value='shashas')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy._check_version')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('ghp_import.ghp_import')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('mkdocs.commands.gh_deploy.log')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	error_string = 'TestError123'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	remote_branch='test',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'Failed to deploy to GitHub with error: \n{}'.format(error_string),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'Deployed 12345678 with MkDocs version: 0.1.2\n', b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'Deployed 12345678 with MkDocs version: 0.1.2\n', b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	gh_deploy._check_version('gh-pages')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'INFO:mkdocs.commands.gh_deploy:Previous deployment was done with MkDocs '	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'version 0.1.2; you are deploying with a newer version ({})'.format(__version__),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'Deployed 12345678 with MkDocs version: 10.1.2\n', b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	b'Deployed 12345678 with MkDocs version: 10.1.2\n', b'',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	self.assertRaises(SystemExit, gh_deploy._check_version, 'gh-pages')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'ERROR:mkdocs.commands.gh_deploy:Deployment terminated: Previous deployment was made with '	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'MkDocs version 10.1.2; you are attempting to deploy with an older version ({}). Use '	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'--ignore-version to deploy anyway.'.format(__version__),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	@mock.patch('subprocess.Popen')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	mock_popeno().communicate.return_value = (b'No version specified\n', b'')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	mock_popeno().communicate.return_value = (b'No version specified\n', b'')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	gh_deploy._check_version('gh-pages')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	['WARNING:mkdocs.commands.gh_deploy:Version check skipped: No version specified in previous deployment.'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/gh_deploy_tests.py	'Failed to deploy to GitHub with error: \n{}'.format(error_string),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/gh_deploy_tests.py	'INFO:mkdocs.commands.gh_deploy:Previous deployment was done with MkDocs '	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/gh_deploy_tests.py	'ERROR:mkdocs.commands.gh_deploy:Deployment terminated: Previous deployment was made with '	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/gh_deploy_tests.py	'git@', 'mkdocs/mkdocs.git',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_hostname(self, mock_import, check_version, get_remote, get_sha, is_repo):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version_default(self, mock_import, check_version, get_remote, get_sha, is_repo):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version(self, mock_import, check_version, get_remote, get_sha, is_repo):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	'version 0.1.2; you are deploying with a newer version ({})'.format(__version__),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	'ERROR:mkdocs.commands.gh_deploy:Deployment terminated: Previous deployment was made with '	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	'MkDocs version 10.1.2; you are attempting to deploy with an older version ({}). Use '	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	['WARNING:mkdocs.commands.gh_deploy:Version check skipped: No version specified in previous deployment.'],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/gh_deploy_tests.py	def test_deploy(self, mock_import, check_version, get_remote, get_sha, is_repo):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_no_cname(	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_hostname(self, mock_import, check_version, get_remote, get_sha, is_repo):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version_default(self, mock_import, check_version, get_remote, get_sha, is_repo):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_ignore_version(self, mock_import, check_version, get_remote, get_sha, is_repo):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_error(self, mock_log, mock_import, check_version, get_sha, is_repo):	9dd04fc5237e6559a07c3822527de64a
mkdocutils/tests/gh_deploy_tests.py	class TestGitHubDeploy(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_no_cname(	9d6938f1cb84a9fcb5e90ba81c575734
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/gh_deploy_tests.py	def test_deploy_no_cname(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/gh_deploy_tests.py	"Expected '%s' to have been called once. Called %s times." %	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/tests/gh_deploy_tests.py	'version 0.1.2; you are deploying with a newer version ({})'.format(__version__),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/gh_deploy_tests.py	'MkDocs version 10.1.2; you are attempting to deploy with an older version ({}). Use '	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/gh_deploy_tests.py	'--ignore-version to deploy anyway.'.format(__version__),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/gh_deploy_tests.py	(mock._mock_name or 'mock', self.call_count)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertTrue(gh_deploy._is_cwd_git_repo())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertFalse(gh_deploy._is_cwd_git_repo())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(gh_deploy._get_current_sha('.'), '6d98394')	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertEqual(expected, gh_deploy._get_remote_url('origin'))	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	gh_deploy._check_version('gh-pages')	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	self.assertRaises(SystemExit, gh_deploy._check_version, 'gh-pages')	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	gh_deploy._check_version('gh-pages')	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/gh_deploy_tests.py	cm.output, [	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/gh_deploy_tests.py	cm.output, [	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/gh_deploy_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/gh_deploy_tests.py	def assert_mock_called_once(self, mock):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/gh_deploy_tests.py	if not mock.call_count == 1:	1b11a8bf314986f48087f9c86d17e33a
mkdocutils/tests/search_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/search_tests.py	class SearchConfigTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/search_tests.py	class SearchPluginTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/search_tests.py	class SearchIndexTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/search_tests.py	def test_lang_default(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_str(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_list(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_multi_list(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_bad_type(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_bad_code(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_lang_good_and_bad_code(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_plugin_config_defaults(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_plugin_config_lang(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_plugin_config_separator(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_plugin_config_min_search_length(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_plugin_config_prebuild_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_config_defaults(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_config_include_search_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_config_search_index_only(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_post_build_defaults(self, mock_copy_file, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_post_build_single_lang(self, mock_copy_file, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_post_build_multi_lang(self, mock_copy_file, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_event_on_post_build_search_index_only(self, mock_copy_file, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_html_stripping(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_content_parser(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_content_parser_no_id(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_content_parser_content_before_header(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_content_parser_no_sections(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_create_search_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_returns_error(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_raises_ioerror(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_raises_oserror(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_false(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_python(self, mock_lunr):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def test_prebuild_index_node(self, mock_popen):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/search_tests.py	def strip_whitespace(string):	f6551d049dd665ae3820e11789e171fd
mkdocutils/tests/search_tests.py	"""\n        Test finding the relevant TOC item by the tag ID.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/tests/search_tests.py	"""\n        Test finding the relevant TOC item by the tag ID.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/search_tests.py	option = search.LangOption(default=['en'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	value = option.validate('en')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	value = option.validate(['en'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	value = option.validate(['en', 'es', 'fr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	value = option.validate(['en', 'es', 'fr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	value = option.validate(['en', 'es', 'fr'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en', 'es', 'fr'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en', 'es', 'fr'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(['en', 'es', 'fr'], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertRaises(ValidationError, option.validate, ['foo'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertRaises(ValidationError, option.validate, ['en', 'foo'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertRaises(ValidationError, option.validate, ['en', 'foo'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'min_search_length': 3,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'prebuild_index': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['es'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['es'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'min_search_length': 3,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'prebuild_index': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'lang': 'es'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'lang': 'es'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-\.]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-\.]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'min_search_length': 3,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'prebuild_index': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'separator': r'[\s\-\.]+'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'separator': r'[\s\-\.]+'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'min_search_length': 2,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'prebuild_index': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'min_search_length': 2})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'lang': ['en'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'separator': r'[\s\-]+',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'min_search_length': 3,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'prebuild_index': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	errors, warnings = plugin.load_config({'prebuild_index': True})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme='mkdocs', extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	result['theme'].static_templates, {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(len(result['theme'].dirs), 3)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(result['extra_javascript'], ['search/main.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(result['extra_javascript'], ['search/main.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'include_search_page': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'include_search_page': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'include_search_page': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertTrue(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertTrue(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	result['theme'].static_templates, {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml', 'search.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml', 'search.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml', 'search.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(len(result['theme'].dirs), 3)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(result['extra_javascript'], ['search/main.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(result['extra_javascript'], ['search/main.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True}, extra_javascript=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertTrue(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertTrue(result['theme']['search_index_only'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['include_search_page'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	result['theme'].static_templates, {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(len(result['theme'].dirs), 2)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(len(result['extra_javascript']), 0)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.write_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.copy_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	config = load_config(theme='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.write_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.copy_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	config = load_config(theme='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.write_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.copy_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es', 'fr']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es', 'fr']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es', 'fr']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	config = load_config(theme='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.write_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.utils.copy_file', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	plugin.load_config({'lang': ['es']})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	theme={'name': 'mkdocs', 'search_index_only': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'Home', File(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'About', File(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	full_content = ''.join(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[0]['title'], page.title)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[0]['text'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[0]['location'], loc)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[1]['title'], "Heading 1")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[1]['text'], "Content 1")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[1]['location'], "{}#heading-1".format(loc),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[2]['title'], "Heading 2")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[2]['text'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[2]['location'], "{}#heading-2".format(loc),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[3]['title'], "Heading 3")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[3]['text'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[3]['location'], "{}#heading-3".format(loc),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', 'Some Error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', 'Some Error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True, side_effect=OSError)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': True},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_popen_obj.communicate.return_value = ('', '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': False},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': False},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('mkdocs.contrib.search.search_index.lunr', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_lunr.return_value.serialize.return_value = {'mock': 'index'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	mock_lunr.return_value.serialize.return_value = {'mock': 'index'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index = search_index.SearchIndex(prebuild_index='python', lang='en')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index = search_index.SearchIndex(prebuild_index='python', lang='en')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'python', 'lang': 'en'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'python', 'lang': 'en'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'python', 'lang': 'en'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'python', 'lang': 'en'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'python', 'lang': 'en'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	@mock.patch('subprocess.Popen', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index = search_index.SearchIndex(prebuild_index='node')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'docs': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'node'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'node'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'config': {'prebuild_index': 'node'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	'index': {'mock': 'index'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/search_tests.py	index._entries[1]['location'], "{}#heading-1".format(loc),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/search_tests.py	index._entries[2]['location'], "{}#heading-2".format(loc),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/search_tests.py	index._entries[3]['location'], "{}#heading-3".format(loc),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/search_tests.py	theme='mkdocs', extra_javascript=[],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml', 'search.html',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	'404.html', 'sitemap.xml',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	'index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	'about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	index._entries[0]['text'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	index._entries[2]['text'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	index._entries[3]['text'],	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/search_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	value = option.validate('en')	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	value = option.validate(['en'])	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	value = option.validate(['en', 'es', 'fr'])	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = plugin.on_config(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = plugin.on_config(config)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = plugin.on_config(config)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	page.content = html_content	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	result = json.loads(index.generate_search_index())	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/search_tests.py	"""Heading{0}Content{0}""".format(i) for i in range(1, 4)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/search_tests.py	option = search.LangOption(default=['en'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/search_tests.py	self.assertFalse(result['theme']['search_index_only'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/search_tests.py	def test_find_toc_by_id(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/search_tests.py	def test_create_search_index(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/search_tests.py	def test_create_search_index(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/search_tests.py	class SearchPluginTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/search_tests.py	class SearchIndexTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/search_tests.py	Page(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/search_tests.py	Page(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/search_tests.py	"""Heading{0}Content{0}""".format(i) for i in range(1, 4)	12213f9970974604dd114ca7192d434e
mkdocutils/tests/search_tests.py	toc_item = index._find_toc_by_id(toc, "heading-1")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	toc_item2 = index._find_toc_by_id(toc, "heading-2")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	toc_item3 = index._find_toc_by_id(toc, "heading-3")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(len(index._entries), 4)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[0]['title'], page.title)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[0]['text'],	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[0]['location'], loc)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[1]['title'], "Heading 1")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[1]['text'], "Content 1")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[1]['location'], "{}#heading-1".format(loc),	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[2]['title'], "Heading 2")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[2]['text'],	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[2]['location'], "{}#heading-2".format(loc),	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	self.assertEqual(index._entries[3]['title'], "Heading 3")	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[3]['text'],	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	index._entries[3]['location'], "{}#heading-3".format(loc),	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/search_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/new_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/new_tests.py	class NewTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/new_tests.py	def test_new(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/new_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/new_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/integration.py	import subprocess	31d8e32d555bf82a8bdc0043f2362435
mkdocutils/tests/integration.py	subprocess.check_call(command, cwd=project_dir)	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/tests/integration.py	subprocess.check_call(command, cwd=project_dir)	d32e71829c87bbef409bd262f04dc2c6
mkdocutils/tests/integration.py	def main(output=None):	f6551d049dd665ae3820e11789e171fd
mkdocutils/tests/integration.py	"""\n# MkDocs Integration tests\n\nThis is a simple integration test that builds the MkDocs\ndocumentation against all of the builtin themes.\n\nFrom the root of the MkDocs git repo, use:\n\n    python -m mkdocs.tests.integration --help\n\n\nTODOs\n    - Build with different configuration options.\n    - Build documentation other than just MkDocs as it is relatively simple.\n"""	7e03d1ae3a633ff95858123ac7013245
mkdocutils/tests/integration.py	log = logging.getLogger('mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	MKDOCS_CONFIG = os.path.abspath(os.path.join(DIR, '../../mkdocs.yml'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	TEST_PROJECTS = os.path.abspath(os.path.join(DIR, 'integration'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	'--output',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	base_cmd = ['mkdocs', 'build', '-s', '-v', '--site-dir']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	base_cmd = ['mkdocs', 'build', '-s', '-v', '--site-dir']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	base_cmd = ['mkdocs', 'build', '-s', '-v', '--site-dir']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	base_cmd = ['mkdocs', 'build', '-s', '-v', '--site-dir']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	base_cmd = ['mkdocs', 'build', '-s', '-v', '--site-dir']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	command = base_cmd + [out, '--theme', theme]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	if __name__ == '__main__':	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/integration.py	log.debug("Building theme: {}".format(theme))	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/integration.py	log.debug("Building test project: {}".format(project))	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/integration.py	log.debug("Theme and integration builds are in {}".format(output))	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/integration.py	def main(output=None):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/integration.py	def main(output=None):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/integration.py	"\033[1m\033[1;32m *** %(message)s *** \033[0m",	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/tests/cli_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/cli_tests.py	class CLITests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/cli_tests.py	def setUp(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_default(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_config_file(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_dev_addr(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_strict(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_theme(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_use_directory_urls(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_no_directory_urls(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_livereload(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_no_livereload(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_dirtyreload(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_watch_theme(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_serve_wait(self, mock_serve):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_defaults(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_clean(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_dirty(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_config_file(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_strict(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_theme(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_use_directory_urls(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_no_directory_urls(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_site_dir(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_verbose(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_build_quiet(self, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_new(self, mock_new):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_defaults(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_clean(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_dirty(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_config_file(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_message(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_remote_branch(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_remote_name(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_force(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_ignore_version(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_strict(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_theme(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_use_directory_urls(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_no_directory_urls(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	def test_gh_deploy_site_dir(self, mock_gh_deploy, mock_build, mock_load_config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('config_file' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertIsInstance(kwargs['config_file'], io.BufferedReader)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--dev-addr', '0.0.0.0:80'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--dev-addr', '0.0.0.0:80'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	dev_addr='0.0.0.0:80',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--strict'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	theme='readthedocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--use-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--no-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--livereload'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--no-livereload'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='no-livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--dirtyreload'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='dirty',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--watch-theme'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.serve.serve', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--wait', '60'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ["serve", '--wait', '60'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	livereload='livereload',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertFalse(kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	logger = logging.getLogger('mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--clean'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--clean'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertFalse(kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--dirty'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--dirty'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue(kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('config_file' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertIsInstance(kwargs['config_file'], io.BufferedReader)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--strict'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--strict'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	theme='readthedocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--use-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--use-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--no-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--no-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	site_dir='custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--verbose'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--verbose'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	logger = logging.getLogger('mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--quiet'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['build', '--quiet'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	logger = logging.getLogger('mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.new.new', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	mock_new.assert_called_once_with('project')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('message' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['message'], None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('force' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['force'], False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('ignore_version' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['ignore_version'], False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in b_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertFalse(b_kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--clean'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--clean'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertFalse(kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--dirty'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--dirty'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('dirty' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue(kwargs['dirty'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--config-file', 'mkdocs.yml'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('config_file' in kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertIsInstance(kwargs['config_file'], io.BufferedReader)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(kwargs['config_file'].name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--message', 'A commit message'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--message', 'A commit message'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--message', 'A commit message'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('message' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['message'], 'A commit message')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['message'], 'A commit message')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-branch', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-branch', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-branch', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	remote_branch='foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-name', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-name', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--remote-name', 'foo'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	remote_name='foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--force'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--force'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('force' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['force'], True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--ignore-version'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--ignore-version'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertTrue('ignore_version' in g_kwargs)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['ignore_version'], True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--strict'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--strict'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--theme', 'readthedocs'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	theme='readthedocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--use-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--use-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--no-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--no-directory-urls'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.config.load_config', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.build.build', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	@mock.patch('mkdocs.commands.gh_deploy.gh_deploy', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--site-dir', 'custom'], catch_exceptions=False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	site_dir='custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/cli_tests.py	cli.cli, ['gh-deploy', '--message', 'A commit message'], catch_exceptions=False,	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/cli_tests.py	def test_gh_deploy_use_directory_urls(self, mock_gh_deploy, mock_build, mock_load_config):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/cli_tests.py	def test_gh_deploy_no_directory_urls(self, mock_gh_deploy, mock_build, mock_load_config):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	result = self.runner.invoke(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/cli_tests.py	args, kwargs = mock_serve.call_args	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/cli_tests.py	def test_gh_deploy_defaults(self, mock_gh_deploy, mock_build, mock_load_config):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/cli_tests.py	class CLITests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['force'], False)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['ignore_version'], False)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['force'], True)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/cli_tests.py	self.assertEqual(g_kwargs['ignore_version'], True)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/cli_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/theme_tests.py	""" Return dict of theme vars. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/theme_tests.py	""" Return dict of theme vars. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/theme_tests.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/theme_tests.py	class ThemeTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/theme_tests.py	def test_simple_theme(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def test_custom_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def test_custom_dir_only(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def static_templates(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def test_vars(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def test_no_theme_config(self, m):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	def test_inherited_theme(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/theme_tests.py	""" Return dict of theme vars. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/theme_tests.py	mkdocs_templates_dir = os.path.join(mkdocs_dir, 'templates')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme_dir = os.path.abspath(os.path.join(mkdocs_dir, 'themes'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	[os.path.join(theme_dir, 'mkdocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme.static_templates, {'404.html', 'sitemap.xml'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme.static_templates, {'404.html', 'sitemap.xml'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'include_search_page': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'navigation_depth': 2,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs', custom_dir=custom)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	os.path.join(theme_dir, 'mkdocs'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs', static_templates='foo.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs', static_templates='foo.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'404.html', 'sitemap.xml', 'foo.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'404.html', 'sitemap.xml', 'foo.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'404.html', 'sitemap.xml', 'foo.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs', foo='bar', baz=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs', foo='bar', baz=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['foo'], 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['foo'], 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['baz'], True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertTrue('new' not in theme)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertRaises(KeyError, lambda t, k: t[k], theme, 'new')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme['new'] = 42	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertTrue('new' in theme)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['new'], 42)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	@mock.patch('mkdocs.utils.yaml_load', return_value=None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	self.assertEqual(theme.static_templates, {'sitemap.xml'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'extends': 'readthedocs', 'static_templates': ['child.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'extends': 'readthedocs', 'static_templates': ['child.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'extends': 'readthedocs', 'static_templates': ['child.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'extends': 'readthedocs', 'static_templates': ['child.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'static_templates': ['parent.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	{'static_templates': ['parent.html']},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	with mock.patch('mkdocs.utils.yaml_load', m) as m:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	theme = Theme(name='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	os.path.join(theme_dir, 'mkdocs'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	os.path.join(theme_dir, 'readthedocs'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'sitemap.xml', 'child.html', 'parent.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'sitemap.xml', 'child.html', 'parent.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	'sitemap.xml', 'child.html', 'parent.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/theme_tests.py	import mkdocutils	4b374f2b2194bacc472f05764d971130
mkdocutils/tests/theme_tests.py	mkdocs_dir = os.path.abspath(os.path.dirname(mkdocs.__file__))	a363746844a71e72369229f9d7914606
mkdocutils/tests/theme_tests.py	return {k: theme[k] for k in iter(theme)}	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	self.assertRaises(KeyError, lambda t, k: t[k], theme, 'new')	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	self.assertRaises(KeyError, lambda t, k: t[k], theme, 'new')	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	def test_no_theme_config(self, m):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	m = mock.Mock(	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	with mock.patch('mkdocs.utils.yaml_load', m) as m:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/theme_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/theme_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/theme_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['baz'], True)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/theme_tests.py	self.assertEqual(theme['new'], 42)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/theme_tests.py	with mock.patch('mkdocs.utils.yaml_load', m) as m:	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/theme_tests.py	mkdocs_dir = os.path.abspath(os.path.dirname(mkdocs.__file__))	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/base.py	assert(errors_warnings == ([], [])), errors_warnings	a7dd6fcbff4faac413dfcb409af726d1
mkdocutils/tests/base.py	""" Return TOC generated by Markdown parser from Markdown source text. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/base.py	""" Helper to build a simple config for testing. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/base.py	""" Return TOC generated by Markdown parser from Markdown source text. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/base.py	""" Helper to build a simple config for testing. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/base.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/base.py	def assertPathsEqual(self, a, b, msg=None):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathExists(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathNotExists(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathIsFile(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathNotFile(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathIsDir(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def assertPathNotDir(self, *parts):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/base.py	def dedent(text):	f6551d049dd665ae3820e11789e171fd
mkdocutils/tests/base.py	""" Return TOC generated by Markdown parser from Markdown source text. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/base.py	""" Helper to build a simple config for testing. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/base.py	""" Helper to build a simple config for testing. """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/tests/base.py	md = markdown.Markdown(extensions=['toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	os.path.abspath(os.path.dirname(__file__)), 'integration', 'minimal',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	os.path.abspath(os.path.dirname(__file__)), 'integration', 'minimal',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	if 'site_name' not in cfg:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['site_name'] = 'Example'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['site_name'] = 'Example'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	if 'config_file_path' not in cfg:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['config_file_path'] = os.path.join(path_base, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['config_file_path'] = os.path.join(path_base, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	if 'docs_dir' not in cfg:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['docs_dir'] = os.path.join(path_base, 'docs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	cfg['docs_dir'] = os.path.join(path_base, 'docs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	config_file_path=cfg['config_file_path'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	files = {f: '' for f in files} if isinstance(	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	if 'prefix' not in kw:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	kw['prefix'] = 'mkdocs_test-'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	kw['prefix'] = 'mkdocs_test-'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	utils.write_file(content.encode(encoding='utf-8'), pth)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	self.assertEqual(a.replace('\\', '/'), b.replace('\\', '/'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	self.assertEqual(a.replace('\\', '/'), b.replace('\\', '/'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	self.assertEqual(a.replace('\\', '/'), b.replace('\\', '/'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	self.assertEqual(a.replace('\\', '/'), b.replace('\\', '/'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	672a1e9828bf53e36860482e8867d066
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	3c0d1cc7e21f36805830bbeb8584b8d2
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	3c0d1cc7e21f36805830bbeb8584b8d2
mkdocutils/tests/base.py	None, "The path '{}' does not exist".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	None, "The path '{}' does exist".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	None, "The path '{}' is not a file that exists".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	None, "The path '{}' is a file that exists".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	None, "The path '{}' is not a directory that exists".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	None, "The path '{}' is a directory that exists".format(path),	2aa143575238f1af11a86b153c7d5976
mkdocutils/tests/base.py	def assertPathsEqual(self, a, b, msg=None):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathExists(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathNotExists(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathIsFile(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathNotFile(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathIsDir(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	def assertPathNotDir(self, *parts):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/base.py	"""\n    A decorator for building a temporary directory with prepopulated files.\n\n    The temporary directory and files are created just before the wrapped function is called and are destroyed\n    immediately after the wrapped function returns.\n\n    The `files` keyword should be a dict of file paths as keys and strings of file content as values.\n    If `files` is a list, then each item is assumed to be a path of an empty file. All other\n    keywords are passed to `tempfile.TemporaryDirectory` to create the parent directory.\n\n    In the following example, two files are created in the temporary directory and then are destroyed when\n    the function exits:\n\n        @tempdir(files={\n            'foo.txt': 'foo content',\n            'bar.txt': 'bar content'\n        })\n        def example(self, tdir):\n            assert os.path.isfile(os.path.join(tdir, 'foo.txt'))\n            pth = os.path.join(tdir, 'bar.txt')\n            assert os.path.isfile(pth)\n            with open(pth, 'r', encoding='utf-8') as f:\n                assert f.read() == 'bar content'\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/base.py	for path, content in files.items():	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/base.py	files = {f: '' for f in files} if isinstance(	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/base.py	def assertPathsEqual(self, a, b, msg=None):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/base.py	def assertPathsEqual(self, a, b, msg=None):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/base.py	class PathAssertionMixin:	72a53e4dd0380c8467f821e52f447566
mkdocutils/tests/base.py	assert(errors_warnings == ([], [])), errors_warnings	d44dba10f5d58dcf9edf00f09e6ac8ba
mkdocutils/tests/base.py	def wrapper(self, *args):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/build_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/build_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/tests/build_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/build_tests.py	class BuildTests(PathAssertionMixin, unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/build_tests.py	def test_context_base_url_homepage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_homepage_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_nested_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_nested_page_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_relative_no_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_relative_no_page_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_absolute_no_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_no_page_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url_absolute_nested_no_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_nested_no_page_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_extra_css_js_from_homepage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_extra_css_js_from_nested_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_extra_css_js_from_nested_page_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_context_extra_css_js_no_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_extra_context(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_theme_template(self, mock_build_template, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_sitemap_template(self, mock_gzip_gzipfile, mock_build_template, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_skip_missing_theme_template(self, mock_build_template, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_skip_theme_template_empty_output(self, mock_build_template, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_extra_template(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_skip_missing_extra_template(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_skip_ioerror_extra_template(self, mock_open):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_skip_extra_template_empty_output(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_populate_page(self, docs_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_populate_page_dirty_modified(self, site_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_populate_page_dirty_not_modified(self, site_dir, docs_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_populate_page_read_error(self, docs_dir, mock_open):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_page(self, site_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_page_dirty_modified(self, site_dir, docs_dir, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_page_dirty_not_modified(self, site_dir, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_page_custom_template(self, site_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_build_page_error(self, site_dir, mock_write_file):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_copying_media(self, site_dir, docs_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_copy_theme_files(self, site_dir, docs_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_site_dir_contains_stale_files(self, site_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	def test_not_site_dir_contains_stale_files(self, site_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/build_tests.py	""" Helper which returns a Page object. """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/tests/build_tests.py	"""assert that the mock was called only once.\n\n        The `mock.assert_called_once()` method was added in PY36.\n        TODO: Remove this when PY35 support is dropped.\n        """	b225eb9fe6655019ac47e85220cba430
mkdocutils/tests/build_tests.py	# def test_build_page_empty(self, site_dir, mock_template):	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     mock_template.render = mock.Mock(return_value='')	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     cfg = load_config(site_dir=site_dir, nav=['index.md'], plugins=[])	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     nav = get_navigation(files, cfg)	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     page = files.documentation_pages()[0].page	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     page.title = ''	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     page.markdown = ''	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     page.content = ''	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     with self.assertLogs('mkdocs', level='INFO') as cm:	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#         build._build_page(page, cfg, files, nav, cfg['theme'].get_env())	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#         ["INFO:mkdocs.commands.build:Page skipped: 'index.md'. Generated empty output."]	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     )	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     self.assert_mock_called_once(mock_template.render)	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	#     self.assertPathNotFile(site_dir, 'index.html')	80e30f0119285134cd3b527ead558d2d
mkdocutils/tests/build_tests.py	def build_page(title, path, config, md_src=''):	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	path, config['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	config['site_dir'], config['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	config['site_dir'], config['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	(mock._mock_name or 'mock', self.call_count)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '../..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '../..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='..',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='..',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '..')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '/foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_css=['style.css'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_javascript=['script.js'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_css=['style.css'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_javascript=['script.js'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	{'Nested': 'foo/bar.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_css=['style.css'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_javascript=['script.js'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo/bar.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_css=['style.css'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	extra_javascript=['script.js'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	mock.Mock(), mock.Mock(), cfg, base_url='..',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_css'], ['../style.css'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['extra_javascript'], ['../script.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg = load_config(extra={'a': 1})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['config']['extra']['a'], 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['config']['extra']['a'], 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(context['config']['extra']['a'], 1)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='some content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='some content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	env = cfg['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'main.html', env, mock.Mock(), cfg, mock.Mock(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='some content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='some content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('gzip.GzipFile')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	env = cfg['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'sitemap.xml', env, mock.Mock(), cfg, mock.Mock(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	env = cfg['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='WARN') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='WARN') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'missing.html', env, mock.Mock(), cfg, mock.Mock(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build._build_template', return_value='')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	env = cfg['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'main.html', env, mock.Mock(), cfg, mock.Mock(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'missing.html', files, cfg, mock.Mock(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data=''))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data=''))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'foo.html', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='INFO') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page = Page('Foo', file, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertEqual(page.content, '<p>page content</p>')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'testing.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'testing.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'testing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'testing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page = Page('Foo', file, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertTrue(page.markdown.startswith('# Welcome to MkDocs'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page = Page('Foo', file, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'new page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'new page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.structure.pages.open', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.structure.pages.open', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'missing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'missing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page = Page('Foo', file, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'ERROR:mkdocs.structure.pages:File not found: missing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg = load_config(site_dir=site_dir, nav=['index.md'], plugins=[])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.title = 'Title'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.markdown = 'page content'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	build._build_page(page, cfg, files, nav, cfg['theme'].get_env())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	nav=['index.md'], plugins=[],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.title = 'Title'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.markdown = 'new page content'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.content = '<p>new page content</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['theme'].get_env(), dirty=True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'testing.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'testing.html': '<p>page content</p>'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg = load_config(site_dir=site_dir, nav=['testing.md'], plugins=[])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'testing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'testing.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.title = 'Title'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.markdown = 'page content'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['theme'].get_env(), dirty=True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg = load_config(site_dir=site_dir, nav=['index.md'], plugins=[])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.title = 'Title'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.meta = {'template': '404.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.meta = {'template': '404.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.markdown = 'page content'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	build._build_page(page, cfg, files, nav, cfg['theme'].get_env())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.utils.write_file', side_effect=OSError('Error message.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg = load_config(site_dir=site_dir, nav=['index.md'], plugins=[])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.title = 'Title'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.markdown = 'page content'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	with self.assertLogs('mkdocs', level='ERROR') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	cfg, files, nav, cfg['theme'].get_env(),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md': 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'index.md': 'page content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'empty.md': '',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'empty.md': '',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'img.jpg': '',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'img.jpg': '',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'static.html': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'static.html': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'.hidden': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'.hidden': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'.git/hidden': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'.git/hidden': 'content',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'img.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'static.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, 'empty.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, '.hidden')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, '.git/hidden')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files={'index.md': 'page content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsFile(site_dir, '404.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsDir(site_dir, 'js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsDir(site_dir, 'css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsDir(site_dir, 'img')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathIsDir(site_dir, 'fonts')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, '__init__.py')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, '__init__.pyc')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, 'base.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, 'content.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	self.assertPathNotExists(site_dir, 'main.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	@tempdir(files=['index.html'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/build_tests.py	'<h1 id="welcome-to-mkdocs">Welcome to MkDocs</h1>',	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/tests/build_tests.py	def test_build_sitemap_template(self, mock_gzip_gzipfile, mock_build_template, mock_write_file):	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["WARNING:mkdocs.commands.build:Template skipped: 'missing.html' not found in theme directories."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["INFO:mkdocs.commands.build:Template skipped: 'main.html' generated empty output."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	@mock.patch('mkdocs.commands.build.open', mock.mock_open(read_data='template content'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["WARNING:mkdocs.commands.build:Template skipped: 'missing.html' not found in docs_dir."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["WARNING:mkdocs.commands.build:Error reading template 'foo.html': Error message."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["INFO:mkdocs.commands.build:Template skipped: 'foo.html' generated empty output."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	"ERROR:mkdocs.commands.build:Error reading page 'missing.md': Error message.",	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	# TODO: fix this. It seems that jinja2 chokes on the mock object. Not sure how to resolve.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	#     files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	#         ["INFO:mkdocs.commands.build:Page skipped: 'index.md'. Generated empty output."]	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	["ERROR:mkdocs.commands.build:Error building page 'index.md': Error message."],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	# Verify that only non-empty md file (coverted to html), static HTML file and image are copied.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/build_tests.py	file = File(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	file = File(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	file = File(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	file = File(	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	page.content = '<p>new page content</p>'	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	page.content = '<p>page content</p>'	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_no_page_use_directory_urls(self):	5dabbd79c426e46a6ed28566be39bdc1
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_nested_no_page_use_directory_urls(self):	5dabbd79c426e46a6ed28566be39bdc1
mkdocutils/tests/build_tests.py	def test_context_base_url_homepage_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	def test_context_base_url_nested_page_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	def test_context_base_url_relative_no_page_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_no_page_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	def test_context_base_url__absolute_nested_no_page_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	def test_context_extra_css_js_from_nested_page_use_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/build_tests.py	File(	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	'index.md', cfg['docs_dir'],	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	cfg['site_dir'], cfg['use_directory_urls'],	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	nav = get_navigation(files, cfg)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	self.assertEqual(context['base_url'], '.')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	env = cfg['theme'].get_env()	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/build_tests.py	def test_copy_theme_files(self, site_dir, docs_dir):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/build_tests.py	class BuildTests(PathAssertionMixin, unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	file = File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	file = File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	file = File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	file = File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	cfg = load_config(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	build._build_page(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	build._build_page(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	File(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/build_tests.py	"Expected '%s' to have been called once. Called %s times." %	f7070e69204ea242a0163a7ed0d8ff2d
mkdocutils/tests/build_tests.py	page.markdown, page.meta = meta.get_data(md_src)	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/tests/build_tests.py	page.markdown, page.meta = meta.get_data(md_src)	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/tests/build_tests.py	(mock._mock_name or 'mock', self.call_count)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_theme_template(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_theme_template(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_theme_template(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_theme_template(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_extra_template(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_extra_template('foo.html', files, cfg, mock.Mock())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._populate_page(page, cfg, Files([file]))	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._populate_page(page, cfg, Files([file]), dirty=True)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._populate_page(page, cfg, Files([file]), dirty=True)	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	OSError, build._populate_page,	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_page(page, cfg, files, nav, cfg['theme'].get_env())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_page(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_page(	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	build._build_page(page, cfg, files, nav, cfg['theme'].get_env())	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	OSError, build._build_page, page,	376bb44674c6ae9813a4968db904791e
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output, [	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/build_tests.py	def assert_mock_called_once(self, mock):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/build_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/build_tests.py	if not mock.call_count == 1:	1b11a8bf314986f48087f9c86d17e33a
mkdocutils/tests/utils/utils_tests.py	'indexmd': False	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'indexhtml': False	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../local/file/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../local/windows/file/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../image.png'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../style.css?v=20180308c'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'#some_id'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../../media.cdn.org/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../../local/file/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../../local/windows/file/jquery.js'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../../image.png'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'../../style.css?v=20180308c'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'#some_id'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	[1, 2, 3, 4, 5, 6, 7, 8]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md')]}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'''\n            key: value\n            key2:\n              - value\n            '''	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'''\n            key1: !ENV VARNAME\n            key2: !ENV UNDEFINED\n            key3: !ENV [UNDEFINED, default]\n            key4: !ENV [UNDEFINED, VARNAME, default]\n            key5: !ENV BOOLVAR\n            '''	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'foo/bar/baz.txt'   # ensure missing dirs are created	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	"""\n            Title: Foo Bar\n            Date: 2018-07-10\n            Summary: Line one\n                Line two\n            Tags: foo\n            Tags: bar\n\n            Doc body\n            """	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'tags': 'foo bar'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	)	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	"""\n            ---\n            Title: Foo Bar\n            Date: 2018-07-10\n            Summary: Line one\n                Line two\n            Tags:\n                - foo\n                - bar\n            ---\n            Doc body\n            """	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	'Tags': ['foo', 'bar']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	)	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	"""\n            ---\n            - List item\n            ---\n            Doc body\n            """	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	"""\n            ---\n            foo: bar: baz\n            ---\n            Doc body\n            """	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	"""\n            Doc body\n            """	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/utils/utils_tests.py	sorted(['mkdocs2', ]))	5073e8d5692b8047153d7e6c97c4240b
mkdocutils/tests/utils/utils_tests.py	mock_get.return_value = {'mkdocs': theme1, }	5073e8d5692b8047153d7e6c97c4240b
mkdocutils/tests/utils/utils_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/utils/utils_tests.py	class UtilsTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/utils/utils_tests.py	def test_html_path(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_url_path(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_is_markdown_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_is_html_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_create_media_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_create_media_urls_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_reduce_list(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_themes(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_theme_dir(self, mock_iter):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_theme_dir_keyerror(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_theme_dir_importerror(self, mock_iter):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_themes_warning(self, mock_iter):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_get_themes_error(self, mock_get, mock_iter):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_nest_paths(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_unicode_yaml(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_env_var_in_yaml(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_copy_files(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_copy_files_without_permissions(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_mm_meta_data(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_mm_meta_data_blank_first_line(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_yaml_meta_data(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_yaml_meta_data_not_dict(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_yaml_meta_data_invalid(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	def test_no_meta_data(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/utils/utils_tests.py	from unittest import mock	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/utils/utils_tests.py	import unittest	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/utils/utils_tests.py	import tempfile	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/utils/utils_tests.py	import datetime	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/utils/utils_tests.py	from mkdocutils import utils, exceptions	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/utils/utils_tests.py	'index.md': 'index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md': 'index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide.md': 'api-guide/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide.md': 'api-guide/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/index.md': 'api-guide/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/index.md': 'api-guide/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/testing.md': 'api-guide/testing/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/testing.md': 'api-guide/testing/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md': '/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md': '/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide.md': '/api-guide/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide.md': '/api-guide/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/index.md': '/api-guide/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/index.md': '/api-guide/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/testing.md': '/api-guide/testing/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'api-guide/testing.md': '/api-guide/testing/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.MARKDOWN': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.txt': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'indexmd': False	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.htm': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.HTML': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.txt': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'indexhtml': False	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/file/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../local/file/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local\\windows\\file\\jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/windows/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/windows/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../local/windows/file/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'image.png': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'image.png',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'image.png',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../image.png'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'style.css?v=20180308c': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'style.css?v=20180308c',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'style.css?v=20180308c',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../style.css?v=20180308c'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'https://media.cdn.org/jq.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'http://media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'//media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'media.cdn.org/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../media.cdn.org/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../../media.cdn.org/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/file/jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../local/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../../local/file/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local\\windows\\file\\jquery.js': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'local/windows/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../local/windows/file/jquery.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../../local/windows/file/jquery.js'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'image.png': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'image.png',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../image.png',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../../image.png'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'style.css?v=20180308c': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'style.css?v=20180308c',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../style.css?v=20180308c',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'../../style.css?v=20180308c'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'#some_id'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	['mkdocs', 'readthedocs'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	['mkdocs', 'readthedocs'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch('pkg_resources.iter_entry_points', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	path = 'some/path'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme.name = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme.dist.key = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme.load().__file__ = os.path.join(path, '__init__.py')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertRaises(KeyError, utils.get_theme_dir, 'nonexistanttheme')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch('pkg_resources.iter_entry_points', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme.name = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme.dist.key = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch('pkg_resources.iter_entry_points', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme1.name = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme1.dist.key = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme2.name = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme2.dist.key = 'mkdocs3'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	sorted(['mkdocs2', ]))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch('pkg_resources.iter_entry_points', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch('pkg_resources.get_entry_map', autospec=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme1.name = 'mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme1.dist.key = 'mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme2.name = 'mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	theme2.dist.key = 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	mock_get.return_value = {'mkdocs': theme1, }	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'configuration.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'configuration.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'styling-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'styling-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'contributing.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'contributing.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'license.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'license.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	{'User guide': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'configuration.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'configuration.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'styling-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'styling-your-docs.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md')]},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md')]},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	{'About': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'contributing.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'contributing.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'license.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'license.md'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md')]}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md')]}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertTrue(isinstance(config['key'], str))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertTrue(isinstance(config['key2'][0], str))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch.dict(os.environ, {'VARNAME': 'Hello, World!', 'BOOLVAR': 'false'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch.dict(os.environ, {'VARNAME': 'Hello, World!', 'BOOLVAR': 'false'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch.dict(os.environ, {'VARNAME': 'Hello, World!', 'BOOLVAR': 'false'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	@mock.patch.dict(os.environ, {'VARNAME': 'Hello, World!', 'BOOLVAR': 'false'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertIsInstance(config['key1'], str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key1'], 'Hello, World!')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key1'], 'Hello, World!')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertIsNone(config['key2'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertIsInstance(config['key3'], str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key3'], 'default')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key3'], 'default')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertIsInstance(config['key4'], str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key4'], 'Hello, World!')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertEqual(config['key4'], 'Hello, World!')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	self.assertIs(config['key5'], False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'bar.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'baz.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo/',             # ensure src filename is appended	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo/bar/baz.txt'   # ensure missing dirs are created	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo/bar.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo/bar/baz.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	with open(src, 'w') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	f.write('content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'bar.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'baz.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'foo.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'bar.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'baz.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	with open(src, 'w') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	f.write('content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'title': 'Foo Bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'title': 'Foo Bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'date': '2018-07-10',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'date': '2018-07-10',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'summary': 'Line one Line two',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'summary': 'Line one Line two',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'tags': 'foo bar'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'tags': 'foo bar'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	doc = '\nfoo: bar\nDoc body'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Title': 'Foo Bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Title': 'Foo Bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Date': datetime.date(2018, 7, 10),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Summary': 'Line one Line two',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Summary': 'Line one Line two',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Tags': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Tags': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'Tags': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/utils/utils_tests.py	'''\n            key: value\n            key2:\n              - value\n            '''	ad9a73d02e19e994671a841e90e88f56
mkdocutils/tests/utils/utils_tests.py	'''\n            key1: !ENV VARNAME\n            key2: !ENV UNDEFINED\n            key3: !ENV [UNDEFINED, default]\n            key4: !ENV [UNDEFINED, VARNAME, default]\n            key5: !ENV BOOLVAR\n            '''	ad9a73d02e19e994671a841e90e88f56
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	e07cfca2a0b82884796a314bd9af0dd7
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	self.assertNotEqual(os.stat(src).st_mode, os.stat(os.path.join(dst_dir, expected[i])).st_mode)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/utils/utils_tests.py	result = utils.nest_paths([	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/utils/utils_tests.py	for i, page in enumerate(pages):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	self.assertEqual([v[i] for v in expected_results.values()], urls)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	for i, page in enumerate(pages):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	self.assertEqual([v[i] for v in expected_results.values()], urls)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	j = os.path.join	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	for i, src in enumerate(src_paths):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	with open(src, 'w') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	for i, src in enumerate(src_paths):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	with open(src, 'w') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/utils/utils_tests.py	def test_create_media_urls(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/utils/utils_tests.py	def test_create_media_urls_use_directory_urls(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/utils/utils_tests.py	def test_copy_files(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/utils/utils_tests.py	def test_copy_files_without_permissions(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/utils/utils_tests.py	class UtilsTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	Page('Home', File('index.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	Page('About', File('about.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg),	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	Page('FooBar', File('foo/bar.md',  cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']), cfg)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	utils.reduce_list([1, 2, 3, 4, 5, 5, 2, 4, 6, 7, 8]),	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	self.assertTrue(os.path.isfile(os.path.join(dst_dir, expected[i])))	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	self.assertTrue(os.path.isfile(os.path.join(dst_dir, expected[i])))	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	self.assertNotEqual(os.stat(src).st_mode, os.stat(os.path.join(dst_dir, expected[i])).st_mode)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	self.assertTrue(os.access(os.path.join(dst_dir, expected[i]), os.W_OK))	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/utils/utils_tests.py	['mkdocs', 'readthedocs'])	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	sorted(['mkdocs2', ]))	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md')]},	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	j('user-guide', 'writing-your-docs.md')]},	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md')]}	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	j('about', 'release-notes.md')]}	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/utils/utils_tests.py	'local\\windows\\file\\jquery.js': [	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/utils/utils_tests.py	'local\\windows\\file\\jquery.js': [	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	)	6d6acb1342b3d8f7e5f578fc6c8b1ec1
mkdocutils/tests/utils/utils_tests.py	self.assertIs(config['key5'], False)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/utils/utils_tests.py	'Date': datetime.date(2018, 7, 10),	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/utils/utils_tests.py	for src in src_paths:	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/utils/utils_tests.py	src = os.path.join(src_dir, src)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/utils/utils_tests.py	if os.path.exists(src):	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/utils/utils_tests.py	os.chmod(src, stat.S_IRUSR | stat.S_IWUSR)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/utils/utils_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/utils/utils_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/utils/utils_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/utils/utils_tests.py	theme.load().__file__ = os.path.join(path, '__init__.py')	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/utils/utils_tests.py	theme1.load().__file__ = "some/path1"	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/utils/utils_tests.py	theme2.load().__file__ = "some/path2"	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/utils/utils_tests.py	theme1.load().__file__ = "some/path1"	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/utils/utils_tests.py	theme2.load().__file__ = "some/path2"	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/config/config_options_tests.py	assert self.validate_config(test_config)	a7dd6fcbff4faac413dfcb409af726d1
mkdocutils/tests/config/config_options_tests.py	option.validate, '277.0.0.1:8000'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.18000'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, 123	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.1:foo'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.1'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, '[::1]:8000'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'dir': 'Übersicht'.encode(encoding=sys.getfilesystemencoding())	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'.encode(encoding='ISO 8859-5')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'dir': 'foo'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'dir': '.'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '/'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'show_sidebar': False	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'name': None	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs2'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	[['index.md', ], ]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{"Page": "page.md"}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'baz': None}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'toc': {'permalink': True}}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {'toc': {'permalink': True}}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': None	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'foo': 'not a dict'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	['not a dict']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	{'key1': 'value', 'key2': 'too many keys'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['unknown']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_options_tests.py	[['index.md', ], ]	5073e8d5692b8047153d7e6c97c4240b
mkdocutils/tests/config/config_options_tests.py	[['index.md', ], ]	5073e8d5692b8047153d7e6c97c4240b
mkdocutils/tests/config/config_options_tests.py	""" Given a config with values for site_dir and doc_dir, run site_dir post_validation. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/tests/config/config_options_tests.py	""" Given a config with values for site_dir and doc_dir, run site_dir post_validation. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/tests/config/config_options_tests.py	""" Given a config with values for site_dir and doc_dir, run site_dir post_validation. """	e03be33da074bb98dcf573eab2e6ffb0
mkdocutils/tests/config/config_options_tests.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/config/config_options_tests.py	class OptionallyRequiredTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class TypeTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class ChoiceTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class IpAddressTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class URLTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class RepoURLTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class DirTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class SiteDirTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class ThemeTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class NavTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class PrivateTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	class MarkdownExtensionsTest(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_options_tests.py	def test_empty(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_required(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_required_no_default(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_default(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_replace_default(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_single_type(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_multiple_types(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_length(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_valid_choice(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_choice(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_choices(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_valid_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_valid_IPv6_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_named_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_default_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_IP_normalization(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_address_range(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_address_format(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_address_type(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_address_port(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_address_missing_port(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_unsupported_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_unsupported_IPv6_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_IPv6_address(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_valid_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_repo_name_github(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_repo_name_bitbucket(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_repo_name_gitlab(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_repo_name_custom(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_edit_uri_github(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_edit_uri_bitbucket(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_edit_uri_gitlab(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_edit_uri_custom(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_repo_name_custom_and_empty_edit_uri(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_valid_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_missing_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_missing_dir_but_required(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_incorrect_type_attribute_error(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_incorrect_type_type_error(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_dir_unicode(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_dir_filesystemencoding(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_dir_bad_encoding_fails(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_config_dir_prepended(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_dir_is_config_dir_fails(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_doc_dir_in_site_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_site_dir_in_docs_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_as_string(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_uninstalled_theme_as_string(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_default(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_as_simple_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_as_complex_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_name_is_none(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_config_missing_name(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_uninstalled_theme_as_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_theme_invalid_type(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_old_format(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_provided_dict(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_provided_empty(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_type(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_defined(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_simple_list(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_list_dicts(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_mixed_list(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_builtins(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_duplicates(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_builtins_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_configkey(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_none(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_not_list(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_config_option(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_config_item(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_invalid_dict_item(self, mockMd):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	def test_unknown_extension(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_options_tests.py	""" Legitimate settings with common prefixes should not fail validation. """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/config_options_tests.py	""" Given a config with values for site_dir and doc_dir, run site_dir post_validation. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/config/config_options_tests.py	""" Legitimate settings with common prefixes should not fail validation. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/config/config_options_tests.py	option.validate, {'a': 1})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.Choice(('python', 'node'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.Choice(('python', 'node'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	value = option.validate('python')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value, 'python')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.Choice(('python', 'node'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.Choice(('python', 'node'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_options.ValidationError, option.validate, 'go')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(ValueError, config_options.Choice, '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	addr = '127.0.0.1:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.host, '127.0.0.1')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	addr = '::1:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.host, '::1')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	addr = 'localhost:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.host, 'localhost')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	addr = '127.0.0.1:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.host, '127.0.0.1')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	addr = '127.000.000.001:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(str(value), '127.0.0.1:8000')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.host, '127.0.0.1')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, '277.0.0.1:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.18000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.1:foo'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, '127.0.0.1'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	value = option.validate('0.0.0.0:8000')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'dev_addr': value}, 'dev_addr')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'dev_addr': value}, 'dev_addr')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	value = option.validate(':::8000')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'dev_addr': value}, 'dev_addr')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'dev_addr': value}, 'dev_addr')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, '[::1]:8000'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://github.com/mkdocs/mkdocs"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['repo_name'], "GitHub")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://bitbucket.org/gutworth/six/"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['repo_name'], "Bitbucket")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://gitlab.com/gitlab-org/gitlab-ce/"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['repo_name'], "GitLab")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://launchpad.net/python-tuskarclient"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['repo_name'], "Launchpad")	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://github.com/mkdocs/mkdocs"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://bitbucket.org/gutworth/six/"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'src/default/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'src/default/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://gitlab.com/gitlab-org/gitlab-ce/"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config['edit_uri'], 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://launchpad.net/python-tuskarclient"}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config.get('edit_uri'), '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config.get('edit_uri'), '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = {'repo_url': "https://github.com/mkdocs/mkdocs",	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'repo_name': 'mkdocs'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'repo_name': 'mkdocs'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config.get('edit_uri'), 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(config.get('edit_uri'), 'edit/master/docs/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[('dir', config_options.Dir())],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertIsInstance(cfg['dir'], str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[('dir', config_options.Dir())],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'Übersicht'.encode(encoding=sys.getfilesystemencoding())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'Übersicht'.encode(encoding=sys.getfilesystemencoding())	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[('dir', config_options.Dir())],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'.encode(encoding='ISO 8859-5')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'.encode(encoding='ISO 8859-5')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'юникод'.encode(encoding='ISO 8859-5')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	base_path = os.path.abspath('.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[('dir', config_options.Dir())],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(base_path, 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'foo'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': 'foo'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertIsInstance(cfg['dir'], str)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(cfg['dir'], os.path.join(base_path, 'foo'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(cfg['dir'], os.path.join(base_path, 'foo'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[('dir', config_options.Dir())],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config_file_path=os.path.join(os.path.abspath('.'), 'mkdocs.yml'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': '.'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'dir': '.'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	fname = os.path.join(os.path.abspath('..'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	fname = os.path.join(os.path.abspath('..'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['docs_dir'] = docs_dir.validate(config['docs_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['docs_dir'] = docs_dir.validate(config['docs_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['site_dir'] = site_dir.validate(config['site_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['site_dir'] = site_dir.validate(config['site_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	('site_dir', site_dir),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	('docs_dir', docs_dir),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('..', parent_dir, 'docs'), 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('..', parent_dir, 'docs'), 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('..', parent_dir, 'docs'), 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('..', parent_dir, 'docs'), 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': j('..', parent_dir, 'docs'), 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': '/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': j('docs', 'site')},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': j('docs', 'site')},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': j('docs', 'site')},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': j('docs', 'site')},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': j('docs', 'site')},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '.', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '/', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '/', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '/', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': '/', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs-site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs-site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs-site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs-site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'site-docs', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'site-docs', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'site-docs', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'docs_dir': 'site-docs', 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({'name': 'mkdocs'}, value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({'name': 'mkdocs'}, value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.Theme(default='mkdocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({'name': 'mkdocs'}, value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({'name': 'mkdocs'}, value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'custom_dir': 'custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'custom_dir': 'custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'static_templates': ['sitemap.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'static_templates': ['sitemap.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'show_sidebar': False	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': None	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'custom_dir': 'custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'custom_dir': 'custom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'name': 'mkdocs2'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config = ['mkdocs2']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	[['index.md', ], ]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(['index.md', {'Page': 'page.md'}], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(['index.md', {'Page': 'page.md'}], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(['index.md', {'Page': 'page.md'}], value)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'extra_stuff': []}, 'extra_stuff')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'extra_stuff': []}, 'extra_stuff')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'extra_stuff': []}, 'extra_stuff')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation({'extra_stuff': []}, 'extra_stuff')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, 'somevalue')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'baz': None}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar', 'baz'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar', 'baz'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar', 'baz'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar', 'baz'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'bar': {'bar_option': 'bar value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {'bar_option': 'bar value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo', 'bar']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc', 'foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc', 'foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc', 'foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc', 'foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc', 'foo', 'bar'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(builtins=['meta', 'toc'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'toc': {'permalink': True}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'toc': {'permalink': True}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['meta', 'toc'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {'toc': {'permalink': True}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {'toc': {'permalink': True}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {'toc': {'permalink': True}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option = config_options.MarkdownExtensions(configkey='bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': {'foo_option': 'foo value'}}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['foo'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'bar': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'foo': {'foo_option': 'foo value'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': None	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'mdx_configs': {}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, 'not a list')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': 'not a dict'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'foo': 'not a dict'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	['not a dict']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	@patch('markdown.Markdown')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'key1': 'value', 'key2': 'too many keys'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'key1': 'value', 'key2': 'too many keys'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'key1': 'value', 'key2': 'too many keys'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	{'key1': 'value', 'key2': 'too many keys'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['unknown']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	'markdown_extensions': ['unknown']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	option.validate, config['markdown_extensions']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_options_tests.py	def test_valid_IPv6_address(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/config/config_options_tests.py	def test_IP_normalization(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/config/config_options_tests.py	def test_unsupported_IPv6_address(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/config/config_options_tests.py	def test_invalid_IPv6_address(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/config/config_options_tests.py	def test_simple_list(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_list_dicts(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_mixed_list(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_builtins(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_configkey(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_not_list(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_invalid_config_option(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_invalid_config_item(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	def test_invalid_dict_item(self, mockMd):	7611267c36b67e3145eba35e054f0e79
mkdocutils/tests/config/config_options_tests.py	""" Given a config with values for site_dir and doc_dir, run site_dir post_validation. """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_options_tests.py	import mkdocutils	4b374f2b2194bacc472f05764d971130
mkdocutils/tests/config/config_options_tests.py	parent_dir = mkdocs.__file__.split(os.sep)[-3]	a363746844a71e72369229f9d7914606
mkdocutils/tests/config/config_options_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(2)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(2)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate("Testing")	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate([1, 2, 3])	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate((1, 2, 3))	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate("Testing")	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate('python')	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(addr)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(addr)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(addr)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate('0.0.0.0:8000')	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(':::8000')	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(url)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(d)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(d)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate("mkdocs")	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(None)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(config)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(config)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate(config)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate([	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	value = option.validate([])	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_options_tests.py	d = os.path.dirname(__file__)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	d = os.path.join("not", "a", "real", "path", "I", "hope")	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	d = os.path.join("not", "a", "real", "path", "I", "hope")	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	d = __file__	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	j = os.path.join	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	j = os.path.join	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_options_tests.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'repo_url')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/config_options_tests.py	config['markdown_extensions'] = option.validate(config['markdown_extensions'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/config_options_tests.py	option.post_validation(config, 'markdown_extensions')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/config_options_tests.py	def validate_config(self, config):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/config/config_options_tests.py	class IpAddressTest(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_options_tests.py	class RepoURLTest(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_options_tests.py	class DirTest(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_options_tests.py	class ThemeTest(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_options_tests.py	class MarkdownExtensionsTest(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertEqual({	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(config_options.ValidationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_options_tests.py	option.validate, None)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, {'a': 1})	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, "Testing Long")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, "www.mkdocs.org")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, 1)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	'repo_name': 'mkdocs'}	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, d)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, d)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, 1)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, [])	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	self.validate_config, test_config)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	self.validate_config, test_config)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, "mkdocs2")	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, {})	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, [[], 1])	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, 'somevalue')	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, 'not a list')	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/config_options_tests.py	option.validate, None)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, {'a': 1})	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, "Testing Long")	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	config_options.ValidationError, option.validate, 'go')	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, "www.mkdocs.org")	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, 1)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	'repo_name': 'mkdocs'}	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, d)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, d)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, 1)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, [])	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	self.validate_config, test_config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	self.validate_config, test_config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, "mkdocs2")	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, {})	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, [[], 1])	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, 'somevalue')	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	}, config)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	option.validate, 'not a list')	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(option.is_required(), False)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(option.is_required(), True)	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.port, 8000)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.port, 8000)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.port, 8000)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.port, 8000)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	self.assertEqual(value.port, 8000)	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	option.validate, 123	7caa249b1e2b202e418d781668860f8c
mkdocutils/tests/config/config_options_tests.py	parent_dir = mkdocs.__file__.split(os.sep)[-3]	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/config/config_tests.py	config.load_config, config_file=open(config_file.name, 'rb')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	{'Introduction': 'index.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'some_var': 'bar'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'vars': {}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	'config_file_path': j(os.path.abspath('..'), 'mkdocs.yml')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	('config_file_path', config_options.Type(str))	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/config_tests.py	dict(),  # default theme	f1b7405a7aabff041213ca5a25b9aca7
mkdocutils/tests/config/config_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/config/config_tests.py	class ConfigTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/config_tests.py	def test_missing_config_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_missing_site_name(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_empty_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_nonexistant_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_invalid_config(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_theme(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_empty_nav(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_copy_pages_to_nav(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_dont_overwrite_nav_with_pages(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	def test_doc_dir_in_site_dir(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/config_tests.py	"""\n        Users can explicitly set the config file using the '--config' option.\n        Allows users to specify a config other than the default `mkdocs.yml`.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/tests/config/config_tests.py	config.load_config(config_file='bad_filename.yaml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(errors[0][0], 'site_name')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(str(errors[0][1]), 'Required configuration not provided.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config.load_config(config_file='/dev/null')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config.load_config(config_file='/path/that/is/not/real')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config_file = tempfile.NamedTemporaryFile('w', delete=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config.load_config, config_file=open(config_file.name, 'rb')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'Introduction': 'index.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'Introduction': 'index.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	os.mkdir(os.path.join(temp_path, 'docs'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config_path = os.path.join(temp_path, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	config_file = open(config_path, 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(result['site_name'], expected_result['site_name'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(result['site_name'], expected_result['site_name'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(result['pages'], expected_result['pages'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(result['pages'], expected_result['pages'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs'}},  # builtin as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs'}},  # builtin as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': None, 'custom_dir': mytheme}},  # custom only as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': None, 'custom_dir': mytheme}},  # custom only as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs', 'custom_dir': custom}},  # builtin and custom as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs', 'custom_dir': custom}},  # builtin and custom as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs', 'custom_dir': custom}},  # builtin and custom as complex	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'theme': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'name': 'mkdocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'name': 'mkdocs',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'show_sidebar': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'some_var': 'bar'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'some_var': 'bar'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	mkdocs_templates_dir = os.path.join(mkdocs_dir, 'templates')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	theme_dir = os.path.abspath(os.path.join(mkdocs_dir, 'themes'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'mkdocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'mkdocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_search_page': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'navigation_depth': 2,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_search_page': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_homepage_in_sidebar': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'navigation_depth': 4,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'sticky_navigation': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'titles_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_search_page': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_homepage_in_sidebar': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'navigation_depth': 4,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'sticky_navigation': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'titles_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [mytheme, mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [custom, os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [custom, os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_search_page': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_homepage_in_sidebar': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'prev_next_buttons_location': 'bottom',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'navigation_depth': 4,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'sticky_navigation': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'titles_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'collapse_navigation': True	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'mkdocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'mkdocs'), mkdocs_templates_dir],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml', 'foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml', 'foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml', 'foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'static_templates': ['404.html', 'sitemap.xml', 'foo.html'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'vars': {	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'show_sidebar': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'some_var': 'bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'some_var': 'bar',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'include_search_page': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'search_index_only': False,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'highlightjs': True,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_style': 'github',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'hljs_languages': [],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'navigation_depth': 2,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav_style': 'primary',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=(('theme', config_options.Theme(default='mkdocs')),))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=(('theme', config_options.Theme(default='mkdocs')),))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(c['theme'].dirs, result['dirs'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(c['theme'].dirs, result['dirs'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(c['theme'].static_templates, set(result['static_templates']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(c['theme'].static_templates, set(result['static_templates']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['index.md', 'about.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['index.md', 'about.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['index.md', 'about.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'site_name': 'Example',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'pages': ['index.md', 'about.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav': ['foo.md', 'bar.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav': ['foo.md', 'bar.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'nav': ['foo.md', 'bar.md'],	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': os.path.join(os.path.abspath('.'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['foo.md', 'bar.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['foo.md', 'bar.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	self.assertEqual(conf['nav'], ['foo.md', 'bar.md'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': j('site', 'docs'), 'site_dir': 'site'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '.', 'site_dir': '.'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': '', 'site_dir': ''},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{'docs_dir': 'docs', 'site_dir': 'docs'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': j(os.path.abspath('..'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': j(os.path.abspath('..'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	'config_file_path': j(os.path.abspath('..'), 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	('docs_dir', config_options.Dir(default='docs')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	('docs_dir', config_options.Dir(default='docs')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	('site_dir', config_options.SiteDir(default='site')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	('site_dir', config_options.SiteDir(default='site')),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	('config_file_path', config_options.Type(str))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/config_tests.py	{"theme": {'name': None, 'custom_dir': mytheme}},  # custom only as complex	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	{"theme": {'name': 'readthedocs', 'custom_dir': custom}},  # builtin and custom as complex	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	'dirs': [os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	'dirs': [custom, os.path.join(theme_dir, 'readthedocs'), mkdocs_templates_dir],	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	'shortcuts': {'help': 191, 'next': 78, 'previous': 80, 'search': 83}	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=(('theme', config_options.Theme(default='mkdocs')),))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	self.assertEqual(c['theme'].static_templates, set(result['static_templates']))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/config/config_tests.py	import mkdocutils	4b374f2b2194bacc472f05764d971130
mkdocutils/tests/config/config_tests.py	mkdocs_dir = os.path.abspath(os.path.dirname(mkdocs.__file__))	a363746844a71e72369229f9d7914606
mkdocutils/tests/config/config_tests.py	result = config.load_config(config_file=config_file.name)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_tests.py	results = (	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_tests.py	for config_contents, result in zip(configs, results):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=config.DEFAULT_SCHEMA)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=(('theme', config_options.Theme(default='mkdocs')),))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_tests.py	j = os.path.join	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_tests.py	c = config.Config(schema=(	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/config_tests.py	def test_config_option(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/config/config_tests.py	def test_theme(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/config/config_tests.py	def test_doc_dir_in_site_dir(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/config/config_tests.py	class ConfigTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/config_tests.py	self.assertEqual({k: c['theme'][k] for k in iter(c['theme'])}, result['vars'])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/config_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/config_tests.py	with TemporaryDirectory() as mytheme, TemporaryDirectory() as custom:	53d665eb074d0263f10028ab35d4e496
mkdocutils/tests/config/config_tests.py	self.assertRaises(	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/config_tests.py	def load_missing_config():	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/tests/config/config_tests.py	def load_empty_config():	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/tests/config/config_tests.py	def load_empty_config():	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/tests/config/config_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/config/config_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/config_tests.py	config.load_config, config_file=open(config_file.name, 'rb')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/config/config_tests.py	config_file = open(config_path, 'w')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/config/config_tests.py	mkdocs_dir = os.path.abspath(os.path.dirname(mkdocs.__file__))	48bbb24d05482e1b99f618d980e347e9
mkdocutils/tests/config/base_tests.py	'not_a_valid_config_option': "test"	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/base_tests.py	'Unrecognised configuration name: not_a_valid_config_option')	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/config/base_tests.py	import os	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/config/base_tests.py	class ConfigBaseTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/config/base_tests.py	def test_unrecognised_keys(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_missing_required(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_load_from_missing_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_pre_validation_error(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_run_validation_error(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_post_validation_error(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	def test_validation_warnings(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/config/base_tests.py	"""\n        `load_config` can accept an open file descriptor.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/tests/config/base_tests.py	"""\n        Deleting the config file could trigger a server reload.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/tests/config/base_tests.py	"""\n        `site_name` is a required setting.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/tests/config/base_tests.py	"""\n        Users can explicitly set the config file using the '--config' option.\n        Allows users to specify a config other than the default `mkdocs.yml`.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        `load_config` can accept an open file descriptor.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        The `serve` command with auto-reload may pass in a closed file descriptor.\n        Ensure `load_config` reloads the closed file.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        Deleting the config file could trigger a server reload.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        `site_name` is a required setting.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        When explicitly setting a config file, paths should be relative to the\n        config file, not the working directory.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/tests/config/base_tests.py	"""\n        Users can explicitly set the config file using the '--config' option.\n        Allows users to specify a config other than the default `mkdocs.yml`.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/tests/config/base_tests.py	"""\n        The `serve` command with auto-reload may pass in a closed file descriptor.\n        Ensure `load_config` reloads the closed file.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/tests/config/base_tests.py	"""\n        When explicitly setting a config file, paths should be relative to the\n        config file, not the working directory.\n        """	5a59635b17df7d9398147b064bba0f04
mkdocutils/tests/config/base_tests.py	""" A pre_validation error does not stop run_validation from running. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/config/base_tests.py	""" A run_validation error stops post_validation from running. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/tests/config/base_tests.py	"""\n        When explicitly setting a config file, paths should be relative to the\n        config file, not the working directory.\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/tests/config/base_tests.py	'not_a_valid_config_option': "test"	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('not_a_valid_config_option',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	'Unrecognised configuration name: not_a_valid_config_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'site_name')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'Required configuration not provided.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	os.mkdir(os.path.join(temp_dir.name, 'docs'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	base.load_config, config_file='missing_file.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_fname = os.path.join(temp_path, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(config_fname, 'w+')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	os.mkdir(os.path.join(temp_path, 'docs'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	os.mkdir(os.path.join(temp_dir.name, 'docs'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = tempfile.NamedTemporaryFile('w', delete=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = tempfile.NamedTemporaryFile('w', delete=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('pre_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'pre_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('post_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'post_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('pre_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'pre_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[1][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[1][1]), 'run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	raise base.ValidationError('post_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'invalid_option')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'run_validation error')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.warnings.append('pre_validation warning')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.warnings.append('run_validation warning')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.warnings.append('post_validation warning')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'pre_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'pre_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'run_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'run_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'post_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	('invalid_option', 'post_validation warning'),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_fname = os.path.join(config_dir.name, 'mkdocs.yml')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	docs_dir = os.path.join(config_dir.name, 'src')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	config_file = open(config_fname, 'w')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['site_name'], 'MkDocs Test')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	self.assertEqual(cfg['docs_dir'], docs_dir)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=defaults.DEFAULT_SCHEMA)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=defaults.DEFAULT_SCHEMA)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	c = base.Config(schema=(('invalid_option', InvalidConfigOption()), ))	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/config/base_tests.py	self.assertEqual(errors[0][0], 'site_name')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/base_tests.py	self.assertEqual(str(errors[0][1]), 'Required configuration not provided.')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/config/base_tests.py	def test_load_from_file_with_relative_paths(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/config/base_tests.py	class ConfigBaseTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	try:	afb5b3252abd8838a495c53f098ac190
mkdocutils/tests/config/base_tests.py	self.assertRaises(exceptions.ConfigurationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/base_tests.py	self.assertRaises(exceptions.ConfigurationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/base_tests.py	self.assertRaises(exceptions.ConfigurationError,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/config/base_tests.py	base.load_config, config_file='missing_file.yml')	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/base_tests.py	base.load_config, config_file=config_file)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/base_tests.py	base.load_config, config_file=config_file.name)	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/config/base_tests.py	'Unrecognised configuration name: not_a_valid_config_option')	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/base_tests.py	base.load_config, config_file='missing_file.yml')	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/base_tests.py	base.load_config, config_file=config_file)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/base_tests.py	"site_dir: output\nsite_uri: https://www.mkdocs.org\n")	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/base_tests.py	base.load_config, config_file=config_file.name)	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	class InvalidConfigOption(BaseConfigOption):	bd32df160c4d3b8334c9be8eda0251ef
mkdocutils/tests/config/base_tests.py	def pre_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def post_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def pre_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def post_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def pre_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def run_validation(self, value):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	def post_validation(self, config, key_name):	c71efb753b7b52aefe11fdf21243743e
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	try:	3274c8a23cf60913d2cd1ddf11d3ca55
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/config/base_tests.py	config_file = open(config_fname, 'w+')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/config/base_tests.py	config_file = open(os.path.join(temp_dir.name, 'mkdocs.yml'), 'w')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/config/base_tests.py	config_file = open(config_fname, 'w')	071e1f33354ea8030d221a79d450053e
mkdocutils/tests/structure/toc_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/structure/toc_tests.py	class TableOfContentsTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/toc_tests.py	def test_indented_toc(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_indented_toc_html(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_flat_toc(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_flat_h2_toc(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_mixed_toc(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_mixed_html(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_nested_anchor(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_entityref(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_charref(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	def test_level(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/toc_tests.py	from mkdocutils.structure.toc import get_toc	006d6d7b193ae5fd18451299b208f0a8
mkdocutils/tests/structure/toc_tests.py	md = '# &#64;Header'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/toc_tests.py	expected = '&#64;Header - #header'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/toc_tests.py	def get_level_sequence(items):	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/toc_tests.py	for item in items:	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/toc_tests.py	toc = get_toc(get_markdown_toc(md))	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/toc_tests.py	toc = get_toc(get_markdown_toc(md))	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/toc_tests.py	self.assertEqual(str(toc).strip(), expected)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/toc_tests.py	self.assertEqual(len(toc), 1)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/toc_tests.py	class TableOfContentsTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/structure/toc_tests.py	self.assertEqual(tuple(get_level_sequence(toc)), (1, 2, 3, 3, 2))	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/toc_tests.py	def get_level_sequence(items):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/tests/structure/toc_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['index.html', 'index.md', 'a.md', 'b.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['index.md', 'index.html', 'a.md', 'b.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['a.md', 'a.md', 'b.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['README.md', 'A.md', 'B.md']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'index.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo/.ignore/file.txt'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico', 'style.css']	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	os.path.normpath(os.path.join(ddir, 'favicon.ico'))	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../../img.jpg'   # img.jpg relative to foo/bar/baz	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../img.jpg'   # foo/img.jpg relative to foo/bar/baz	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../..'   # . relative to foo/bar/baz	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../../file/'   # file relative to foo/bar/baz	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.html'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../img.jpg'      # img.jpg relative to foo/bar/baz.html	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../img.jpg'      # foo/img.jpg relative to foo/bar/baz.html	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../index.html'      # index.html relative to foo/bar/baz.html	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'../../file.html'      # file.html relative to foo/bar/baz.html	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'templates/foo.html'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	'foo.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/file_tests.py	self.assertEqual([f for f in files], fs)	c001eaaa47157d9b3a6959fd83d11326
mkdocutils/tests/structure/file_tests.py	import unittest	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/structure/file_tests.py	class TestFiles(PathAssertionMixin, unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/file_tests.py	def test_file_eq(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_file_ne(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_sort_files(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_file_nested(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_file_nested_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_index_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_readme_index_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_readme_index_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_nested(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_nested_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_static_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_static_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_media_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_media_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_javascript_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_javascript_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_css_file(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_css_file_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_file_name_with_space(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_files(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_add_files_from_theme(self, tdir, ddir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_filter_paths(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url_use_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_get_files(self, tdir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_get_files_include_readme_without_index(self, tdir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_get_files_exclude_readme_with_index(self, tdir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_copy_file(self, src_dir, dest_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_copy_file_clean_modified(self, src_dir, dest_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_copy_file_dirty_modified(self, src_dir, dest_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	def test_copy_file_dirty_not_modified(self, src_dir, dest_dir):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/file_tests.py	import os	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/file_tests.py	from mkdocutils.structure.files import Files, File, get_files, _sort_files, _filter_paths	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/file_tests.py	from mkdocutils.tests.base import load_config, tempdir, PathAssertionMixin	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file == File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file == File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file == File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('b.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('b.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('b.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/other', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/other', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/other', '/path/to/site', use_directory_urls=False))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=True))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=True))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=True))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'bb.md', 'a.md', 'index.md', 'aa.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'bb.md', 'a.md', 'index.md', 'aa.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'bb.md', 'a.md', 'index.md', 'aa.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'bb.md', 'a.md', 'index.md', 'aa.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'bb.md', 'a.md', 'index.md', 'aa.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'a.md', 'aa.md', 'b.md', 'bb.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'index.html', 'a.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'index.html', 'a.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'index.html', 'a.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['b.md', 'index.html', 'a.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.html', 'index.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.html', 'index.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.html', 'index.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.html', 'index.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'index.md', 'b.md', 'index.html']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'index.md', 'b.md', 'index.html']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'index.md', 'b.md', 'index.html']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'index.md', 'b.md', 'index.html']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'index.html', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'index.html', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'index.html', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'index.html', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['.md', '_.md', 'a.md', 'index.md', '1.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['.md', '_.md', 'a.md', 'index.md', '1.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['.md', '_.md', 'a.md', 'index.md', '1.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['.md', '_.md', 'a.md', 'index.md', '1.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['.md', '_.md', 'a.md', 'index.md', '1.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', '.md', '1.md', '_.md', 'a.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'b.md', 'a.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'b.md', 'a.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['a.md', 'b.md', 'a.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['a.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['a.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['a.md', 'a.md', 'b.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['A.md', 'B.md', 'README.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['A.md', 'B.md', 'README.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	_sort_files(['A.md', 'B.md', 'README.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['README.md', 'A.md', 'B.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['README.md', 'A.md', 'B.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['README.md', 'A.md', 'B.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'README.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/README.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'README.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/README.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/index.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'index')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.js')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo/bar.css')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	f = File('foo bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.src_path, 'foo bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_src_path, '/path/to/docs/foo bar.md')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.dest_path, 'foo bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertPathsEqual(f.abs_dest_path, '/path/to/site/foo bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.url, 'foo%20bar.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.name, 'foo bar')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(files.get_file_from_path('foo/bar.jpg'), fs[3])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(files.get_file_from_path('foo/bar.jpg'), fs[3])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(files.get_file_from_path('missing.jpg'), None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	extra_file = File('extra.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	extra_file = File('extra.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	extra_file = File('extra.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'favicon.ico',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'base.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'favicon.ico',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'style.css',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'README',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'.ignore.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'.ignore/file.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/.ignore.txt',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/.ignore/file.txt'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	config = load_config(docs_dir=ddir, theme={'name': None, 'custom_dir': tdir})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	config = load_config(docs_dir=ddir, theme={'name': None, 'custom_dir': tdir})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	env = config['theme'].get_env()	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico', 'style.css']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico', 'style.css']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	['index.md', 'favicon.ico', 'style.css']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	files.get_file_from_path('favicon.ico').abs_src_path,	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	os.path.normpath(os.path.join(ddir, 'favicon.ico'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'baz/foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'baz/foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'baz/foo.md', False, ['bar.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'baz/foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'baz/foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'baz/foo.md', False, ['foo.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['*.txt']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['*.txt']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['*.txt']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['*.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['*.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['*.md']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'foo/bar', True, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'foo/bar', True, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'foo/bar', True, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', False, ['bar/']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'.',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',           # img.jpg relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',        # img.jpg relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg',     # img.jpg relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../img.jpg',  # img.jpg relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',        # img.jpg relative to foo	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg',     # img.jpg relative to foo/bar	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../img.jpg'   # img.jpg relative to foo/bar/baz	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'img.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/img.jpg',    # foo/img.jpg relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',        # foo/img.jpg relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',     # foo/img.jpg relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg',  # foo/img.jpg relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',        # foo/img.jpg relative to foo	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',     # foo/img.jpg relative to foo/bar	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg'   # foo/img.jpg relative to foo/bar/baz	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'foo/img.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'.',         # . relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'..',        # . relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../..',     # . relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../..',  # . relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'..',        # . relative to foo	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../..',     # . relative to foo/bar	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../..'   # . relative to foo/bar/baz	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, '.')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'file/',           # file relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../file/',        # file relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../file/',     # file relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../file/',  # file relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../file/',        # file relative to foo	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../file/',     # file relative to foo/bar	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../file/'   # file relative to foo/bar/baz	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'file/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz/index.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/bar/baz.html'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',           # img.jpg relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',        # img.jpg relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg',     # img.jpg relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../img.jpg',  # img.jpg relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',           # img.jpg relative to foo.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',        # img.jpg relative to foo/bar.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg'      # img.jpg relative to foo/bar/baz.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'img.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/img.jpg',    # foo/img.jpg relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',        # foo/img.jpg relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg',     # foo/img.jpg relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../img.jpg',  # foo/img.jpg relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo/img.jpg',    # foo/img.jpg relative to foo.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'img.jpg',        # foo/img.jpg relative to foo/bar.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../img.jpg'      # foo/img.jpg relative to foo/bar/baz.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'foo/img.jpg')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.html',           # index.html relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../index.html',        # index.html relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../index.html',     # index.html relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../index.html',  # index.html relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.html',           # index.html relative to foo.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../index.html',        # index.html relative to foo/bar.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../index.html'      # index.html relative to foo/bar/baz.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	from_file = File('file.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'file.html',           # file.html relative to .	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../file.html',        # file.html relative to foo/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../file.html',     # file.html relative to foo/bar/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../../file.html',  # file.html relative to foo/bar/baz/	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'file.html',           # file.html relative to foo.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../file.html',        # file.html relative to foo/bar.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'../../file.html'      # file.html relative to foo/bar/baz.html	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url, 'file.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'bar.css',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'bar.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'bar.jpg',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'bar.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'bar.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'.dotfile',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'templates/foo.html'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	config = load_config(docs_dir=tdir, extra_css=['bar.css'], extra_javascript=['bar.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	config = load_config(docs_dir=tdir, extra_css=['bar.css'], extra_javascript=['bar.js'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'bar.css', 'bar.html', 'bar.jpg', 'bar.js', 'bar.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'README.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['README.md', 'foo.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['README.md', 'foo.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'README.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	'foo.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'foo.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	expected = ['index.md', 'foo.md']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	dest_path = os.path.join(dest_dir, 'test.txt')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	dest_path = os.path.join(dest_dir, 'test.txt')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.read(), 'source content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	dest_path = os.path.join(dest_dir, 'test.txt')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.read(), 'source content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'destination content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	@tempdir(files={'test.txt': 'source content'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	dest_path = os.path.join(dest_dir, 'test.txt')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(f.read(), 'destination content')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file == File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('b.md', '/path/to/docs', '/path/to/site', use_directory_urls=False))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/other', '/path/to/site', use_directory_urls=False))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	self.assertTrue(file != File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=True))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	extra_file = File('extra.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('file.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('foo/img.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('index.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	from_file = File('file.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	config = load_config(docs_dir=tdir, extra_css=['bar.css'], extra_javascript=['bar.js'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File('a.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	[file.src_path for file in files],	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	[file.src_path for file in files],	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	file = File('test.txt', src_dir, dest_dir, use_directory_urls=False)	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('README.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/index.md', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.html', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.jpg', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.js', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo/bar.css', '/path/to/docs', '/path/to/site', use_directory_urls=True)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	f = File('foo bar.md', '/path/to/docs', '/path/to/site', use_directory_urls=False)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	self.assertEqual([f for f in files], fs)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	self.assertEqual([f.src_path for f in files], expected)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	self.assertEqual([f.src_path for f in files], expected)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	self.assertEqual([f.src_path for f in files], expected)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	with open(dest_path, 'r', encoding='utf-8') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url_use_directory_urls(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/file_tests.py	def test_md_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_file_nested(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_file_nested_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_index_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_readme_index_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_readme_index_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_nested(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_md_index_file_nested_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_static_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_static_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_media_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_media_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_javascript_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_javascript_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_css_file(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_css_file_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_files(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_filter_paths(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url_use_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	def test_get_relative_url(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/file_tests.py	class TestFiles(PathAssertionMixin, unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/structure/file_tests.py	self.assertEqual(files.media_files(), [fs[3], fs[4], fs[5]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/file_tests.py	self.assertEqual(files.documentation_pages(), [fs[0], fs[1], extra_file])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['bar.md']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['foo.md']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'baz/foo.md', False, ['bar.md']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'baz/foo.md', False, ['foo.md']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('foo.md', 'foo.md', False, ['*.txt']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('foo.md', 'foo.md', False, ['*.md']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', True, ['/baz/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'bar', True, ['/bar/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', True, ['/bar/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertTrue(_filter_paths('bar', 'foo/bar', True, ['bar/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'bar', False, ['bar/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	self.assertFalse(_filter_paths('bar', 'foo/bar', False, ['bar/']))	6fc0710dce16c6e1799118a4381459af
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	for i, filename in enumerate(to_files):	96653724fef5905fbbb49faf685b887f
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=True)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	file = File(filename, '/path/to/docs', '/path/to/site', use_directory_urls=False)	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(file.url, to_file_urls[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file.url), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	self.assertEqual(from_file.url_relative_to(file), expected[i])	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/file_tests.py	from mkdocutils.structure.files import Files, File, get_files, _sort_files, _filter_paths	452029799ff7d816934389157b8c70d9
mkdocutils/tests/structure/file_tests.py	from mkdocutils.structure.files import Files, File, get_files, _sort_files, _filter_paths	452029799ff7d816934389157b8c70d9
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'External': 'http://example.com/external.html'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	"is included in the 'nav' configuration."	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'Bad External': 'example.com'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	"in the 'nav' configuration, which is not found in the documentation files"	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'License': '/license.html'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'External': 'https://example.com/'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	'about/sub/license.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	File('about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'License': 'about/license.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	]}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	{'Page': 'page.md'}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	]}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	]}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	File('page.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/nav_tests.py	#!/usr/bin/env python	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/structure/nav_tests.py	class SiteNavigationTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/nav_tests.py	def test_simple_nav(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_no_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_missing_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_no_title(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_external_links(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_bad_links(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_indented_nav(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nested_ungrouped_nav(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nested_ungrouped_nav_no_titles(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nested_ungrouped_no_titles_windows(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_from_files(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_nav_from_nested_files(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_active(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	def test_get_by_type_nested_sections(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/nav_tests.py	from mkdocutils.structure.nav import get_navigation, _get_by_type, Section	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, use_directory_urls=False, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': 'about.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Local': '/local.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Local': '/local.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'External': 'http://example.com/external.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'External': 'http://example.com/external.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	with self.assertLogs('mkdocs', level='DEBUG') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	with self.assertLogs('mkdocs', level='DEBUG') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Missing': 'missing.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Missing': 'missing.html'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Bad External': 'example.com'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Bad External': 'example.com'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'API Guide': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Running': 'api-guide/running.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Running': 'api-guide/running.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Testing': 'api-guide/testing.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Testing': 'api-guide/testing.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Debugging': 'api-guide/debugging.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Debugging': 'api-guide/debugging.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Advanced': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Part 1': 'api-guide/advanced/part-1.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Part 1': 'api-guide/advanced/part-1.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Release notes': 'about/release-notes.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Release notes': 'about/release-notes.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License': '/license.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License': '/license.html'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'External': 'https://example.com/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'External': 'https://example.com/'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Contact': 'about/contact.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Contact': 'about/contact.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License Title': 'about/sub/license.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License Title': 'about/sub/license.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'about/contact.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'about/sub/license.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'about\\contact.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	'about\\sub\\license.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'API Guide': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Running': 'api-guide/running.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Running': 'api-guide/running.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Testing': 'api-guide/testing.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Testing': 'api-guide/testing.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Debugging': 'api-guide/debugging.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Debugging': 'api-guide/debugging.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Advanced': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Part 1': 'api-guide/advanced/part-1.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Part 1': 'api-guide/advanced/part-1.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'About': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Release notes': 'about/release-notes.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Release notes': 'about/release-notes.md'},	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License': 'about/license.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'License': 'about/license.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Section 1': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Section 2': [	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Page': 'page.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	{'Page': 'page.md'}	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	File('page.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, use_directory_urls=False, site_url='http://example.com/')	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('page_not_in_nav.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"DEBUG:mkdocs.structure.nav:An absolute path to '/local.html' is included in the "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"DEBUG:mkdocs.structure.nav:An external link to 'http://example.com/external.html' "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"WARNING:mkdocs.structure.nav:A relative path to 'missing.html' is included "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"in the 'nav' configuration, which is not found in the documentation files",	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"WARNING:mkdocs.structure.nav:A relative path to 'example.com' is included "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	"in the 'nav' configuration, which is not found in the documentation files"	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[0].parent), "Section(title='API Guide')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[0].ancestors, [site_navigation.items[1]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[1].parent), "Section(title='API Guide')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[1].ancestors, [site_navigation.items[1]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[2].parent), "Section(title='API Guide')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[2].ancestors, [site_navigation.items[1]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].parent), "Section(title='API Guide')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].ancestors, [site_navigation.items[1]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].children[0].parent), "Section(title='Advanced')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[0].parent), "Section(title='About')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[0].ancestors, [site_navigation.items[2]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[1].parent), "Section(title='About')")	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[1].ancestors, [site_navigation.items[2]])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/running.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/debugging.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('api-guide/advanced/part-1.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('about/release-notes.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	File('about/license.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	for file in files:	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	self.assertTrue(all(item.active is False for item in site_navigation.items))	e547b106dab483aa6c10f26900427c97
mkdocutils/tests/structure/nav_tests.py	maxDiff = None	a4f2fc13612e3c39333783e18c31cd0f
mkdocutils/tests/structure/nav_tests.py	{'Home': 'index.md'},	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	cfg = load_config(nav=nav_cfg, site_url='http://example.com/')	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	site_navigation = get_navigation(files, cfg)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(str(site_navigation).strip(), expected)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(len(site_navigation.items), 2)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(len(site_navigation.pages), 2)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertIsNone(site_navigation.items[1].parent)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertIsNone(site_navigation.items[1].parent)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].parent), "Section(title='API Guide')")	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].parent), "Section(title='API Guide')")	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertIsNone(site_navigation.items[2].parent)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	self.assertIsNone(site_navigation.items[2].parent)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']),	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	site_navigation.items[1].children[3].children[0].active = True	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	site_navigation.items[1].children[3].children[0].active = True	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/nav_tests.py	def test_nav_missing_page(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/nav_tests.py	def test_nav_external_links(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/nav_tests.py	def test_nav_bad_links(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/nav_tests.py	def test_indented_nav(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/nav_tests.py	def test_active(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/nav_tests.py	class SiteNavigationTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[0].parent), "Section(title='API Guide')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[0].ancestors, [site_navigation.items[1]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[1].parent), "Section(title='API Guide')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[1].ancestors, [site_navigation.items[1]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[2].parent), "Section(title='API Guide')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[2].ancestors, [site_navigation.items[1]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].parent), "Section(title='API Guide')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].ancestors, [site_navigation.items[1]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(len(site_navigation.items[1].children[3].children), 1)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].children[0].parent), "Section(title='Advanced')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].children[0].ancestors,	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[0].parent), "Section(title='About')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[0].ancestors, [site_navigation.items[2]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[1].parent), "Section(title='About')")	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[1].ancestors, [site_navigation.items[2]])	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	site_navigation.items[1].children[3].children[0].active = True	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertTrue(site_navigation.items[1].children[3].children[0].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertTrue(site_navigation.items[1].children[3].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[0].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[1].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[2].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[2].children[0].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[2].children[1].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	site_navigation.items[1].children[3].children[0].active = False	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[3].children[0].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[3].active)	20cce2d738a80cd0d97cc0c89683ad46
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	File(nav_cfg[1]['About'], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	files = Files([File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[0].parent), "Section(title='API Guide')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[0].ancestors, [site_navigation.items[1]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[1].parent), "Section(title='API Guide')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[1].ancestors, [site_navigation.items[1]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[2].parent), "Section(title='API Guide')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[2].ancestors, [site_navigation.items[1]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].parent), "Section(title='API Guide')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].ancestors, [site_navigation.items[1]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(len(site_navigation.items[1].children[3].children), 1)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[1].children[3].children[0].parent), "Section(title='Advanced')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].children[0].ancestors,	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[0].parent), "Section(title='About')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[0].ancestors, [site_navigation.items[2]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(repr(site_navigation.items[2].children[1].parent), "Section(title='About')")	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[2].children[1].ancestors, [site_navigation.items[2]])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	[File(list(item.values())[0], cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	[File(item, cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']) for item in nav_cfg]	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertTrue(site_navigation.items[1].children[3].children[0].active)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	self.assertFalse(site_navigation.items[1].children[3].children[0].active)	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/nav_tests.py	self.assertEqual(site_navigation.items[1].children[3].children[0].ancestors,	dde2d343d968d51e07a47f88e4afec60
mkdocutils/tests/structure/nav_tests.py	[site_navigation.items[1].children[3], site_navigation.items[1]])	da0ecb40a77d639d4395abb934231fc5
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/structure/nav_tests.py	[site_navigation.items[1].children[3], site_navigation.items[1]])	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/structure/nav_tests.py	for item in nav_cfg]	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/structure/nav_tests.py	"'nav' configuration, which presumably points to an external resource.",	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/nav_tests.py	"is included in the 'nav' configuration."	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/nav_tests.py	"in the 'nav' configuration, which is not found in the documentation files",	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/nav_tests.py	"in the 'nav' configuration, which is not found in the documentation files"	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/nav_tests.py	'about\\contact.md',	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/structure/nav_tests.py	'about\\sub\\license.md',	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/structure/nav_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/nav_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/tests/structure/nav_tests.py	from mkdocutils.structure.nav import get_navigation, _get_by_type, Section	452029799ff7d816934389157b8c70d9
mkdocutils/tests/structure/nav_tests.py	0	c2c4decaf68c7080ba2b93a3aefe6eeb
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': ''  # Set to blank value	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	None	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'http://example.com/#edit/master/sub1/non-index.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	}	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'http://example.com/#edit/master/sub1/non-index.md'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<h1 id="welcome-to-mkdocs">Welcome to MkDocs</h1>\n'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="non-index/">link</a></p>'  # No trailing /	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="..">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="sub2/">link</a></p>'  # No trailing /	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="sub2/non-index/">link</a></p>'  # No trailing /	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="file%20name/">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="file%20name/">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="../..">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="non-index/#hash">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="sub2/#hash">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="sub2/non-index/#hash">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="#hash">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><img alt="image" src="image.png" /></p>'  # no opening ./	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><img alt="image" src="../../image.png" /></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><img alt="image" src="../image.png" /></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><em><strong>not</strong> a link</em>.</p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="non-existant.md">link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	"to 'non-existant.md' which is not found in the documentation files."]	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="http://example.com/index.md">external</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="/path/to/file.md">absolute link</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'<p><a href="\\image.png">absolute local path</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	'&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a></p>'	f57c7b41027803375a9e5ad44962edef
mkdocutils/tests/structure/page_tests.py	import unittest	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/tests/structure/page_tests.py	class PageTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/page_tests.py	class SourceDateEpochTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/page_tests.py	class RelativePathExtensionTests(unittest.TestCase):	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/tests/structure/page_tests.py	def test_homepage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page_no_parent(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page_no_parent_no_directory_urls(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_nonindex_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_defaults(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_no_directory_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url_nested(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url_nested_no_slash(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_predefined_page_title(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_markdown(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_meta(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_filename(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_capitalized_filename(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_homepage_filename(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_eq(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_ne(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_BOM(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_edit_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_page_edit_url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_nested_page_edit_url_windows(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_page_render(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_missing_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def setUp(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_source_date_epoch(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def tearDown(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def get_rendered_result(self, files):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_sub_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_sub_page(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_with_encoded_space(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_with_unencoded_space(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_parent_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_hash(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_sub_index_hash(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_sub_page_hash(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_html_link_hash_only(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_image_link_from_homepage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_image_link_from_subpage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_relative_image_link_from_sibling(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_no_links(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_bad_relative_html_link(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_external_link(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_absolute_link(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_absolute_win_local_path(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	def test_email_link(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/tests/structure/page_tests.py	import unittest	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/page_tests.py	from tempfile import TemporaryDirectory	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/page_tests.py	from mkdocutils.structure.files import File, Files	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/page_tests.py	from mkdocutils.tests.base import load_config, dedent	665bccf2f09fa375b040ce46ce828371
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg.parent = 'foo'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.parent, 'foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg.parent = 'foo'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/non-index/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.parent, 'foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertRegex(pg.update_date, r'\d{4}-\d{2}-\d{2}')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	cfg = load_config(site_url='http://example.com')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.abs_url, '/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.canonical_url, 'http://example.com/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	cfg = load_config(site_url='http://example.com/foo/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.abs_url, '/foo/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.canonical_url, 'http://example.com/foo/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	cfg = load_config(site_url='http://example.com/foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.abs_url, '/foo/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.canonical_url, 'http://example.com/foo/testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Foo')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Page Title', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('# Welcome to MkDocs\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Page Title')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('# Welcome to MkDocs\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Welcome to MkDocs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('metadata.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('metadata.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('metadata.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('metadata.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'metadata/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('# Welcome to MkDocs\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.meta, {'title': 'A Page Title'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.meta, {'title': 'A Page Title'})	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'A Page Title')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('page-title.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('page-title.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('page-title.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('page-title.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'page-title/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('Page content.\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Page title')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('pageTitle.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('pageTitle.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('pageTitle.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('pageTitle.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'pageTitle/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('Page content.\n'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'pageTitle')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, '')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg.markdown.startswith('## Test'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.title, 'Home')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg == Page('Foo', fl, cfg))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f1 = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f1 = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f1 = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f1 = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f2 = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f2 = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f2 = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	f2 = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', f1, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg != Page('Bar', f1, cfg))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertTrue(pg != Page('Foo', f2, cfg))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	md_src = '# An UTF-8 encoded file with a BOM'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	with open(fl.abs_src_path, 'w', encoding='utf-8-sig') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	with open(fl.abs_src_path, 'w', encoding='utf-8-sig') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertNotIn('\ufeff', pg.markdown)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': ''  # Set to blank value	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': ''  # Set to blank value	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://github.com/mkdocs/mkdocs/edit/master/docs/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'https://github.com/mkdocs/mkdocs/edit/master/docs/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com?query=edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/?query=edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com#edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/#edit/master/testing.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'testing/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://github.com/mkdocs/mkdocs/edit/master/docs/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'https://github.com/mkdocs/mkdocs/edit/master/docs/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com?query=edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/?query=edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com#edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/#edit/master/sub1/non-index.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	c['docs_dir'] = self.DOCS_DIR	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/non-index/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://github.com/mkdocs/mkdocs'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'https://github.com/mkdocs/mkdocs/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '/edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/foo',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': 'edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '?query=edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'repo_url': 'http://example.com/',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'edit_uri': '#edit/master/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://github.com/mkdocs/mkdocs/edit/master/docs/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'https://github.com/mkdocs/mkdocs/edit/master/docs/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/foo/edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com?query=edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/?query=edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com#edit/master/sub1/non-index.md',	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'http://example.com/#edit/master/sub1/non-index.md'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	c['docs_dir'] = self.DOCS_DIR	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.url, 'sub1/non-index/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.default = os.environ.get('SOURCE_DATE_EPOCH', None)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	os.environ['SOURCE_DATE_EPOCH'] = '0'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	os.environ['SOURCE_DATE_EPOCH'] = '0'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.assertEqual(pg.update_date, '1970-01-01')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	os.environ['SOURCE_DATE_EPOCH'] = self.default	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	del os.environ['SOURCE_DATE_EPOCH']	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fs[0], cfg)	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['non-index.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['non-index.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file%20name.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file%20name.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'file name.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'file name.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file name.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file name.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'file name.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'file name.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](../index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](../index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['sub2/non-index.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['sub2/non-index.md', 'index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'sub2/non-index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](#hash)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](../image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](../image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['sub2/non-index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['sub2/non-index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['non-index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['non-index.md', 'image.png']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='*__not__ a link*.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='*__not__ a link*.'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'<p><em><strong>not</strong> a link</em>.</p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-existant.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-existant.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	with self.assertLogs('mkdocs', level='WARNING') as cm:	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[external](http://example.com/index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[external](http://example.com/index.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute link](/path/to/file.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute link](/path/to/file.md)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute local path](\\image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute local path](\\image.png)'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='<mail@example.com>'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='<mail@example.com>'))	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	self.get_rendered_result(['index.md']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	'&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a></p>'	05c198233765297c55773dd4f0aef7c0
mkdocutils/tests/structure/page_tests.py	def test_BOM(self):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('metadata.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('page-title.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('pageTitle.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	f1 = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	# We don't use mkdocs.tests.base.tempdir decorator here due to uniqueness of this test.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1/non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('missing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file%20name.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](file name.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](../index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-index.md#hash)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/index.md#hash)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](sub2/non-index.md#hash)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](../image.png)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='![image](image.png)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='*__not__ a link*.'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[link](non-existant.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	["WARNING:mkdocs.structure.pages:Documentation file 'index.md' contains a link "	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[external](http://example.com/index.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute link](/path/to/file.md)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute local path](\\image.png)'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='<mail@example.com>'))	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	# Markdown's default behavior is to obscure email addresses by entity-encoding them.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	# The following is equivalent to: '<p><a href="mailto:mail@example.com">mail@example.com</a></p>'	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	'<p><a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#109;&#97;&#105;&#108;&#64;&#101;'	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	'&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;">&#109;&#97;&#105;&#108;&#64;'	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/tests/structure/page_tests.py	with open(fl.abs_src_path, 'w', encoding='utf-8-sig') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for i, c in enumerate(configs):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	for f in files:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	a4f2fc13612e3c39333783e18c31cd0f
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	a4f2fc13612e3c39333783e18c31cd0f
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page_no_parent_no_directory_urls(self):	6dd0cc9bd12d65c7e15bcc01819206de
mkdocutils/tests/structure/page_tests.py	cfg = load_config(docs_dir=self.DOCS_DIR)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	fl = File('index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	pg = Page('Foo', fl, cfg)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	fl = File('testing.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	pg.read_source(cfg)	6a12e9c2606110b6226acf1dd1d1a6c1
mkdocutils/tests/structure/page_tests.py	def test_BOM(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/page_tests.py	def test_page_edit_url(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/page_tests.py	def test_nested_page_edit_url(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/page_tests.py	def test_nested_page_edit_url_windows(self):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/tests/structure/page_tests.py	def test_homepage(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page_no_parent(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_nested_index_page_no_parent_no_directory_urls(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_nested_nonindex_page(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_defaults(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_no_directory_url(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url_nested(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_canonical_url_nested_no_slash(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_predefined_page_title(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_markdown(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_meta(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_filename(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_capitalized_filename(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	def test_page_title_from_homepage_filename(self):	ec0780e5b27a426e4a5fb8eb0103e5a9
mkdocutils/tests/structure/page_tests.py	class PageTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/structure/page_tests.py	class RelativePathExtensionTests(unittest.TestCase):	f31baaad8f55f667a091708188847d5b
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/page_tests.py	DOCS_DIR = os.path.join(os.path.abspath(os.path.dirname(__file__)), '../integration/subpages/docs')	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/page_tests.py	fs.append(File(f.replace('/', os.sep), cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls']))	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/tests/structure/page_tests.py	"to 'non-existant.md' which is not found in the documentation files."]	2e73035b2427e1ee107ec03464e45203
mkdocutils/tests/structure/page_tests.py	"to 'non-existant.md' which is not found in the documentation files."]	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/page_tests.py	'&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;">&#109;&#97;&#105;&#108;&#64;'	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/page_tests.py	'&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</a></p>'	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/tests/structure/page_tests.py	fl = File('sub1\\non-index.md', cfg['docs_dir'], cfg['site_dir'], cfg['use_directory_urls'])	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/structure/page_tests.py	@mock.patch('mkdocs.structure.pages.open', mock.mock_open(read_data='[absolute local path](\\image.png)'))	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/structure/page_tests.py	'<p><a href="\\image.png">absolute local path</a></p>'	3dd74565beea9b5a84307925963a66ef
mkdocutils/tests/structure/page_tests.py	del os.environ['SOURCE_DATE_EPOCH']	8b1910e663f03d6276ee78813014e34d
mkdocutils/tests/structure/page_tests.py	cm.output,	cf912c5c47514b60748f9fa509fd0e7a
mkdocutils/structure/pages.py	""" Set active status of page and ancestors. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/pages.py	"""\n        Convert the Markdown source file to HTML as per the config.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/pages.py	"""\n        Convert the Markdown source file to HTML as per the config.\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/pages.py	"""\n        Update urls on anchors and images to make them relative\n\n        Iterates through the full document tree looking for specific\n        tags and then makes them relative based on the site navigation\n        """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/pages.py	""" Return active status of page. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/pages.py	"""\n        Update urls on anchors and images to make them relative\n\n        Iterates through the full document tree looking for specific\n        tags and then makes them relative based on the site navigation\n        """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/pages.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/structure/pages.py	class Page:	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/structure/pages.py	def is_index(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def is_top_level(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def is_homepage(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def ancestors(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def read_source(self, config):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/pages.py	def __eq__(self, other):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/pages.py	def __ne__(self, other):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/pages.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/pages.py	def __init__(self, title, file, config):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/pages.py	"""\n        Convert the Markdown source file to HTML as per the config.\n        """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/structure/pages.py	"""\n        Convert the Markdown source file to HTML as per the config.\n        """	4f68ce023f32856b1976963fb418ded9
mkdocutils/structure/pages.py	"""\n    The Extension class is what we pass to markdown, it then\n    registers the Treeprocessor.\n    """	5a59635b17df7d9398147b064bba0f04
mkdocutils/structure/pages.py	""" Return active status of page. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/pages.py	""" Set active status of page and ancestors. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/pages.py	"""\n        Update urls on anchors and images to make them relative\n\n        Iterates through the full document tree looking for specific\n        tags and then makes them relative based on the site navigation\n        """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/structure/pages.py	"""\n    The Extension class is what we pass to markdown, it then\n    registers the Treeprocessor.\n    """	7e03d1ae3a633ff95858123ac7013245
mkdocutils/structure/pages.py	self._set_canonical_url(config.get('site_url', None))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	config.get('repo_url', None),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	config.get('edit_uri', None),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	) else '[blank]'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return '{}{}'.format('    ' * depth, repr(self))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return '{}{}'.format('    ' * depth, repr(self))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return self.file.name == 'index'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return self.is_top_level and self.is_index and self.file.url == '.'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return '' if self.file.url == '.' else self.file.url	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	return '' if self.file.url == '.' else self.file.url	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	if not base.endswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	base += '/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	src_path = self.file.src_path.replace('\\', '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	src_path = self.file.src_path.replace('\\', '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	source = config['plugins'].run_event(	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	'page_read_source', page=self, config=config,	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	with open(self.file.abs_src_path, 'r', encoding='utf-8-sig', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	with open(self.file.abs_src_path, 'r', encoding='utf-8-sig', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	with open(self.file.abs_src_path, 'r', encoding='utf-8-sig', errors='strict') as f:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	log.error('File not found: {}'.format(self.file.src_path))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	'Encoding error reading file: {}'.format(	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	if 'title' in self.meta:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	self.title = self.meta['title']	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = 'Home'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = self.file.name.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = self.file.name.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = self.file.name.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = self.file.name.replace('-', ' ').replace('_', ' ')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	] + config['markdown_extensions']	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	extension_configs=config['mdx_configs'] or {},	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	self.toc = get_toc(getattr(md, 'toc_tokens', []))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	if element.tag == 'a':	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	key = 'href'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	elif element.tag == 'img':	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	key = 'src'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	scheme or netloc or not path or url.startswith('/') or url.startswith('\\')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	scheme or netloc or not path or url.startswith('/') or url.startswith('\\')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	or AMP_SUBSTITUTE in url or '.' not in os.path.split(path)[-1]	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/pages.py	title = "'{}'".format(self.title) if (	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	return "Page(title={}, url='{}')".format(title, self.abs_url or self.file.url)	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	return '{}{}'.format('    ' * depth, repr(self))	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	log.error('File not found: {}'.format(self.file.src_path))	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	'Encoding error reading file: {}'.format(	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	"Documentation file '{}' contains a link to '{}' which is not found "	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/pages.py	def extendMarkdown(self, md):	dc36da7f37313e61ea8a6ce02378e17c
mkdocutils/structure/pages.py	self.file.src_path,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/structure/pages.py	self.file.src_path,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/structure/pages.py	with open(self.file.abs_src_path, 'r', encoding='utf-8-sig', errors='strict') as f:	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/pages.py	or AMP_SUBSTITUTE in url or '.' not in os.path.split(path)[-1]	6cd93eb1b7edceddc59b32c44e787a99
mkdocutils/structure/pages.py	isinstance(other, self.__class__) and	01133cfa919d814e632499f755e32eee
mkdocutils/structure/pages.py	self.title == other.title and	01133cfa919d814e632499f755e32eee
mkdocutils/structure/pages.py	def __init__(self, title, file, config):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	self.file = file	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	self.content = None	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	def _set_active(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	self.content = md.convert(self.markdown)	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	def __init__(self, file, files):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	self.file = file	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	scheme, netloc, path, params, query, fragment = urlparse(url)	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	def __init__(self, file, files):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	self.file = file	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/pages.py	with open(self.file.abs_src_path, 'r', encoding='utf-8-sig', errors='strict') as f:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/pages.py	self.__active = bool(value)	c0ed1400d8d8772489000909201b1999
mkdocutils/structure/pages.py	def path_to_url(self, url):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/structure/pages.py	class Page:	f31baaad8f55f667a091708188847d5b
mkdocutils/structure/pages.py	scheme or netloc or not path or url.startswith('/') or url.startswith('\\')	b32d24e51b7ab72ad1e2ff0d3ad51943
mkdocutils/structure/pages.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/structure/pages.py	class Page:	b447e721a920c877e6b3fd37d84306d0
mkdocutils/structure/pages.py	class Page:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/pages.py	"in the documentation files.".format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/structure/pages.py	base += '/'	5aab3340e13b51ca518016d5b753ed33
mkdocutils/structure/pages.py	if (	26df93eb5bc59c53bbae02e39fb084ec
mkdocutils/structure/pages.py	class Page:	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/structure/pages.py	self.markdown, self.meta = meta.get_data(source)	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/pages.py	self.markdown, self.meta = meta.get_data(source)	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/pages.py	self.title = self.meta['title']	4312e304e08f3ba5073d71ce074109bc
mkdocutils/structure/pages.py	self.active = False	eade3b1ec4ad145c56473464c726d890
mkdocutils/structure/toc.py	def url(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/toc.py	def indent_print(self, depth=0):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/toc.py	def get_toc(toc_tokens):	f6551d049dd665ae3820e11789e171fd
mkdocutils/structure/toc.py	def __iter__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/toc.py	def __len__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/toc.py	def __str__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/toc.py	def __str__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/toc.py	def __init__(self, items):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/toc.py	def __init__(self, title, id, level):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/toc.py	"""\n    Represents the table of contents for a given page.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/structure/toc.py	"""\n    A single entry in the table of contents.\n    """	a1a5fe835b13cf45f3d2aecf94947f3b
mkdocutils/structure/toc.py	return ''.join([str(item) for item in self])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	return '#' + self.id	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	indent = '    ' * depth	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	ret = '{}{} - {}\n'.format(indent, self.title, self.url)	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	anchor = AnchorLink(token['name'], token['id'], token['level'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	anchor = AnchorLink(token['name'], token['id'], token['level'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	anchor = AnchorLink(token['name'], token['id'], token['level'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	for i in token['children']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/toc.py	ret = '{}{} - {}\n'.format(indent, self.title, self.url)	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/toc.py	def __init__(self, items):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/toc.py	self.items = items	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/toc.py	return ''.join([str(item) for item in self])	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/toc.py	for item in self.children:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/toc.py	toc = [_parse_toc_token(i) for i in toc_tokens]	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/toc.py	for i in token['children']:	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/toc.py	def __init__(self, title, id, level):	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/structure/toc.py	self.title, self.id, self.level = title, id, level	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/structure/toc.py	class TableOfContents:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/toc.py	class AnchorLink:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/toc.py	return '#' + self.id	5aab3340e13b51ca518016d5b753ed33
mkdocutils/structure/toc.py	self.title, self.id, self.level = title, id, level	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/toc.py	self.title, self.id, self.level = title, id, level	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/toc.py	self.title, self.id, self.level = title, id, level	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/toc.py	if len(toc):	5d6bdd84aa8386b715a970689dc68b7c
mkdocutils/structure/toc.py	for item in self.children:	81a51cbd7e63a6ac317dc8a5e1b4a550
mkdocutils/structure/nav.py	""" Set active status of section and ancestors. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/nav.py	""" Build site navigation from config and files."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/nav.py	""" Build site navigation from config and files."""	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/nav.py	""" Return active status of section. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/nav.py	""" Build site navigation from config and files."""	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/nav.py	import logging	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/structure/nav.py	class Navigation:	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/structure/nav.py	class Section:	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/structure/nav.py	class Link:	6e2a5d5e0c0963ca11ab81e24d60f77a
mkdocutils/structure/nav.py	def ancestors(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/nav.py	def ancestors(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/nav.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/nav.py	def __iter__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/nav.py	def __len__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/nav.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/nav.py	def __repr__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/nav.py	def __init__(self, items, pages):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/nav.py	def __init__(self, title, children):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/nav.py	def __init__(self, title, url):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/nav.py	""" Return active status of section. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/nav.py	""" Set active status of section and ancestors. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/nav.py	""" Build site navigation from config and files."""	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/nav.py	return '\n'.join([item._indent_print() for item in self])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	ret = ['{}{}'.format('    ' * depth, repr(self))]	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	ret = ['{}{}'.format('    ' * depth, repr(self))]	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	return '\n'.join(ret)	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	) else '[blank]'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	return '{}{}'.format('    ' * depth, repr(self))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	return '{}{}'.format('    ' * depth, repr(self))	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	nav_config = config['nav'] or nest_paths(	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	'The following pages exist in the docs directory, but are not '	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	'\n  - '.join([file.src_path for file in missing_from_config]),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	elif link.url.startswith('/'):	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/nav.py	return "Section(title='{}')".format(self.title)	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	ret = ['{}{}'.format('    ' * depth, repr(self))]	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	title = "'{}'".format(self.title) if (	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	return "Link(title={}, url='{}')".format(title, self.url)	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	return '{}{}'.format('    ' * depth, repr(self))	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	'The following pages exist in the docs directory, but are not '	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	"An external link to '{}' is included in "	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	"An absolute path to '{}' is included in the 'nav' configuration, "	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	"A relative path to '{}' is included in the 'nav' configuration, "	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/nav.py	def _get_by_type(nav, T):	7611267c36b67e3145eba35e054f0e79
mkdocutils/structure/nav.py	value, files, config,	d79dee61a896c2d0cf1d5cf982166237
mkdocutils/structure/nav.py	# These should never change but are included for consistency with sections and pages.	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/nav.py	# Any documentation files not found in the nav should still have an associated page, so we	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/nav.py	# create them here. The Page object will automatically be assigned to `file.page` during	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/nav.py	# its creation (and this is the only way in which these page objects are accessable).	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/nav.py	def __init__(self, items, pages):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	self.items = items	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	return '\n'.join([item._indent_print() for item in self])	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	def _set_active(self, value):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for item in self.children:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	items = _data_to_navigation(nav_config, files, config)	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	items = [items]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	file for file in files.documentation_pages() if file.page is None	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	'\n  - '.join([file.src_path for file in missing_from_config]),	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for file in missing_from_config:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	scheme, netloc, path, params, query, fragment = urlparse(link.url)	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	def _data_to_navigation(data, files, config):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for key, value in data.items()	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for item in data	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	file = files.get_file_from_path(path)	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for item in nav:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	for item in nav:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/nav.py	f.src_path for f in files.documentation_pages()	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/nav.py	def _get_by_type(nav, T):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/nav.py	self.__active = bool(value)	c0ed1400d8d8772489000909201b1999
mkdocutils/structure/nav.py	0	9831bc0b16520a87985c73b52b3399ac
mkdocutils/structure/nav.py	def get_navigation(files, config):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/structure/nav.py	zipped = zip(bookended[:-2], bookended[1:-1], bookended[2:])	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/structure/nav.py	class Section:	b447e721a920c877e6b3fd37d84306d0
mkdocutils/structure/nav.py	class Link:	b447e721a920c877e6b3fd37d84306d0
mkdocutils/structure/nav.py	def get_navigation(files, config):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/structure/nav.py	def _data_to_navigation(data, files, config):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/structure/nav.py	class Navigation:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/nav.py	class Section:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/nav.py	class Link:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/nav.py	'included in the "nav" configuration:\n  - {}'.format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/structure/nav.py	"the 'nav' configuration.".format(link.url),	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/structure/nav.py	"which presumably points to an external resource.".format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/structure/nav.py	"which is not found in the documentation files".format(	462bfaeb4b8b737681e38fc7122527ce
mkdocutils/structure/nav.py	class Section:	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/structure/nav.py	page1.previous_page, page1.next_page = page0, page2	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/nav.py	page1.previous_page, page1.next_page = page0, page2	96898e544d22ff16a195f2fdc33c65b4
mkdocutils/structure/nav.py	return '\n'.join([item._indent_print() for item in self])	376bb44674c6ae9813a4968db904791e
mkdocutils/structure/nav.py	ret.append(item._indent_print(depth + 1))	376bb44674c6ae9813a4968db904791e
mkdocutils/structure/nav.py	self.active = False	eade3b1ec4ad145c56473464c726d890
mkdocutils/structure/files.py	""" Return a File instance with File.src_path equal to path. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Append file to Files collection. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Copy static files from source to destination. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Retrieve static files from Jinja environment and add to collection. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Retrieve static files from Jinja environment and add to collection. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Return destination path based on source path. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Return url based in destination path. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Return url for file relative to other file. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Copy source file to destination, ensuring parent directories exist. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Walk the `docs_dir` and return a Files collection. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Always sort `index` or `README` as first filename in list. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	5b8c74958c87e0b7c9bc56b062f954d6
mkdocutils/structure/files.py	""" Return a File instance with File.src_path equal to path. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return iterable of all Markdown page file objects. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return iterable of all static page file objects. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return iterable of all file objects which are not documentation or static pages. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return iterable of all javascript file objects. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return iterable of all CSS file objects. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return the name of the file without it's extension. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return destination path based on source path. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return url based in destination path. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return url for file relative to other file. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return True if file is a Markdown page. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return True if file is a static page (html, xml, json). """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return True if file is not a documentation or static page. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return True if file is a JavaScript file. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Return True if file is a CSS file. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Walk the `docs_dir` and return a Files collection. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" Always sort `index` or `README` as first filename in list. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	7f24a49f8deba361a61c93f5a2ba3384
mkdocutils/structure/files.py	import fnmatch	f89c18c51c263fcda4d5b554af5b30b4
mkdocutils/structure/files.py	def is_modified(self):	48a3388273e62842ea7b9ca5906507f3
mkdocutils/structure/files.py	def __iter__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/files.py	def __len__(self):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/files.py	def __contains__(self, path):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/files.py	def __eq__(self, other):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/files.py	def __ne__(self, other):	c08cfd6bcadd443680a3509324828e06
mkdocutils/structure/files.py	def __init__(self, files):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/files.py	def __init__(self, path, src_dir, dest_dir, use_directory_urls):	81d1a7fdc2b28aee7a567b3fad8bde09
mkdocutils/structure/files.py	""" A collection of File objects. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return a File instance with File.src_path equal to path. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Append file to Files collection. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Copy static files from source to destination. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return iterable of all Markdown page file objects. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return iterable of all static page file objects. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return iterable of all file objects which are not documentation or static pages. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return iterable of all javascript file objects. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return iterable of all CSS file objects. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Retrieve static files from Jinja environment and add to collection. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return the name of the file without it's extension. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return destination path based on source path. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return url based in destination path. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return url for file relative to other file. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Copy source file to destination, ensuring parent directories exist. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return True if file is a Markdown page. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return True if file is a static page (html, xml, json). """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return True if file is not a documentation or static page. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return True if file is a JavaScript file. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Return True if file is a CSS file. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Walk the `docs_dir` and return a Files collection. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Always sort `index` or `README` as first filename in list. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" .gitignore style file filtering. """	6540613b778e2767c10a6088e9c839eb
mkdocutils/structure/files.py	""" Always sort `index` or `README` as first filename in list. """	8c910c4311e73cbd5d3490128d6490f2
mkdocutils/structure/files.py	'.*', '*/.*', '*.py', '*.pyc',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.*', '*/.*', '*.py', '*.pyc',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.*', '*/.*', '*.py', '*.pyc',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.*', '*/.*', '*.py', '*.pyc',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'*.html', '*readme*', 'mkdocs_theme.yml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'*.html', '*readme*', 'mkdocs_theme.yml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'*.html', '*readme*', 'mkdocs_theme.yml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	patterns.extend('*{}'.format(x) for x in utils.markdown_extensions)	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	patterns.extend(config['theme'].static_templates)	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	for dir in config['theme'].dirs:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	File(path, dir, config['site_dir'], config['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	File(path, dir, config['site_dir'], config['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	return 'index' if stem in ('index', 'README') else stem	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	return 'index' if stem in ('index', 'README') else stem	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	return 'index' if stem in ('index', 'README') else stem	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if not use_directory_urls or self.name == 'index':	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	return os.path.join(parent, self.name + '.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	return os.path.join(parent, self.name, 'index.html')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	url = self.dest_path.replace(os.path.sep, '/')	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if use_directory_urls and filename == 'index.html':	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if dirname == '':	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	url = '.'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	url = dirname + '/'	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.html',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.htm',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.xml',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.json',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.js',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.javascript',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	'.css',	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	exclude = ['.*', '/templates']	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	exclude = ['.*', '/templates']	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	for source_dir, dirnames, filenames in os.walk(config['docs_dir'], followlinks=True):	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	relative_dir = os.path.relpath(source_dir, config['docs_dir'])	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if filename.lower() == 'readme.md' and 'index.md' in filenames:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if filename.lower() == 'readme.md' and 'index.md' in filenames:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	File(path, config['docs_dir'], config['site_dir'], config['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	File(path, config['docs_dir'], config['site_dir'], config['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	File(path, config['docs_dir'], config['site_dir'], config['use_directory_urls']),	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if os.path.splitext(y)[0] in ['index', 'README']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if os.path.splitext(y)[0] in ['index', 'README']:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if os.path.splitext(x)[0] in ['index', 'README'] or x < y:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if os.path.splitext(x)[0] in ['index', 'README'] or x < y:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if item.endswith('/') and not is_dir:	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	match = path if item.startswith('/') else basename	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	if fnmatch.fnmatch(match, item.strip('/')):	05c198233765297c55773dd4f0aef7c0
mkdocutils/structure/files.py	patterns.extend('*{}'.format(x) for x in utils.markdown_extensions)	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/files.py	log.debug("Skip copying unmodified file: '{}'".format(self.src_path))	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/files.py	log.debug("Copying media file: '{}'".format(self.src_path))	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/files.py	"Both index.md and readme.md found. Skipping readme.md from {}".format(source_dir),	2aa143575238f1af11a86b153c7d5976
mkdocutils/structure/files.py	""" Return iterable of all file objects which are not documentation or static pages. """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	# '.*' filters dot files/dirs at root level whereas '*/.*' filters nested levels	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	File(path, dir, config['site_dir'], config['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	"""\n    A MkDocs File object.\n\n    Points to the source and destination locations of a file.\n\n    The `path` argument must be a path that exists relative to `src_dir`.\n\n    The `src_dir` and `dest_dir` must be absolute paths on the local file system.\n\n    The `use_directory_urls` argument controls how destination paths are generated. If `False`, a Markdown file is\n    mapped to an HTML file of the same name (the file extension is changed to `.html`). If True, a Markdown file is\n    mapped to an HTML index file (`index.html`) nested in a directory using the "name" of the file in `path`. The\n    `use_directory_urls` argument has no effect on non-Markdown files.\n\n    File objects have the following properties, which are Unicode strings:\n\n    File.src_path\n        The pure path of the source file relative to the source directory.\n\n    File.abs_src_path\n        The absolute concrete path of the source file.\n\n    File.dest_path\n        The pure path of the destination file relative to the destination directory.\n\n    File.abs_dest_path\n        The absolute concrete path of the destination file.\n\n    File.url\n        The url of the destination file relative to the destination directory as a string.\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	"""\n    A MkDocs File object.\n\n    Points to the source and destination locations of a file.\n\n    The `path` argument must be a path that exists relative to `src_dir`.\n\n    The `src_dir` and `dest_dir` must be absolute paths on the local file system.\n\n    The `use_directory_urls` argument controls how destination paths are generated. If `False`, a Markdown file is\n    mapped to an HTML file of the same name (the file extension is changed to `.html`). If True, a Markdown file is\n    mapped to an HTML index file (`index.html`) nested in a directory using the "name" of the file in `path`. The\n    `use_directory_urls` argument has no effect on non-Markdown files.\n\n    File objects have the following properties, which are Unicode strings:\n\n    File.src_path\n        The pure path of the source file relative to the source directory.\n\n    File.abs_src_path\n        The absolute concrete path of the source file.\n\n    File.dest_path\n        The pure path of the destination file relative to the destination directory.\n\n    File.abs_dest_path\n        The absolute concrete path of the destination file.\n\n    File.url\n        The url of the destination file relative to the destination directory as a string.\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	"""\n    A MkDocs File object.\n\n    Points to the source and destination locations of a file.\n\n    The `path` argument must be a path that exists relative to `src_dir`.\n\n    The `src_dir` and `dest_dir` must be absolute paths on the local file system.\n\n    The `use_directory_urls` argument controls how destination paths are generated. If `False`, a Markdown file is\n    mapped to an HTML file of the same name (the file extension is changed to `.html`). If True, a Markdown file is\n    mapped to an HTML index file (`index.html`) nested in a directory using the "name" of the file in `path`. The\n    `use_directory_urls` argument has no effect on non-Markdown files.\n\n    File objects have the following properties, which are Unicode strings:\n\n    File.src_path\n        The pure path of the source file relative to the source directory.\n\n    File.abs_src_path\n        The absolute concrete path of the source file.\n\n    File.dest_path\n        The pure path of the destination file relative to the destination directory.\n\n    File.abs_dest_path\n        The absolute concrete path of the destination file.\n\n    File.url\n        The url of the destination file relative to the destination directory as a string.\n    """	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	return utils.get_relative_url(self.url, other.url if isinstance(other, File) else other)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	return os.path.getmtime(self.abs_dest_path) < os.path.getmtime(self.abs_src_path)	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	"Both index.md and readme.md found. Skipping readme.md from {}".format(source_dir),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	File(path, config['docs_dir'], config['site_dir'], config['use_directory_urls']),	fd8dcddaee3cd7f75683820a05f3c3e9
mkdocutils/structure/files.py	isinstance(other, self.__class__) and	01133cfa919d814e632499f755e32eee
mkdocutils/structure/files.py	self.src_path == other.src_path and	01133cfa919d814e632499f755e32eee
mkdocutils/structure/files.py	self.abs_src_path == other.abs_src_path and	01133cfa919d814e632499f755e32eee
mkdocutils/structure/files.py	self.src_paths = {file.src_path: file for file in files}	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	def append(self, file):	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	for file in self:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	return [file for file in self if file.is_documentation_page()]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	return [file for file in self if file.is_static_page()]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	return [file for file in self if file.is_media_file()]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	return [file for file in self if file.is_javascript()]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	return [file for file in self if file.is_css()]	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	for item in exclude:	e547b106dab483aa6c10f26900427c97
mkdocutils/structure/files.py	patterns.extend('*{}'.format(x) for x in utils.markdown_extensions)	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/files.py	def compare(x, y):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/files.py	def compare(x, y):	9cd6677e668f3d69bbc31c4699243e36
mkdocutils/structure/files.py	def filter(name):	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/structure/files.py	for dir in config['theme'].dirs:	2b8fdd09921b2fca4a1a0d27982f8af2
mkdocutils/structure/files.py	def get_files(config):	e6216db5a4fa03375f0b660916dec0bc
mkdocutils/structure/files.py	class Files:	f31baaad8f55f667a091708188847d5b
mkdocutils/structure/files.py	class File:	f31baaad8f55f667a091708188847d5b
mkdocutils/structure/files.py	self.append(	41fbc8fb1382f7537aeea50ea8160e4b
mkdocutils/structure/files.py	break	41fbc8fb1382f7537aeea50ea8160e4b
mkdocutils/structure/files.py	if os.path.splitext(x)[0] in ['index', 'README'] or x < y:	02c5ea560a79a1835ab30303d5d19cd0
mkdocutils/structure/files.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/structure/files.py	0	948d3e5603d42ddf50ac3b1f219a0088
mkdocutils/structure/files.py	class File:	b447e721a920c877e6b3fd37d84306d0
mkdocutils/structure/files.py	def add_files_from_theme(self, env, config):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/structure/files.py	def get_files(config):	646f32d5fdfbc80cd43cc6ca5f2747f8
mkdocutils/structure/files.py	class Files:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/files.py	class File:	72a53e4dd0380c8467f821e52f447566
mkdocutils/structure/files.py	patterns = [	dde2d343d968d51e07a47f88e4afec60
mkdocutils/structure/files.py	return os.path.join(parent, self.name + '.html')	5aab3340e13b51ca518016d5b753ed33
mkdocutils/structure/files.py	url = dirname + '/'	5aab3340e13b51ca518016d5b753ed33
mkdocutils/structure/files.py	class File:	4b639c55b81ecc3af8d3f08e4d704317
mkdocutils/structure/files.py	def filter(name):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/structure/files.py	def compare(x, y):	5d056fc84287822fb7e0542b4f3fcf8b
mkdocutils/structure/files.py	return os.path.join(parent, self.name, 'index.html')	de1d378bab0f506ff72b1e5ce370cc90
mkdocutils/structure/files.py	return 'index' if stem in ('index', 'README') else stem	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	return os.path.splitext(self.src_path)[1] in (	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	return os.path.splitext(self.src_path)[1] in (	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	return os.path.splitext(self.src_path)[1] in (	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	if os.path.splitext(y)[0] in ['index', 'README']:	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	if os.path.splitext(x)[0] in ['index', 'README'] or x < y:	b77af03d9bc24709c1887a7666cd8942
mkdocutils/structure/files.py	return os.path.splitext(self.src_path)[1] in (	4b7696084ec743dead9844159da322e5
